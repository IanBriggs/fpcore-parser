;; Algebraic: Fredtest (*)
;;
;; Origin: COCONUT
;; 6 equations and 2 inequalities defined by:
;;
;; delta:=1./30.:
;; cons1 := a1 + a2 + a3 + 1 =0
;; cons2 := a1 + 2*a2*x1 + 3*a3*x1^2 + 4*x1^3 =0
;; cons3 := a1 + 2*a2*x2 + 3*a3*x2^2 + 4*x2^3 =0
;; cons4 := a1 + 2*a2*x3 + 3*a3*x3^2 + 4*x3^3 =0
;; cons5 := a1*(x1+x2) + a2*(x1^2 + x2^2) + a3*(x1^3 + x2^3) + x1^4 + x2^4 =0
;; cons6 := a1*(x2+x3) + a2*(x2^2 + x3^2) + a3*(x2^3 + x3^3) + x2^4 + x3^4 =0
;; cons7 := x1 + delta -x2<= 0
;; cons8 := x2 + delta -x3<= 0
;;
;; with the a in [-10,10] and the x in [0,1].
;;
;; Solving method: HessianSolve+HullConsistency+3B (August 2004)+ Simp2B+IntervalNewton (May 2007)
;; Solutions:: 1 (exact)
;; Computation time :
;; DELL D400 (1.7GHz) (August 2004) 	over 60 mn
;; DELL D620 (1.7GHz) (May 2007) 	33mn38s
;; If we add equations such as cons2-cons1, cons3-cons2 etc.. that involves a1 the computation time is 90 seconds.

(FPCore algebraic_fredtest_1 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 1"
        :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ a1 a2) a3) 1))

(FPCore algebraic_fredtest_2 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 2"
        :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ a1 (* (* 2 a2) x1)) (* (* 3 a3) (pow x1 2))) (* 4 (pow x1 3))))

(FPCore algebraic_fredtest_3 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 3"
        :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ a1 (* (* 2 a2) x2)) (* (* 3 a3) (pow x2 2))) (* 4 (pow x2 3))))

(FPCore algebraic_fredtest_4 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 4"
         :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ a1 (* (* 2 a2) x3)) (* (* 3 a3) (pow x3 2))) (* 4 (pow x3 3))))

(FPCore algebraic_fredtest_5 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 5"
          :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ (+ (* a1 (+ x1 x2)) (* a2 (+ (pow x1 2) (pow x2 2)))) (* a3 (+ (pow x1 3) (pow x2 3)))) (pow x1 4)) (pow x2 4)))

(FPCore algebraic_fredtest_6 (a1 a2 a3 x1 x2 x3)
        :name "algebraic fredtest 6"
         :pre (and
                (<= (- 10) a1 10)
                (<= (- 10) a2 10)
                (<= (- 10) a3 10)
                (<= (- 10) x1 10)
                (<= (- 10) x2 10)
                (<= (- 10) x3 10)
                (- (+ x1 (/ 1 30)) x2)
                (- (+ x2 (/ 1 30)) x3))

        (+ (+ (+ (+ (* a1 (+ x2 x3)) (* a2 (+ (pow x2 2) (pow x3 2)))) (* a3 (+ (pow x2 3) (pow x3 3)))) (pow x2 4)) (pow x3 4)))

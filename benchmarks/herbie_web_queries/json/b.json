{"branch":"release","commit":"1.6","date":1668134295,"flags":["generate:rr","generate:taylor","generate:simplify","rules:arithmetic","rules:polynomials","rules:fractions","rules:exponents","rules:trigonometry","rules:hyperbolic","rules:numerics","rules:special","rules:bools","rules:branches","reduce:regimes","reduce:avg-error","reduce:binary-search","reduce:branch-expressions","setup:simplify","setup:search"],"hostname":"uwplse","iterations":2,"note":"Web demo results","points":256,"seed":"1","tests":[{"bits":128,"conversions":[],"cost-accuracy":"((13760 27.87176610271124) (13960 11.179608975524086) ((7492 13.148987817935042 (if (<= b 1.3e-144) (/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (* a 2.0)) (* (fma (/ c b) (/ a b) 1.0) (/ (- c) b)))) (7432 15.633296236692027 (if (<= b -2.6e-143) (- (/ c b) (/ b a)) (if (<= b 1.3e-144) (/ (- (sqrt (* c (* a -4.0))) b) (* a 2.0)) (* (fma (/ c b) (/ a b) 1.0) (/ (- c) b))))) (580 20.78069598374846 (if (<= b -8.8e-303) (- (/ c b) (/ b a)) (/ (- c) b))) (388 21.018914012047752 (if (<= b -8.8e-303) (- (/ b a)) (/ (- c) b))) (256 41.49968168387432 (- (/ b a)))))","end":11.179608975524086,"end-est":10.440234355361202,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"0c969162cc751e299289b44845ce487784a31d13.1.6","name":"(-b+sqrt(b^2-4*a*c))/(2*a)","output":"(if (<= b -1e-148) (/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (* a 2.0)) (if (<= b 1.3e-144) (/ 1.0 (/ a (* (- b (hypot b (sqrt (* a (* c -4.0))))) -0.5))) (* (fma (/ c b) (/ a b) 1.0) (/ (- c) b))))","pre":"(and (and (and (<= -1000000000.0 b) (<= b 1000000000.0)) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":27.87176610271124,"start-est":26.519163566758582,"status":"imp-start","target":false,"target-prog":"#f","time":16369.082763671875,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.244) (6848 0.1895) ((576 0.24375 (/ (+ 1.0 (* x x)) (- 1.0 x))) (320 51.89013090494575 (/ 1.0 (- 1.0 x))) (192 54.16448321303037 (+ x 1.0)) (64 54.44696805769911 1.0)))","end":0.1895,"end-est":0.15234375,"identifier":"#f","input":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","link":"de21370f523bf0794e2991efebfbebd61e12a5d8.1.6","name":"(1 + pow(x,2)) / (1-x)","output":"(/ (fma x x 1.0) (- 1.0 x))","pre":"(and (<= 0.9 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","start":0.244,"start-est":0.25,"status":"ex-start","target":false,"target-prog":"#f","time":4498.211181640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.0019364816370412092) (6592 0.0019364816370412092) ())","end":0.0019364816370412092,"end-est":0,"identifier":"#f","input":"(floor (/ ephem_start_delta_s window_duration_s))","link":"ea15f9647d201db2fee88538dffc3df14d98033c.1.6","name":"floor(ephem_start_delta_s / window_duration_s)","output":"(floor (/ ephem_start_delta_s window_duration_s))","pre":"(and (and (<= 0.0 ephem_start_delta_s) (<= ephem_start_delta_s 6311520000.0)) (and (<= 0.0 window_duration_s) (<= window_duration_s 518400.0)))","prec":"binary64","preprocess":"()","spec":"(floor (/ ephem_start_delta_s window_duration_s))","start":0.0019364816370412092,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1902.607666015625,"vars":["ephem_start_delta_s","window_duration_s"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.015375) (7232 0.01214624062518029) ((960 0.014625 (+ (/ 1.0 (- 1.0 x)) (* (* x x) (/ 1.0 (- 1.0 x))))) (192 0.7166335355682982 (+ x 1.0)) (64 1.3920831200294743 1.0)))","end":0.01214624062518029,"end-est":0.022684980164287515,"identifier":"#f","input":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","link":"c343aab3f73b7d96f7310c1c68b39f1143d5d647.1.6","name":"(1+pow(x,2))/(1-x)","output":"(* (/ (fma x x 1.0) (- 1.0 (* x x))) (+ x 1.0))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","start":0.015375,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":3922.5390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.015375) (7232 0.01214624062518029) ((960 0.014625 (+ (/ 1.0 (- 1.0 x)) (* (* x x) (/ 1.0 (- 1.0 x))))) (192 0.7166335355682982 (+ x 1.0)) (64 1.3920831200294743 1.0)))","end":0.01214624062518029,"end-est":0.022684980164287515,"identifier":"#f","input":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","link":"d72385e20ac8a5f9bf5d1d86ada10ad08f9f7c0b.1.6","name":"(1 + pow(x,2))/(1-x)","output":"(* (/ (fma x x 1.0) (- 1.0 (* x x))) (+ x 1.0))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (pow x 2.0)) (- 1.0 x))","start":0.015375,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":4399.170166015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((54464 1.319205529882398) (79616 0.6323666269983138) ((73216 0.6193846098220834 (/ 1.0 (/ (+ (* (* 0.0176058 (exp (+ (* -0.00177462 x) -6.36701))) (pow x 0.0057)) (* (* 0.8279 (/ (pow (exp x) -0.0217371) (exp 6.87129))) (pow x 0.8123))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (fma -0.761267 x -14.2397))))))))) (66944 0.6256300988871979 (/ 1.0 (/ (+ (* (* 0.0176058 (exp (+ (* -0.00177462 x) -6.36701))) (pow x 0.0057)) (* (* 0.8279 (/ (pow (exp x) -0.0217371) (exp 6.87129))) (pow x 0.8123))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (+ -14.2397 (* x -0.761267)))))))))) (60480 1.312531761094045 (/ 1.0 (/ (+ (* (* 0.0176058 (exp (+ (* -0.00177462 x) -6.36701))) (pow x 0.0057)) (* (pow x 0.8123) (* 0.8279 (exp (fma x -0.0217371 -6.87129))))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (+ -14.2397 (* x -0.761267)))))))))) (54208 1.319205529882398 (/ 1.0 (/ (+ (* (* 0.0176058 (exp (+ (* -0.00177462 x) -6.36701))) (pow x 0.0057)) (* (pow x 0.8123) (* 0.8279 (exp (+ -6.87129 (* x -0.0217371)))))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (+ -14.2397 (* x -0.761267)))))))))) (53952 40.534319617198875 (/ 1.0 (/ (+ (* (pow x 0.8123) (* 0.8279 (exp (+ -6.87129 (* x -0.0217371))))) (* (pow x 0.0057) (* 0.0176058 (exp -6.36701)))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (+ -14.2397 (* x -0.761267)))))))))) (53696 51.9597020350191 (/ 1.0 (/ (+ (* (pow x 0.0057) (* 0.0176058 (exp -6.36701))) (* (pow x 0.8123) (* 0.8279 (exp -6.87129)))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (pow x 8.4834) (* 0.592482 (exp (+ -14.2397 (* x -0.761267))))))))))))","end":0.6323666269983138,"end-est":0.6339227051372825,"identifier":"#f","input":"(/ 1.0 (/ (+ (* (* 0.0176058 (exp (- (* (- 0.00177462) x) 6.36701))) (pow x 0.0057)) (* (* 0.8279 (exp (- (* (- 0.0217371) x) 6.87129))) (pow x 0.8123))) (+ (+ (* (* 0.34 (exp (- (* (- 0.210748) x) 10.7371))) (pow x 3.9259)) (* (* 0.592482 (exp (- (* (- 0.761267) x) 14.2397))) (pow x 8.4834))) 1.0)))","link":"a4e7cb35ca4640fe5d2f0de4ee495b53d2d158bd.1.6","name":"1/((0.0176058*exp(-0.00177462*x-6.36701)*pow(x,0.0057)+0.8279*exp(-0.0217371*x-6.87129)*x^0.8123)/(0.34*exp(-0.210748*x-10.7371)*pow(x,3.9259)+0.592482*exp(-0.761267*x-14.2397)*pow(x,8.4834)+1))","output":"(/ 1.0 (/ (+ (* (* 0.0176058 (exp (+ (* -0.00177462 x) -6.36701))) (pow x 0.0057)) (* (* 0.8279 (/ (pow (exp x) -0.0217371) (exp 6.87129))) (pow x 0.8123))) (+ 1.0 (+ (* (* 0.34 (exp (+ (* x -0.210748) -10.7371))) (pow x 3.9259)) (* (* 0.592482 (pow E (fma -0.761267 x -14.2397))) (pow x 8.4834))))))","pre":"(and (<= 10.0 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (/ (+ (* (* 0.0176058 (exp (- (* (- 0.00177462) x) 6.36701))) (pow x 0.0057)) (* (* 0.8279 (exp (- (* (- 0.0217371) x) 6.87129))) (pow x 0.8123))) (+ (+ (* (* 0.34 (exp (- (* (- 0.210748) x) 10.7371))) (pow x 3.9259)) (* (* 0.592482 (exp (- (* (- 0.761267) x) 14.2397))) (pow x 8.4834))) 1.0)))","start":1.319205529882398,"start-est":1.3410096835176948,"status":"apx-start","target":false,"target-prog":"#f","time":17811.983642578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26624 2.8345732519248106) (39168 0.9917294909387101) ((32832 1.1301636168011218 (* (/ (pow (* beta x) alpha) (pow (exp x) beta)) (/ (/ 1.0 x) (exp (lgamma alpha))))) (32704 1.1045615033769096 (/ (/ (pow (* beta x) alpha) x) (* (pow (exp x) beta) (exp (lgamma alpha))))) (26368 1.244656415603504 (/ (/ (pow (* beta x) alpha) x) (* (exp (lgamma alpha)) (exp (* beta x))))) (26304 1.389284466762184 (* (/ (pow (* beta x) alpha) x) (exp (- (fma x beta (lgamma alpha)))))) (26240 1.3814466008211808 (/ (/ (pow (* beta x) alpha) x) (exp (fma beta x (lgamma alpha))))) (19968 1.3758060188645869 (/ (/ (pow (* beta x) alpha) x) (exp (+ (lgamma alpha) (* beta x))))) (19712 50.80706876677221 (/ (/ (pow (* beta x) alpha) x) (exp (lgamma alpha)))) (13312 55.050029004636706 (/ (exp (- (* x (- beta)) (lgamma alpha))) x)) (13184 55.273203924801585 (exp (- (* x (- beta)) (lgamma alpha)))) (6656 55.32777763553009 (exp (* x (- beta))))))","end":0.9917294909387101,"end-est":1.0503762674328538,"identifier":"#f","input":"(exp (- (+ (+ (* alpha (log beta)) (* (- alpha 1.0) (log x))) (* (- beta) x)) (lgamma alpha)))","link":"e56178e58bc1c48aeb1bca3878cc9b1c8a453000.1.6","name":"exp(alpha * log(beta) + (alpha-1) * log(x) + (-beta * x) - lgamma(alpha))","output":"(/ (/ (* (pow beta alpha) (pow x alpha)) x) (* (pow (exp x) beta) (exp (lgamma alpha))))","pre":"(and (and (and (<= 1.0 alpha) (<= alpha 10.0)) (and (<= 0.0001 beta) (<= beta 1.0))) (and (<= 10.0 x) (<= x 100.0)))","prec":"binary64","preprocess":"()","spec":"(exp (- (+ (+ (* alpha (log beta)) (* (- alpha 1.0) (log x))) (* (- beta) x)) (lgamma alpha)))","start":2.8345732519248106,"start-est":2.909652561586897,"status":"imp-start","target":false,"target-prog":"#f","time":13223.322265625,"vars":["alpha","beta","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26624 1.3795458293060976) (26176 0.1513169954565946) ((19968 5.648625310803701 (/ (/ (pow (* beta x) alpha) x) (exp (+ (lgamma alpha) (* beta x))))) (19712 5.6939900160672865 (/ (/ (pow (* beta x) alpha) x) (exp (lgamma alpha)))) (19520 12.240275146586862 (exp (* alpha (+ (log beta) (log x))))) (6656 61.79620939940931 (exp (* beta (- x))))))","end":0.1513169954565946,"end-est":0.18923363846143215,"identifier":"#f","input":"(exp (- (+ (+ (* alpha (log beta)) (* (- alpha 1.0) (log x))) (* (- beta) x)) (lgamma alpha)))","link":"e2e73b612f64f32c8201dabb426e7888145f005c.1.6","name":"exp(alpha * log(beta) + (alpha-1) * log(x) + (-beta * x) - lgamma(alpha))","output":"(/ (pow beta alpha) (* (exp (lgamma alpha)) (pow x (- 1.0 alpha))))","pre":"(and (and (and (<= 1.0 alpha) (<= alpha 10.0)) (and (<= 0.0 beta) (<= beta 1.0))) (and (<= 0.0 x) (<= x 100.0)))","prec":"binary64","preprocess":"()","spec":"(exp (- (+ (+ (* alpha (log beta)) (* (- alpha 1.0) (log x))) (* (- beta) x)) (lgamma alpha)))","start":1.3795458293060976,"start-est":1.3737412169242396,"status":"imp-start","target":false,"target-prog":"#f","time":10374.02587890625,"vars":["alpha","beta","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.003875) (6592 0.003875) ((6596 1.1391541146332813 (if (<= x 11.838166527802752) (sqrt 42.0) (sqrt x))) (6464 41.488625724266264 (sqrt x))))","end":0.003875,"end-est":0.0078125,"identifier":"#f","input":"(sqrt (+ x 42.0))","link":"9c27febac8711958f9ed37e36a421cef9f36b61e.1.6","name":"sqrt(x + 42)","output":"(sqrt (+ x 42.0))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ x 42.0))","start":0.003875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2727.700439453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03119116562662261) (13120 0.03119116562662261) ((6848 0.6900291785421054 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 2.8510785463234565 1.0)))","end":0.03119116562662261,"end-est":0.04296875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"f880377ee1203e3d3d05cd174225b936e42d6de1.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= -1000.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03119116562662261,"start-est":0.04296875,"status":"ex-start","target":false,"target-prog":"#f","time":4635.88916015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.005375) (6592 0.005375) ((6596 1.1874134483440262 (if (<= x 0.00013285194984064778) (sqrt 2.0) (sqrt x))) (6464 41.363363296505725 (sqrt x))))","end":0.005375,"end-est":0.00390625,"identifier":"#f","input":"(sqrt (+ x 2.0))","link":"7dfd12b7bf8fd85b50eb35ca11f3fb36b0780d15.1.6","name":"sqrt(x + 2)","output":"(sqrt (+ x 2.0))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ x 2.0))","start":0.005375,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2767.93896484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.010826848078683) (26308 0.4257994320300945) ((13248 0.5970212406251804 (/ 7.0 (+ (sqrt (+ 7.0 x)) (sqrt x)))) (6852 2.105095468672227 (if (<= x 0.0007865835300043417) (sqrt 7.0) (* 3.5 (sqrt (/ 1.0 x))))) (6464 31.224880182223167 (sqrt 7.0))))","end":0.4257994320300945,"end-est":0.4224537753252197,"identifier":"#f","input":"(- (sqrt (+ x 7.0)) (sqrt x))","link":"0d5c41fa40a970b6301fa6d150629bc94e758ab6.1.6","name":"sqrt(x + 7) - sqrt(x)","output":"(if (<= (- (sqrt (+ 7.0 x)) (sqrt x)) 0.0002) (* 3.5 (sqrt (/ 1.0 x))) (- (sqrt (+ 7.0 x)) (sqrt x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 7.0)) (sqrt x))","start":30.010826848078683,"start-est":29.642885033853172,"status":"imp-start","target":false,"target-prog":"#f","time":6254.45703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(asinh x)","link":"8aaa184659aac3a9df268090ba5c2f3dd9cb1266.1.6","name":"asinh(x)","output":"#f","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(asinh x)","start":false,"start-est":false,"status":"crash","target":false,"target-prog":"#f","time":1524.602294921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 15.632570558339824) (13120 0.17810864687698316) ((13508 0.43202727052733714 (if (<= (cos x) 0.9999998) (- 1.0 (cos x)) (* x (* x (fma (* x x) -0.041666666666666664 0.5))))) (13124 0.5243820297290499 (if (<= (cos x) 0.9999998) (- 1.0 (cos x)) (* x (* x 0.5)))) (576 26.743992834775657 (/ 1.0 (+ 0.16666666666666666 (/ 2.0 (* x x))))) (320 30.844528063612348 (* x (* x 0.5)))))","end":0.17810864687698316,"end-est":0.23828125,"identifier":"#f","input":"(- 1.0 (cos x))","link":"d7371300492f29fa444f51d8e2d77859d868e5d7.1.6","name":"1-cos(x)","output":"(* (sin x) (tan (/ x 2.0)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (cos x))","start":15.632570558339824,"start-est":12.495072911545464,"status":"imp-start","target":false,"target-prog":"#f","time":9439.75146484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 29.224730197759637) (6788 0.320375) ((6592 30.872931853934 (* x (sqrt 5.0)))))","end":0.320375,"end-est":0.30078125,"identifier":"#f","input":"(sqrt (* (pow x 2.0) 5.0))","link":"154cc5b25791ed20411d0c1e496d52ee7f885fa8.1.6","name":"sqrt(x^2 * 5) ","output":"(if (<= x -8.60812670911072e-309) (* (sqrt 5.0) (- x)) (* x (sqrt 5.0)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (* (pow x 2.0) 5.0))","start":29.224730197759637,"start-est":28.143543150941316,"status":"imp-start","target":false,"target-prog":"#f","time":4374.2548828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19584 0.008) (12992 0.00725) ())","end":0.00725,"end-est":0.0078125,"identifier":"#f","input":"(* (sin (+ x (/ PI 2.0))) (sqrt x))","link":"f452045899dedf3d6d76a2ac38a2ad211bdae9a9.1.6","name":"sin(x+PI/2) * sqrt(x)","output":"(* (cos x) (sqrt x))","pre":"(and (<= -1000000000.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(* (sin (+ x (/ PI 2.0))) (sqrt x))","start":0.008,"start-est":0.020195019536884032,"status":"ex-start","target":false,"target-prog":"#f","time":5233.94921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.292353743518234) (13248 0.167160526564393) ((26308 0.3459871206070517 (if (<= (- (sqrt (+ 1.0 x)) (sqrt x)) 5e-5) (* 0.5 (sqrt (/ 1.0 x))) (- (sqrt (+ 1.0 x)) (sqrt x)))) (6980 0.9999044437213336 (if (<= x 0.4073144346803506) (+ (* x 0.5) (- 1.0 (sqrt x))) (* 0.5 (sqrt (/ 1.0 x))))) (6852 2.0772263268196367 (if (<= x 2.3046462401226706e-5) 1.0 (* 0.5 (sqrt (/ 1.0 x))))) (64 31.574808072490427 1.0)))","end":0.167160526564393,"end-est":0.205410009768442,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"3e41c02b9cc28f012cfb884da0e299ce264deef5.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":30.292353743518234,"start-est":29.475616751911623,"status":"imp-start","target":false,"target-prog":"#f","time":5873.125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 59.28400870782551) (26816 0.30438585109119365) ((26560 0.3031310475785707 (fma x (* x (fma x 0.3333333333333333 -0.5)) (+ (* 0.2 (pow x 5.0)) (* -0.25 (pow x 4.0))))) (26368 0.30273909520255954 (fma x (* x (fma x (fma x -0.25 0.3333333333333333) -0.5)) (* 0.2 (pow x 5.0)))) (13696 0.4196941098727392 (fma x (+ (* x (* 0.3333333333333333 x)) (* x -0.5)) (* -0.25 (pow x 4.0)))) (13568 0.4267837648933035 (+ (* -0.25 (pow x 4.0)) (* (fma x 0.3333333333333333 -0.5) (* x x)))) (13376 0.42327225586217 (* x (* x (fma x (fma x -0.25 0.3333333333333333) -0.5)))) (704 0.6789073425860294 (* x (+ (* x (* 0.3333333333333333 x)) (* x -0.5)))) (320 1.3647116981946013 (* x (* x -0.5))) (192 30.28741610476797 (- x x)) (128 60.21207718118311 (- x))))","end":0.30438585109119365,"end-est":0.5295536238294263,"identifier":"#f","input":"(- (log (+ 1.0 x)) x)","link":"87e5d5d39d0e463219e251094e60dfdc3abc4b6d.1.6","name":"log(1+x)-x","output":"(+ (* 0.3333333333333333 (pow x 3.0)) (+ (* 0.2 (pow x 5.0)) (+ (* -0.5 (pow x 2.0)) (* -0.25 (pow x 4.0)))))","pre":"(and (<= -0.7 x) (<= x 1.5))","prec":"binary64","preprocess":"()","spec":"(- (log (+ 1.0 x)) x)","start":59.28400870782551,"start-est":58.90048730703279,"status":"imp-start","target":false,"target-prog":"#f","time":10489.9404296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 58.78273305057543) (26368 0.3546926196528202) ((13376 0.4773884268029391 (* (* x x) (fma x (fma x -0.25 0.3333333333333333) -0.5))) (13376 0.47174268329909297 (* x (* x (fma x (fma -0.25 x 0.3333333333333333) -0.5)))) (704 0.7290645140050077 (* x (+ (* x (* x 0.3333333333333333)) (* x -0.5)))) (320 1.4036838235965194 (* x (* x -0.5))) (192 30.959501629109642 (- x x)) (128 59.57641430198066 (- x))))","end":0.3546926196528202,"end-est":0.4040362946213281,"identifier":"#f","input":"(- (log (+ 1.0 x)) x)","link":"bc8189084a4d18099a63791fa4e75926b090d6d3.1.6","name":"log(1+x)-x","output":"(fma x (* x (fma x (fma -0.25 x 0.3333333333333333) -0.5)) (* 0.2 (pow x 5.0)))","pre":"(and (<= 0.0 x) (<= x 1.5))","prec":"binary64","preprocess":"()","spec":"(- (log (+ 1.0 x)) x)","start":58.78273305057543,"start-est":58.7102862685486,"status":"imp-start","target":false,"target-prog":"#f","time":10738.781005859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ 3.33 3.7)","link":"5ac2c26ce73411188dc2f49d0a59cfcae12d0c93.1.6","name":"3.33 / 3.7","output":"0.9","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 3.33 3.7)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":978.17822265625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ 3.3 3.7)","link":"9d068d2905734022fc5806b16629e756f5b0916f.1.6","name":"3.3 / 3.7","output":"0.8918918918918918","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 3.3 3.7)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1242.707275390625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((7680 0) (7488 0) ((448 0.0775 (+ 1.0 (* 3.314 (/ m_air r1_drop))))))","end":0,"end-est":0,"identifier":"#f","input":"(+ 1.0 (* (/ (* 2.0 m_air) r1_drop) (+ 1.257 (* 0.4 (exp (/ (/ (* (- 1.1) r1_drop) 2.0) m_air))))))","link":"5c5f7ba27e690294197a19e37b8b7302da89f312.1.6","name":"1 + 2*m_air/r1_drop * (1.257 + 0.4 * exp(-1.1*r1_drop/2/m_air))","output":"(+ 1.0 (* (/ (* 2.0 m_air) r1_drop) (+ 1.257 (* 0.4 (exp (/ r1_drop (/ m_air -0.55)))))))","pre":"(and (and (<= 1e-12 m_air) (<= m_air 1e-11)) (and (<= 100000.0 r1_drop) (<= r1_drop 400000.0)))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (* (/ (* 2.0 m_air) r1_drop) (+ 1.257 (* 0.4 (exp (/ (/ (* (- 1.1) r1_drop) 2.0) m_air))))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4946.906005859375,"vars":["m_air","r1_drop"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.29066697514751055) (26176 0.07265229294981702) ((13120 0.05475868882161717 (- (pow x -12.0) (pow x -6.0))) (6788 5.068622721387162 (if (<= x 0.9840392508616198) (pow x -12.0) (/ -1.0 (pow x 6.0)))) (6528 9.217006353676963 (pow x -12.0))))","end":0.07265229294981702,"end-est":0.08127873016428752,"identifier":"#f","input":"(- (/ 1.0 (pow x 12.0)) (/ 1.0 (pow x 6.0)))","link":"b54eef6d756aa0a9066c8c1170ecb500b73f2de3.1.6","name":"1/x^12 - 1/x^6","output":"(fma 1.0 (pow x -12.0) (* (pow x -4.0) (- (pow x -2.0))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (pow x 12.0)) (/ 1.0 (pow x 6.0)))","start":0.29066697514751055,"start-est":0.29085715476030194,"status":"ex-start","target":false,"target-prog":"#f","time":5687.306396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin x)","link":"e04a2b8ec37ad6aea58e125d5f49d4cd4bdec2d4.1.6","name":"sin(x)","output":"(sin x)","pre":"(and (<= 0.0 x) (<= x 0.7853981633974483))","prec":"binary64","preprocess":"()","spec":"(sin x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2762.666748046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 0.1936274437510817) (13504 0.1084742484399339) ((1216 0.1936274437510817 (/ (+ (+ (* a (* a (* a 2.0))) (* b (* a -9.0))) (* c 27.0)) 54.0)) (576 9.416267392383594 (+ (* c 0.5) (* b (* a -0.16666666666666666)))) (576 9.419664136929727 (+ (* -0.16666666666666666 (* a b)) (* c 0.5))) (452 16.986826609353677 (if (<= b 5.486088713292631e-32) (* c 0.5) (* -0.16666666666666666 (* a b)))) (192 16.523203372757287 (* c 0.5))))","end":0.1084742484399339,"end-est":0.10384750976844202,"identifier":"#f","input":"(/ (+ (- (* (* (* 2.0 a) a) a) (* (* 9.0 a) b)) (* 27.0 c)) 54.0)","link":"25855a28aa8bf6ab716d7de652747a2dbf47d695.1.6","name":"(2.0 * a * a * a - 9.0 * a * b + 27.0 * c) / 54.0","output":"(fma c 0.5 (* a (fma (* a a) 0.037037037037037035 (* b -0.16666666666666666))))","pre":"(and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- (* (* (* 2.0 a) a) a) (* (* 9.0 a) b)) (* 27.0 c)) 54.0)","start":0.1936274437510817,"start-est":0.1953125,"status":"ex-start","target":false,"target-prog":"#f","time":6590.29833984375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 38.600354640334196) (6528 0.5188626242691283) ((6924 13.45741111279023 (if (<= z 2.865673028366786e-12) (hypot y x) (if (<= z 6118906792785.8955) z (if (<= z 1.325701855116913e+93) (hypot y x) z)))) (524 13.841558181689292 (if (<= z 2.865673028366786e-12) (- x) (if (<= z 7.867465851213692e+32) z (if (<= z 1.325701855116913e+93) (- x) z)))) (64 30.424208662498827 z)))","end":0.5188626242691283,"end-est":22.46681937964923,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"d5463e8b5ac0acafb379555ea1e2f52216f0e2e5.1.6","name":"sqrt(x*x + y*y + z*z)","output":"(hypot z x)","pre":"(and (and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 y) (<= y 1.79e+308))) (and (<= -1.79e+308 z) (<= z 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":38.600354640334196,"start-est":40.20482420146898,"status":"imp-start","target":false,"target-prog":"#f","time":5180.89794921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 7.21504632786579) (6528 1.0304083191736353) ((6660 12.66723631420475 (if (<= z 3.218745192287356e-141) (- (/ (* y y) (/ x -0.5)) x) (hypot z y))) (708 12.948258422528452 (if (<= z 3.218745192287356e-141) (- (/ (* y y) (/ x -0.5)) x) z)) (260 13.150318408022166 (if (<= z 3.218745192287356e-141) (- x) z)) (64 30.92594755534192 z)))","end":1.0304083191736353,"end-est":22.18484470373377,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"8905af23c0d58ddf18be142d53ece58453677d3f.1.6","name":"sqrt(x*x + y*y + z*z)","output":"(hypot z x)","pre":"(and (and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0))) (and (<= -1000.0 z) (<= z 1000.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":7.21504632786579,"start-est":7.354535447404847,"status":"imp-start","target":false,"target-prog":"#f","time":5675.751220703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((20096 27.09924741906033) (960 0.1388333705022302) ((960 0.3494768957035978 (* (/ 0.5 a) (+ b (* (/ (+ a c) b) (- a c))))) (708 13.595284110822831 (if (<= c 9.5e-91) (* 0.5 (+ (/ b a) (/ a b))) (* (/ -0.5 a) (/ c (/ b c))))) (708 13.600949512714159 (if (<= c 9.5e-91) (* 0.5 (+ (/ b a) (/ a b))) (* -0.5 (/ (* c (/ c a)) b)))) (704 0.967473901422365 (* 0.5 (/ (- b (* c (/ c b))) a))) (576 17.943693367186853 (* 0.5 (+ (/ b a) (/ a b)))) (320 18.94723600320798 (* b (/ 0.5 a))) (320 18.74800740067966 (* 0.5 (/ b a)))))","end":0.1388333705022302,"end-est":0.12890625,"identifier":"#f","input":"(/ (- (+ (pow a 2.0) (pow b 2.0)) (pow c 2.0)) (* (* 2.0 a) b))","link":"c21d09d1fdf678ee700ba5668fe6a80b841b1958.1.6","name":"(a^2 + b^2 - c^2) / (2 * a * b)","output":"(* 0.5 (+ (/ b a) (/ (- a (* c (/ c a))) b)))","pre":"(and (and (and (<= 0.0 a) (<= a 100.0)) (and (<= 0.0 b) (<= b 100.0))) (and (<= 0.0 c) (<= c 100.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (pow a 2.0) (pow b 2.0)) (pow c 2.0)) (* (* 2.0 a) b))","start":27.09924741906033,"start-est":32.022359471766976,"status":"imp-start","target":false,"target-prog":"#f","time":9916.7890625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 4.2956805526810955) (13504 0.3336984968798679) ((13120 4.2956805526810955 (- (sqrt (+ x 1.0)) (sqrt x))) (6720 45.362071284186165 (* (sqrt (/ 1.0 x)) 0.5)) (64 53.736220141002 1.0)))","end":0.3336984968798679,"end-est":0.3366012695368841,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"e71bde46cdcc782cf4de0f5da08ec7e790047cf5.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":4.2956805526810955,"start-est":4.245305765872322,"status":"imp-start","target":false,"target-prog":"#f","time":5360.47265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ x y) 2.0)","link":"4f10e884cd41c155fbd46ecb5a68d1d88342c5c3.1.6","name":"(x + y) / 2","output":"(/ (+ x y) 2.0)","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1820.394287109375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ x y) 2.0)","link":"a280fccf4f0bf980c2b4b710d04724f7e6c42e29.1.6","name":"(x + y) / 2","output":"(/ (+ x y) 2.0)","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1824.739013671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19200 1.5849625007212742) (12800 1.0) ())","end":1.0,"end-est":1.0,"identifier":"#f","input":"(pow E PI)","link":"f27db248b27cbfb13f1a032dde5531502d18da03.1.6","name":"pow(E, PI)","output":"(exp PI)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(pow E PI)","start":1.5849625007212742,"start-est":1.58496250072115,"status":"apx-start","target":false,"target-prog":"#f","time":2644.15380859375,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(log (- 1.0 (+ (/ 1.0 1.0) (exp (- x)))))","link":"31fc47f6a472360e93b2730b8c52d7e8f9b89256.1.6","name":"log(1-(1/1+exp(-x)))","output":"#f","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(log (- 1.0 (+ (/ 1.0 1.0) (exp (- x)))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":1.456787109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(log (- 1.0 (+ (/ 1.0 1.0) (exp (- x)))))","link":"ed0e6d3d861745e8804a9aca6e9ea3373593ddb4.1.6","name":"log(1-(1/1+exp(-x)))","output":"#f","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(log (- 1.0 (+ (/ 1.0 1.0) (exp (- x)))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":3.771728515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13440 0) (6976 0.0023239416629355926) ((6720 30.07662839257922 (+ 1.0 (tanh (/ a x)))) (320 32.39763346489753 (+ 1.0 (/ a x)))))","end":0.0023239416629355926,"end-est":0,"identifier":"#f","input":"(+ 1.0 (* (exp (/ (- 1.0) x)) (tanh (/ a x))))","link":"68597ff19f5905433f8372e589f1c81373b2e7dc.1.6","name":"1+exp(-1/x)*tanh(a/x)","output":"(+ 1.0 (/ (* a (exp (/ -1.0 x))) x))","pre":"(and (and (<= 0.0 x) (<= x 1000.0)) (and (<= -1.0 a) (<= a 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (* (exp (/ (- 1.0) x)) (tanh (/ a x))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4801.216064453125,"vars":["x","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13312 14.769959715645731) (13312 14.769959715645731) ((6852 22.899865133609882 (if (<= a 7.177593778965646e-148) 1.0 (+ 1.0 (tanh (/ a 0.0))))) (64 29.893507614265133 1.0)))","end":14.769959715645731,"end-est":17.826115375276835,"identifier":"#f","input":"(+ 1.0 (* (exp (- x)) (tanh (/ a x))))","link":"58f40f426d50fef9d633eb3aa3784542b7558047.1.6","name":"1+exp(-x)*tanh(a/x)","output":"(+ 1.0 (* (exp (- x)) (tanh (/ a x))))","pre":"(and (and (<= 0.0 x) (<= x 1000.0)) (and (<= -1.0 a) (<= a 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (* (exp (- x)) (tanh (/ a x))))","start":14.769959715645731,"start-est":17.826115375276835,"status":"apx-start","target":false,"target-prog":"#f","time":5763.537109375,"vars":["x","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.8075268908898247) (12864 0.64225) ((6720 2.1463121335456314 (+ (* x 0.5) (log 2.0))) (6464 2.9147642149374624 (log 2.0)) (192 61.4341919489451 (* x 0.5))))","end":0.64225,"end-est":0.5078125,"identifier":"#f","input":"(log (+ 1.0 (exp x)))","link":"55db5308985ad6a9f4f00bbbf5f15d43a1e80321.1.6","name":"log(1 + exp(x))","output":"(log1p (exp x))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp x)))","start":0.8075268908898247,"start-est":0.9478662953786334,"status":"ex-start","target":false,"target-prog":"#f","time":3426.075439453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((21056 26.30508017009827) (55936 1.772866268432818) ((55808 9.073512916555444 (+ (+ (* y (- 1.0 (+ (/ 1.0 (+ x 1.0)) (/ (* x (- (+ 2.0 (* -0.5 (- 2.0 x))) x)) (pow (+ x 1.0) 2.0))))) (- (/ x (+ x 1.0)) (* (+ (/ (* (- (+ 2.0 (* -0.5 (- 2.0 x))) x) (+ (/ -1.0 (+ x 1.0)) (/ (* x (+ x (+ -2.0 (* 0.5 (- 2.0 x))))) (pow (+ x 1.0) 2.0)))) (+ x 1.0)) (- (/ 1.0 (+ x 1.0)) (/ (* x (- (* -0.5 (- 2.0 x)) x)) (pow (+ x 1.0) 2.0)))) (pow y 2.0)))) (* (pow y 3.0) (+ (/ (* x (+ x (- -1.1666666666666667 (* -0.5 (- 2.0 x))))) (pow (+ x 1.0) 2.0)) (+ (/ (* (- (+ 2.0 (* -0.5 (- 2.0 x))) x) 0.25) (+ x 1.0)) (+ (/ (* (+ x (* 0.5 (- 2.0 x))) (+ (/ 1.0 (+ x 1.0)) (/ (* x (- (+ 2.0 (* -0.5 (- 2.0 x))) x)) (pow (+ x 1.0) 2.0)))) (+ x 1.0)) (* 0.5 (/ -1.0 (+ x 1.0))))))))) (320 10.67151343906323 (/ x (+ x 1.0))) (64 60.34076306522871 y)))","end":1.772866268432818,"end-est":1.7855066646246402,"identifier":"#f","input":"(- y (/ (- (* y (exp y)) x) (- (* (+ 1.0 y) (exp y)) (/ (* (+ y 2.0) (- (* y (exp y)) x)) (* 2.0 (+ 1.0 y))))))","link":"796060b6c1799e02e54a32d701ee25e120e161f3.1.6","name":"y - ((y*exp(y)-x) / ((1+y) * exp(y) - (y + 2) * (y*exp(y)-x) / (2 * (1+y))))","output":"(+ (* (pow y 3.0) (+ (/ (* x (+ x (- -1.1666666666666667 (* -0.5 (- 2.0 x))))) (pow (+ x 1.0) 2.0)) (+ (/ (* (* x 1.5) (- (+ 2.0 (* -0.5 (- 2.0 x))) x)) (+ x 1.0)) (+ (/ (* (+ x (* 0.5 (- 2.0 x))) (+ (/ 1.0 (+ x 1.0)) (/ (* x (- (+ 2.0 (* -0.5 (- 2.0 x))) x)) (pow (+ x 1.0) 2.0)))) (+ x 1.0)) (* 0.5 (/ -1.0 (+ x 1.0))))))) (+ (* y (- 1.0 (+ (/ 1.0 (+ x 1.0)) (/ (* x (- (+ 2.0 (* -0.5 (- 2.0 x))) x)) (pow (+ x 1.0) 2.0))))) (- (/ x (+ x 1.0)) (* (+ (/ (* (- (+ 2.0 (* -0.5 (- 2.0 x))) x) (+ (/ -1.0 (+ x 1.0)) (/ (* x (+ x (+ -2.0 (* 0.5 (- 2.0 x))))) (pow (+ x 1.0) 2.0)))) (+ x 1.0)) (- (/ 1.0 (+ x 1.0)) (/ (* x (- (* -0.5 (- 2.0 x)) x)) (pow (+ x 1.0) 2.0)))) (pow y 2.0)))))","pre":"(and (and (<= -1000.0 y) (<= y 1000.0)) (and (<= -1000.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- y (/ (- (* y (exp y)) x) (- (* (+ 1.0 y) (exp y)) (/ (* (+ y 2.0) (- (* y (exp y)) x)) (* 2.0 (+ 1.0 y))))))","start":26.30508017009827,"start-est":29.89093037800775,"status":"imp-start","target":false,"target-prog":"#f","time":15083.082763671875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((21056 1.6476306384047548) (13632 0.9896814740507257) ((7488 1.0724506260894147 (* y (+ (* y (+ -0.5 (* y (+ -0.5 (* x -0.3333333333333333))))) (fma 0.5 x 1.0)))) (6976 1.2330478356184928 (* y (+ (fma 0.5 x 1.0) (* y -0.5)))) (6720 1.5908602207639184 (fma (* x 0.5) y y)) (448 1.60387268113705 (* y (+ 1.0 (* x 0.5)))) (320 52.07917330057877 (* y (- 0.5 y))) (192 52.08297787416224 (* y 0.5))))","end":0.9896814740507257,"end-est":0.875942809643972,"identifier":"#f","input":"(- y (- (* (/ (- (* y (exp y)) x) (+ 1.0 y)) (exp y)) (/ (* (+ y 2.0) (- (* y (exp y)) x)) (* 2.0 (+ y 1.0)))))","link":"bf002cc6f2e956a64bc51f8dfbdaaa5fd9d09e1a.1.6","name":"y-((y*exp(y)-x) / (1+y)*exp(y) - (y+2)*(y*exp(y)-x)/(2*(y+1)))","output":"(fma (/ (- (* y (exp y)) x) (+ y 1.0)) (* y -0.5) y)","pre":"(and (and (<= -1000.0 y) (<= y 1000.0)) (and (<= -1000.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- y (- (* (/ (- (* y (exp y)) x) (+ 1.0 y)) (exp y)) (/ (* (+ y 2.0) (- (* y (exp y)) x)) (* 2.0 (+ y 1.0)))))","start":1.6476306384047548,"start-est":2.539724291810983,"status":"apx-start","target":false,"target-prog":"#f","time":9033.6123046875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01525) (576 0.01525) ((712 9.137339875938736 (if (<= c -18500.0) (+ a 1.0) (if (<= c 5.934072810690899e+90) (+ a (/ b (- c a))) (+ a 1.0)))) (712 4.77974459373843 (if (<= c -18500.0) (+ a (/ (+ b c) c)) (if (<= c 6.2478941620742494e-114) (+ a (/ b (- c a))) (+ a (/ (+ b c) c))))) (584 18.376220808688537 (if (<= b -7e+234) (+ a (/ b c)) (if (<= b 1.6481598876494536e+77) (+ a 1.0) (+ a (/ b c))))) (584 10.824194089533954 (if (<= a -6.116136713783598e-10) (+ a 1.0) (if (<= a 8.552682812631116e-35) (+ 1.0 (/ b c)) a))) (584 9.959654888560948 (if (<= a -8440.166367249809) (- a (/ b a)) (if (<= a 1.0059210259591572e-84) (+ 1.0 (/ b c)) (- a (/ b a))))) (192 18.734764396166916 (+ a 1.0)) (64 31.70924256008453 a)))","end":0.01525,"end-est":0.015625,"identifier":"#f","input":"(- a (/ (+ b c) (- a c)))","link":"b0c7f664bd71792506bcf9904af38d5f1e8ca6d9.1.6","name":"a - (b + c) / (a * b - c)","output":"(+ a (/ (+ b c) (- c a)))","pre":"(and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- a (/ (+ b c) (- a c)))","start":0.01525,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":6619.166259765625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01525) (576 0.01525) ((712 9.137339875938736 (if (<= c -18500.0) (+ a 1.0) (if (<= c 5.934072810690899e+90) (+ a (/ b (- c a))) (+ a 1.0)))) (712 4.77974459373843 (if (<= c -18500.0) (+ a (/ (+ b c) c)) (if (<= c 6.2478941620742494e-114) (+ a (/ b (- c a))) (+ a (/ (+ b c) c))))) (648 9.959654888560948 (if (<= a -8440.166367249809) (+ a (/ b (- a))) (if (<= a 1.0059210259591572e-84) (+ 1.0 (/ b c)) (+ a (/ b (- a)))))) (584 18.376220808688537 (if (<= b -7e+234) (+ a (/ b c)) (if (<= b 1.6481598876494536e+77) (+ a 1.0) (+ a (/ b c))))) (584 10.717363091367588 (if (<= a -6.116136713783598e-10) (+ a 1.0) (if (<= a 2.8228421251686765e-43) (+ 1.0 (/ b c)) (+ a 1.0)))) (192 18.734764396166916 (+ a 1.0))))","end":0.01525,"end-est":0.015625,"identifier":"#f","input":"(- a (/ (+ b c) (- a c)))","link":"edd97eff4d4b980ca00e62bc288af2399d6345e2.1.6","name":"a - (b + c) / (a - c)","output":"(+ a (/ (+ b c) (- c a)))","pre":"(and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- a (/ (+ b c) (- a c)))","start":0.01525,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":6131.294677734375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0) (12928 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin (/ (* (* 2.0 PI) 100.0) 44100.0))","link":"fd748d725d6b3db3ae87076d4c7c6abbfb08b07c.1.6","name":"sin(2*PI*100/44100)","output":"(sin (* PI 0.0045351473922902496))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sin (/ (* (* 2.0 PI) 100.0) 44100.0))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2178.195068359375,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((13312 0) (12928 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin (/ (* (* (* 5.0 2.0) PI) 100.0) 44100.0))","link":"dcb0aa6baed6b62e8fca905e5d2fa4b95e52c6c5.1.6","name":"sin(5*2*PI*100/44100)","output":"(sin (* PI 0.022675736961451247))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sin (/ (* (* (* 5.0 2.0) PI) 100.0) 44100.0))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2357.3349609375,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.417375) (6848 0.34107869680188874) ((6592 0.6494857040124264 (log (* x 2.0)))))","end":0.34107869680188874,"end-est":0.371933110106747,"identifier":"#f","input":"(log (+ x (sqrt (- (* x x) 1.0))))","link":"47750202fe51f3828bdb9ce14854266819c83cd9.1.6","name":"log(x+sqrt(x*x-1))","output":"(log (+ x (+ x (/ -0.5 x))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (- (* x x) 1.0))))","start":31.417375,"start-est":31.50390625,"status":"imp-start","target":false,"target-prog":"#f","time":6527.883056640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.3499411656266226) (26304 0.33891992500144236) ((20032 0.36070545156583556 (* (/ (pow (+ 1.0 (/ 1.0 x)) x) E) (sqrt (+ 1.0 (/ 1.0 x))))) (13376 0.48790513852963385 (/ (pow (+ 1.0 (/ 1.0 x)) (+ x 0.5)) E)) (13248 1.826452316419589 (sqrt (* (+ 1.0 (/ 1.0 x)) (exp -2.0)))) (6720 52.52761865777106 (sqrt (+ 1.0 (/ 1.0 x)))) (64 59.54378614609618 1.0)))","end":0.33891992500144236,"end-est":0.34603500976844204,"identifier":"#f","input":"(* (exp (- (* x (log1p (/ 1.0 x))) 1.0)) (sqrt (+ 1.0 (/ 1.0 x))))","link":"f305db6f098e457768ad3aa2b02e5a3dd1abc5bc.1.6","name":"(exp (x * log1p (1 / x) - 1) * sqrt (1 + 1 / x))","output":"(* (exp (+ (* x (log1p (/ 1.0 x))) -1.0)) (hypot 1.0 (pow x -0.5)))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(* (exp (- (* x (log1p (/ 1.0 x))) 1.0)) (sqrt (+ 1.0 (/ 1.0 x))))","start":0.3499411656266226,"start-est":0.41539003907376804,"status":"ex-start","target":false,"target-prog":"#f","time":8038.1181640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.001625) (448 0.001625) ())","end":0.001625,"end-est":0,"identifier":"#f","input":"(- (+ x y) (* x y))","link":"57abf6da97ccc937a95428a5d9da7842879f7f3e.1.6","name":"x+y-x*y","output":"(- (+ x y) (* x y))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (+ x y) (* x y))","start":0.001625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2508.794677734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.14894812031259017) (320 0.001875) ())","end":0.001875,"end-est":0,"identifier":"#f","input":"(/ 1.0 (/ input_impedance (+ input_impedance PF3W_SENSOR_OUTPUT_IMPEDANCE)))","link":"fc8784c3e5a9c8018fe91cb17a54a08802da3758.1.6","name":"1.0 / (input_impedance / (input_impedance + PF3W_SENSOR_OUTPUT_IMPEDANCE))","output":"(+ 1.0 (/ PF3W_SENSOR_OUTPUT_IMPEDANCE input_impedance))","pre":"(and (and (<= 0.0 input_impedance) (<= input_impedance 65000.0)) (and (<= 0.0 PF3W_SENSOR_OUTPUT_IMPEDANCE) (<= PF3W_SENSOR_OUTPUT_IMPEDANCE 65000.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (/ input_impedance (+ input_impedance PF3W_SENSOR_OUTPUT_IMPEDANCE)))","start":0.14894812031259017,"start-est":0.171875,"status":"ex-start","target":false,"target-prog":"#f","time":2301.62255859375,"vars":["input_impedance","PF3W_SENSOR_OUTPUT_IMPEDANCE"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.011125) (6720 0) ((584 11.269977510896293 (if (<= x -3.995338754667922e-256) (- x (* t x)) (if (<= x 5.260180646556186e-306) (* t y) (- x (* t x))))) (456 11.892661362033031 (if (<= x -3.995338754667922e-256) x (if (<= x 5.260180646556186e-306) (* t y) x))) (448 0.00625 (+ x (* t (- y x)))) (320 0.6767690377401288 (+ x (* t y))) (64 11.29222914743508 x)))","end":0,"end-est":0,"identifier":"#f","input":"(+ (* x (- 1.0 t)) (* y t))","link":"0981c47f768d9f4a60c0b5381e92e90bc1bffcf3.1.6","name":"x*(1-t) + y*t","output":"(fma t (- y x) x)","pre":"(and (and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* x (- 1.0 t)) (* y t))","start":0.011125,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3615.140869140625,"vars":["x","t","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* x 0.5) (* y 0.5))","link":"11e5333bbda79571bcf545709118759591b308bf.1.6","name":"x*.5 + y*.5","output":"(* 0.5 (+ x y))","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* x 0.5) (* y 0.5))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1831.35107421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* x 0.5) (* y 0.5))","link":"b0e01e6b0927f8a68ffe38a401eb3acfa7f012e5.1.6","name":"x*.5 + y*.5","output":"(* 0.5 (+ x y))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* x 0.5) (* y 0.5))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1845.497802734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (+ x y) 0.5)","link":"52da6f0827ba8f64835f3f712b1eb02642ab58e2.1.6","name":"(x + y)*.5","output":"(* (+ x y) 0.5)","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(* (+ x y) 0.5)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1661.11376953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((46208 12.210823442655398) (165644 1.8203532212516698) ((6916 4.383161189046631 (if (<= b -9.409418597585009e-31) (/ (- (fma r r a)) b) (/ a (hypot b a)))) (6656 5.0679216917630745 (/ a (hypot b a))) (2508 26.685479804108613 (if (<= b -6.4e-138) (/ (- a) b) (if (<= b -1.75e-144) (* a (/ -1.0 a)) (if (<= b -5.6e-248) (+ 1.0 (- (- (* (/ (- (* b b) (* r r)) a) (/ 0.5 a)) (* (/ r (/ a r)) (/ b a))) (* (/ b a) (/ b a)))) (if (<= b -8e-302) -1.0 (if (<= b 7e-285) (+ 1.0 (* -0.5 (/ (/ r (/ a r)) a))) (if (<= b 2.7e-266) -1.0 (if (<= b 2.55e-202) (+ 1.0 (* -0.5 (/ (/ r (/ a r)) a))) (if (<= b 3.5e-157) -1.0 (if (<= b 7.5e-142) 1.0 (/ (- a (* r r)) b))))))))))) (1636 26.742589484403428 (if (<= b -6.4e-138) (/ (- a) b) (if (<= b -2.1e-142) (* a (/ -1.0 a)) (if (<= b -5.6e-248) 1.0 (if (<= b -1e-300) -1.0 (if (<= b 1.95e-284) 1.0 (if (<= b 8e-267) -1.0 (if (<= b 1.05e-195) 1.0 (if (<= b 3.5e-157) -1.0 (if (<= b 7.5e-142) 1.0 (/ (- a (* r r)) b))))))))))) (1636 26.61544255594521 (if (<= b -6.4e-138) (/ (- a) b) (if (<= b -1.75e-144) (* a (/ -1.0 a)) (if (<= b -4.5e-236) (+ 1.0 (* -0.5 (/ (/ r (/ a r)) a))) (if (<= b -8e-302) -1.0 (if (<= b 7e-285) (+ 1.0 (* -0.5 (/ (/ r (/ a r)) a))) (if (<= b 2.7e-266) -1.0 (if (<= b 2.55e-202) (+ 1.0 (* -0.5 (/ (/ r (/ a r)) a))) (if (<= b 3.5e-157) -1.0 (if (<= b 7.5e-142) 1.0 (/ (- a (* r r)) b))))))))))) (1380 29.100708924630908 (if (<= b -6.4e-138) (/ (- a) b) (if (<= b -2.1e-142) -1.0 (if (<= b -5.6e-248) 1.0 (if (<= b -1e-300) -1.0 (if (<= b 1.95e-284) 1.0 (if (<= b 8e-267) -1.0 (if (<= b 1.05e-195) 1.0 (if (<= b 3.5e-157) -1.0 (if (<= b 7.5e-142) 1.0 (/ a b))))))))))) (1380 29.10083392463091 (if (<= b -6.4e-138) (/ (- a) b) (if (<= b -2.1e-142) (* a (/ -1.0 a)) (if (<= b -5.6e-248) 1.0 (if (<= b -1e-300) -1.0 (if (<= b 1.95e-284) 1.0 (if (<= b 8e-267) -1.0 (if (<= b 1.05e-195) 1.0 (if (<= b 3.5e-157) -1.0 (if (<= b 7.5e-142) 1.0 (/ a b))))))))))) (456 26.64184636483993 (if (<= a -2.95e-154) -1.0 (if (<= a 5.5e-151) (/ a b) 1.0))) (196 31.050481284879762 (if (<= a -2.5e-307) -1.0 1.0)) (64 46.87633621252687 1.0)))","end":1.8203532212516698,"end-est":1.7076704916958425,"identifier":"#f","input":"(/ (+ (* (- b) (pow r 2.0)) (* a (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0))))) (+ (pow a 2.0) (pow b 2.0)))","link":"2cfc17d13adf65056a5997c2c60e285be449c433.1.6","name":"(-b r^2 + a sqrt(a^2 + b^2 - r^2)) / (a^2 + b^2)","output":"(if (<= (/ (- (* a (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (* b (pow r 2.0))) (+ (pow a 2.0) (pow b 2.0))) -2e-166) (/ (fma a (sqrt (- (fma b b (* a a)) (* r r))) (* b (* r (- r)))) (fma b b (* a a))) (if (<= (/ (- (* a (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (* b (pow r 2.0))) (+ (pow a 2.0) (pow b 2.0))) 2e-198) (/ a (hypot b a)) (if (<= (/ (- (* a (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (* b (pow r 2.0))) (+ (pow a 2.0) (pow b 2.0))) 1.0) (/ (fma a (sqrt (- (fma b b (* a a)) (* r r))) (* b (* r (- r)))) (fma b b (* a a))) (/ a (hypot b a)))))","pre":"(and (and (and (<= -1000000000.0 b) (<= b 1000000000.0)) (and (<= -1000000000.0 r) (<= r 1000000000.0))) (and (<= -1000000000.0 a) (<= a 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (* (- b) (pow r 2.0)) (* a (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0))))) (+ (pow a 2.0) (pow b 2.0)))","start":12.210823442655398,"start-est":10.59956175429086,"status":"imp-start","target":false,"target-prog":"#f","time":25129.880615234375,"vars":["b","r","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 21.938905463384508) (13376 0.2940404140665564) ((13120 0.39918458750793295 (pow (/ r (hypot a b)) 2.0)) (13120 0.4154641160334967 (pow (/ (hypot a b) r) -2.0)) (7556 0.8084889678974918 (if (<= a -1.1218482855346277e-181) (/ r (+ (* b (/ b r)) (* a (/ a r)))) (pow (+ (* (/ b r) (/ b r)) (* (/ a r) (/ a r))) -1.0))) (836 20.108418065299038 (if (<= a -2.278063405816608e-164) (* r (/ r (+ (* b b) (* a a)))) (if (<= a -4.22419877834536e-188) (* (/ r a) (/ r a)) (* (/ r b) (/ r b))))) (832 2.4368098997596563 (/ r (+ (* b (/ b r)) (* a (/ a r))))) (580 30.700056059387297 (if (<= a -3.196596952826535e-151) (/ (* r (/ r b)) b) (/ r (* b (/ b r))))) (580 25.64240056443774 (if (<= a -7.927103543938966e-150) (/ (/ (* r r) a) a) (/ r (* b (/ b r))))) (580 20.98550964460946 (if (<= b 6.832914317112104e-164) (* (/ r a) (/ r a)) (/ r (* b (/ b r))))) (580 23.402096914838882 (if (<= a -4.22419877834536e-188) (* (/ r a) (/ r a)) (* (/ r b) (/ r b)))) (448 31.41654187437029 (/ r (* b (/ b r))))))","end":0.2940404140665564,"end-est":0.25,"identifier":"#f","input":"(/ (pow r 2.0) (+ (pow a 2.0) (pow b 2.0)))","link":"d56e78830721d08a6b50954cd22c6de799a9f26b.1.6","name":"r^2/(a^2+b^2)","output":"(/ (/ r (hypot a b)) (/ (hypot a b) r))","pre":"(and (and (and (<= -1000000000.0 r) (<= r 1000000000.0)) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (pow r 2.0) (+ (pow a 2.0) (pow b 2.0)))","start":21.938905463384508,"start-est":22.195340696783166,"status":"imp-start","target":false,"target-prog":"#f","time":8931.857666015625,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((39424 19.671282857871397) (39688 0.4120557703103579) ((33160 0.35025841886502196 (if (<= r -2e-162) (* r (/ (sqrt (+ (* a a) (- (* b b) (* r r)))) (fma a a (* b b)))) (if (<= r 2.9e-163) (* (/ r (hypot a b)) (/ (hypot (hypot a b) (sqrt (* r (- r)))) (hypot a b))) (* r (/ (sqrt (- (fma a a (* b b)) (* r r))) (fma a a (* b b))))))) (20420 30.486862505385332 (if (<= a -1.15e-156) (* r (/ (sqrt (- (fma a a (* b b)) (* r r))) (fma a a (* b b)))) (+ (/ r b) (* -0.5 (pow (/ r b) 3.0))))) (14148 30.487706866323105 (if (<= a -1.15e-156) (* r (/ (sqrt (+ (* a a) (- (* b b) (* r r)))) (fma a a (* b b)))) (+ (/ r b) (* -0.5 (pow (/ r b) 3.0))))) (13508 31.014812814659766 (if (<= a -1.1e-151) (* r (sqrt (/ 1.0 (fma b b (* a a))))) (+ (/ r b) (* -0.5 (pow (/ r b) 3.0))))) (7436 36.01022186760409 (if (<= b 1.06e-229) (/ (- r) a) (if (<= b 1.4e-210) (/ r b) (if (<= b 3.9e-159) (/ (- r) a) (+ (/ r b) (* -0.5 (pow (/ r b) 3.0))))))) (652 36.074093229897805 (if (<= b 1.06e-229) (/ (- r) a) (if (<= b 1.4e-210) (/ r b) (if (<= b 6.5e-158) (/ (- r) a) (/ r b))))) (192 46.68375340499865 (/ r a)) (192 47.26415801489989 (/ r b))))","end":0.4120557703103579,"end-est":0.2538871774016921,"identifier":"#f","input":"(/ (* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (+ (pow a 2.0) (pow b 2.0)))","link":"eccee0cd9ebb40890777dd91ff8ca25069f5ff5c.1.6","name":"(r sqrt(a^2 + b^2 - r^2)) / (a^2 + b^2)","output":"(if (<= r -2e-162) (/ (* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (+ (pow a 2.0) (pow b 2.0))) (if (<= r 1.5e-172) (* (/ r (hypot a b)) (/ (hypot (hypot a b) (sqrt (* r (- r)))) (hypot a b))) (/ (* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (+ (pow a 2.0) (pow b 2.0)))))","pre":"(and (and (and (<= -1000000000.0 r) (<= r 1000000000.0)) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0)))) (+ (pow a 2.0) (pow b 2.0)))","start":19.671282857871397,"start-est":17.011706545664516,"status":"imp-start","target":false,"target-prog":"#f","time":17745.787109375,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((26240 0.015186481637041211) (7232 0.015186481637041211) ((6656 0.8593868369678864 (* r (hypot a b))) (836 22.74734539014034 (if (<= b 1.32e-135) (* r (- (* (* r r) (/ 0.5 a)) a)) (* r b))) (388 22.876957931899693 (if (<= b 2.8e-138) (* r (- a)) (* r b))) (192 31.289206132478878 (* r b))))","end":0.015186481637041211,"end-est":0.02734375,"identifier":"#f","input":"(* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0))))","link":"802c7b5e15ab4d234cbab3302db566357e73a01e.1.6","name":"r sqrt(a^2 + b^2 - r^2)","output":"(* r (sqrt (- (+ (* a a) (* b b)) (* r r))))","pre":"(and (and (and (<= -1000000000.0 r) (<= r 1000000000.0)) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(* r (sqrt (- (+ (pow a 2.0) (pow b 2.0)) (pow r 2.0))))","start":0.015186481637041211,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":9104.484130859375,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((1472 5.203852331666656) (15172 1.149592933229608) ((15172 1.149904414866649 (if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (- INFINITY)) (+ (* w4 t3) (fma 3.0 (fma w2 (* mt2 t) (* mt (* w3 t2))) (* w1 mt3))) (if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) 2e+282) (+ (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3)) (fma 3.0 (+ (* w2 (* mt2 t)) (* w3 (* mt t2))) (+ (* w4 t3) (* w1 mt3)))))) (10184 1.108769812917018 (if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (- INFINITY)) (fma 3.0 (+ (* w2 (* mt2 t)) (* w3 (* mt t2))) (+ (* w4 t3) (* w1 mt3))) (if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) 2e+282) (+ (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3)) (fma 3.0 (+ (* w2 (* mt2 t)) (* w3 (* mt t2))) (+ (* w4 t3) (* w1 mt3)))))) (7748 3.5345081239569143 (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (- INFINITY)) (fma w4 t3 (* 3.0 (* mt2 (* w2 t)))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) -5e-30) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 5e+133) (+ (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3)) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 2e+299) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (+ (* w1 mt3) (* 3.0 (+ (* mt2 (* w2 t)) (* t2 (* w3 mt)))))))))) (4560 3.572863236684167 (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (- INFINITY)) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) -1e+15) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 4e-299) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* t2 (* 3.0 (* w3 mt))))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 2e+299) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (+ (* w1 mt3) (* 3.0 (+ (* mt2 (* w2 t)) (* t2 (* w3 mt)))))))))) (4560 3.534881477033324 (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (- INFINITY)) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) -5e-30) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 5e+133) (+ (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3)) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 2e+299) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* w3 (* mt (* 3.0 t2))))) (+ (* w1 mt3) (* 3.0 (+ (* mt2 (* w2 t)) (* t2 (* w3 mt)))))))))) (3016 4.390507737715694 (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) -2e+293) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) 5e+235) (+ (* w4 t3) (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* t2 (* 3.0 (* w3 mt))))) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t))))))) (2524 25.237487073068348 (if (<= (* w4 t3) -1.2930110106139075e-41) (+ (* w4 t3) (* 3.0 (* t2 (* w3 mt)))) (if (<= (* w4 t3) -5.115317292361822e-138) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) -9.277706541522945e-167) (* (* w3 t2) (* 3.0 mt)) (if (<= (* w4 t3) 4.559690235897745e-146) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) 4.309153164147548e-91) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt)))) (if (<= (* w4 t3) 2.9661624717283053e-62) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) 2.6251444573794166e+32) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt)))) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))))))))))) (2272 18.50211306972195 (if (<= mt3 -1.8569111954833784e-149) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (if (<= mt3 -4.2085063608526846e-215) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 2.1193485408776007e-265) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= mt3 1.159015083185317e-137) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 1.7310286802480268e-52) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (if (<= mt3 1.138893377306692e-11) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 151843848495513.75) (+ (* w1 mt3) (* 3.0 (+ (* mt2 (* w2 t)) (* t2 (* w3 mt))))) (if (<= mt3 1e+75) (+ (* w4 t3) (+ (* w1 mt3) (+ (+ (* t2 (* 3.0 (* w3 mt))) 1.0) -1.0))) (if (<= mt3 1e+187) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))))))))))))) (2264 24.948929775846583 (if (<= (* w4 t3) -1.2930110106139075e-41) (+ (* w4 t3) (* 3.0 (* t2 (* w3 mt)))) (if (<= (* w4 t3) -5.115317292361822e-138) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) -9.277706541522945e-167) (* (* w3 t2) (* 3.0 mt)) (if (<= (* w4 t3) 4.559690235897745e-146) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) 2.5629568894590193e-101) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt)))) (if (<= (* w4 t3) 3.440734842446666e+29) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (+ (* w4 t3) (* 3.0 (* t2 (* w3 mt))))))))))) (2148 18.447037991427635 (if (<= mt3 -1.8569111954833784e-149) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (if (<= mt3 -4.2085063608526846e-215) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 2.1193485408776007e-265) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= mt3 1.159015083185317e-137) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 1.7310286802480268e-52) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (if (<= mt3 1.138893377306692e-11) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 17179698845425.201) (+ (* w1 mt3) (* 3.0 (+ (* mt2 (* w2 t)) (* t2 (* w3 mt))))) (if (<= mt3 1e+75) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (if (<= mt3 1e+187) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))))))))))))) (1744 24.139527760124775 (if (<= (* w4 t3) -3.710743498139941e-24) (+ (* w4 t3) (* w1 mt3)) (if (<= (* w4 t3) -5.115317292361822e-138) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) -9.277706541522945e-167) (* (* w3 t2) (* 3.0 mt)) (if (<= (* w4 t3) 203397389176910.47) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (+ (* w4 t3) (* w1 mt3))))))) (1744 24.88498135533785 (if (<= (* w4 t3) -1.2930110106139075e-41) (+ (* w4 t3) (* 3.0 (* t2 (* w3 mt)))) (if (<= (* w4 t3) -5.115317292361822e-138) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (if (<= (* w4 t3) -9.277706541522945e-167) (* (* w3 t2) (* 3.0 mt)) (if (<= (* w4 t3) 3.440734842446666e+29) (+ (* w1 mt3) (* 3.0 (* w2 (* mt2 t)))) (+ (* w4 t3) (* 3.0 (* t2 (* w3 mt))))))))) (1356 13.439193882214804 (if (<= mt2 -1e+50) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (if (<= mt2 -2.885701902305832e-108) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))) (if (<= mt2 75.0) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t (* w2 mt2))))))))) (1108 32.490103462560285 (if (<= w3 -7.2e+262) (+ (* w4 t3) (* w1 mt3)) (if (<= w3 -5e+200) (* 3.0 (* t2 (* w3 mt))) (if (<= w3 -3.35e+106) (+ (* w4 t3) (* w1 mt3)) (if (<= w3 -2.684935376674951e+73) (* 3.0 (* t (* w2 mt2))) (if (<= w3 3.2093146700274387e-175) (+ (* w4 t3) (* w1 mt3)) (* (* w3 t2) (* 3.0 mt)))))))) (1092 17.521446666721005 (if (<= mt2 -8.772264931166061e-63) (+ (* w4 t3) (* 3.0 (* w2 (* mt2 t)))) (+ (* w4 t3) (+ (* w1 mt3) (* 3.0 (* t2 (* w3 mt))))))) (712 37.3851613763931 (if (<= (* w4 t3) -3.710743498139941e-24) (* w4 t3) (if (<= (* w4 t3) 3.440734842446666e+29) (* w1 mt3) (* w4 t3)))) (712 29.302937620083974 (if (<= mt2 -3.617206785039349e-48) (* 3.0 (* mt2 (* w2 t))) (if (<= mt2 5.5e+16) (+ (* w4 t3) (* w1 mt3)) (* 3.0 (* t (* w2 mt2)))))) (712 28.780036891263904 (if (<= mt -1.9e+18) (* (* w3 t2) (* 3.0 mt)) (if (<= mt 5.8e+43) (+ (* w4 t3) (* w1 mt3)) (* (* w3 t2) (* 3.0 mt))))) (580 30.543617982815746 (if (<= t 8e+206) (+ (* w4 t3) (* w1 mt3)) (* 3.0 (* t (* w2 mt2))))) (448 31.05259293849868 (+ (* w4 t3) (* w1 mt3))) (192 46.63810167776889 (* w4 t3))))","end":1.149592933229608,"end-est":1.6536633001509173,"identifier":"#f","input":"(+ (+ (+ (* w1 mt3) (* (* (* 3.0 w2) mt2) t)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3))","link":"bd061cf100360f04e1be46913a9b1ae25eb841f4.1.6","name":"w1*mt3 + 3*w2*mt2*t + 3*w3*mt*t2 + w4*t3","output":"(if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (- INFINITY)) (+ (fma (fma (* w3 t2) mt (* w2 (* mt2 t))) 3.0 (* w1 mt3)) (* w4 t3)) (if (<= (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) 2e+282) (+ (+ (+ (* (* (* 3.0 w2) mt2) t) (* w1 mt3)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3)) (fma 3.0 (+ (* w2 (* mt2 t)) (* w3 (* mt t2))) (+ (* w4 t3) (* w1 mt3)))))","pre":"(and (and (and (and (and (and (and (and (and (and (<= -1.79e+308 w1) (<= w1 1.79e+308)) (and (<= -1.79e+308 mt3) (<= mt3 1.79e+308))) (and (<= -1.79e+308 w2) (<= w2 1.79e+308))) (and (<= -1.79e+308 mt2) (<= mt2 1.79e+308))) (and (<= -1.79e+308 t) (<= t 1.79e+308))) (and (<= -1.79e+308 w3) (<= w3 1.79e+308))) (and (<= -1.79e+308 mt) (<= mt 1.79e+308))) (and (<= -1.79e+308 t2) (<= t2 1.79e+308))) (and (<= -1.79e+308 w4) (<= w4 1.79e+308))) (and (<= -1.79e+308 t3) (<= t3 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* w1 mt3) (* (* (* 3.0 w2) mt2) t)) (* (* (* 3.0 w3) mt) t2)) (* w4 t3))","start":5.203852331666656,"start-est":6.141944550150917,"status":"imp-start","target":false,"target-prog":"#f","time":44405.592041015625,"vars":["w1","mt3","w2","mt2","t","w3","mt","t2","w4","t3"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.116625) (6592 0.116625) ((64 27.76712248731637 a)))","end":0.116625,"end-est":0.1328125,"identifier":"#f","input":"(* a (cos t))","link":"3b30d34a151c638368559c1ac2a855592d04d3e0.1.6","name":"a*cos(t)","output":"(* a (cos t))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 t) (<= t 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(* a (cos t))","start":0.116625,"start-est":0.1328125,"status":"ex-start","target":false,"target-prog":"#f","time":5096.3203125,"vars":["a","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.116625) (6592 0.116625) ((64 27.76712248731637 A)))","end":0.116625,"end-est":0.1328125,"identifier":"#f","input":"(* A (cos t))","link":"73d959d0a9fe1ed1380f35124bea9943c0bbaf0e.1.6","name":"A*cos(t)","output":"(* A (cos t))","pre":"(and (and (<= -1.79e+308 A) (<= A 1.79e+308)) (and (<= -1.79e+308 t) (<= t 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(* A (cos t))","start":0.116625,"start-est":0.1328125,"status":"ex-start","target":false,"target-prog":"#f","time":5207.314697265625,"vars":["A","t"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(log (log (+ 1.0 (exp (exp x)))))","link":"2b5fb15cbba213e42eeb3ee6af4c5acc49eef78c.1.6","name":"log(log(1+exp(exp(x))))","output":"#f","pre":"(and (<= 1000.0 x) (<= x 1e+100))","prec":"binary64","preprocess":"()","spec":"(log (log (+ 1.0 (exp (exp x)))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":1381.29736328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 15.756625) (6528 0.004375) ())","end":0.004375,"end-est":0,"identifier":"#f","input":"(sqrt (+ (* x x) 1.0))","link":"f3c90ed9590010fa3bc4b4f2af3e065d58564951.1.6","name":"sqrt(x*x+1)","output":"(hypot 1.0 x)","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) 1.0))","start":15.756625,"start-est":19.5,"status":"imp-start","target":false,"target-prog":"#f","time":1657.720947265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 31.17372733040236) (6528 0.002625) ())","end":0.002625,"end-est":0,"identifier":"#f","input":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","link":"30a604cf93209c96af07612345e9f86e0fb533b7.1.6","name":"sqrt(x^2+y^2)","output":"(hypot x y)","pre":"(and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","start":31.17372733040236,"start-est":33.04434958247954,"status":"imp-start","target":false,"target-prog":"#f","time":3083.972412109375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.012323120312590145) (19456 0.012834962500721156) ((19328 0.005365601562950723 (exp (- (log1p (exp x))))) (13124 1.1111341019753453 (if (<= (exp x) 1e-5) (+ 1.0 (exp x)) (+ (+ 1.0 (/ 1.0 (+ x 2.0))) -1.0))) (6720 0.012323120312590145 (/ 1.0 (+ 1.0 (exp x)))) (708 13.78439555519183 (if (<= x -11.888375043601366) 0.5 (+ (+ 1.0 (/ 1.0 (+ x 2.0))) -1.0))) (64 28.60927849007836 0.5)))","end":0.012834962500721156,"end-est":0.00390625,"identifier":"#f","input":"(/ 1.0 (+ 1.0 (exp x)))","link":"313b9824c9150ddff4f41cd8a43ab1d41d62cc72.1.6","name":"1 / (1 + exp(x))","output":"(exp (- (log (+ 1.0 (exp x)))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ 1.0 (exp x)))","start":0.012323120312590145,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3312.444580078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1728 4.508642247552812) (33600 0.06177124062518029) ((5576 1.749022280312826 (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) -5e-239) (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) 5e-254) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (+ (+ (* (- f d) b) (* (- f d) (- (* w (- u b)) a))) (* (+ (* w (- v e)) (- e d)) (- a c)))))) (5576 1.750272280312826 (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) -5e-239) (+ (* (- f d) (- (* w (- u b)) (- a b))) (+ (* (- d e) (- c a)) (* (* w (- v e)) (- a c)))) (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) 5e-254) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (+ (+ (* (- f d) b) (* (- f d) (- (* w (- u b)) a))) (* (+ (* w (- v e)) (- e d)) (- a c)))))) (5320 1.7525482677298074 (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) -5e-239) (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) (if (<= (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c))) 5e-254) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (+ (* (- f d) (- (* w (- u b)) (- a b))) (* (+ (* w (- v e)) (- e d)) (- a c)))))) (2240 0.07734299910763252 (- (+ (* (- f d) (+ b (* w (- u b)))) (* a (- (+ e (* w (- v e))) f))) (* c (- (+ e (* w (- v e))) d)))) (1740 7.103294242251728 (if (<= u -1.3020256065329657e-56) (+ (* (- f d) (+ b (* w (- u b)))) (* a (- (+ e (* w (- v e))) f))) (if (<= u 1.301284811120192e-282) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (if (<= u 7.25734644747862e-200) (+ (* (- f d) (- b a)) (* (+ (* w (- v e)) (- e d)) (- a c))) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))))))) (1632 36.81109610388713 (if (<= b -4.2777861953812345e-103) (* b (* (- f d) (- 1.0 w))) (if (<= b -1.7671990965240955e-141) (* (- c a) (- (* w e) e)) (if (<= b -1.7863927261808326e-148) (* b (* (- f d) (- 1.0 w))) (if (<= b -2.5663530957313013e-165) (* d c) (if (<= b -7.085462447285075e-210) (* (- c a) (- (* w e) e)) (if (<= b -1.2759374760263483e-294) (* f (- b a)) (if (<= b 2.234331350206265e-285) (* (- c a) (- (* w e) e)) (if (<= b 8.33668776305218e-110) (* d c) (* b (* (- f d) (- 1.0 w)))))))))))) (1608 4.801054770713793 (if (<= d -9.635369991838088e-175) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (if (<= d 4.867538710954021e-114) (+ (* (- f d) (- b a)) (* (+ (* w (- v e)) (- e d)) (- a c))) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f))))))) (1496 32.625924791133386 (if (<= b -4.2777861953812345e-103) (* b (* (- f d) (- 1.0 w))) (if (<= b -1.7671990965240955e-141) (* (- c a) (- (* w e) e)) (if (<= b -1.7863927261808326e-148) (* b (* (- f d) (- 1.0 w))) (if (<= b -2.8977700215146434e-175) (* c (+ d (- (* w (- e v)) e))) (if (<= b 1.4687554143777535e-218) (+ (* a (- d f)) (* d (- c a))) (if (<= b 8.33668776305218e-110) (* c (+ d (- (* w (- e v)) e))) (* b (* (- f d) (- 1.0 w)))))))))) (1360 24.488174092698397 (if (<= d -9.020186940053985e-119) (* d (- c (+ b (* w (- u b))))) (if (<= d -2.727912628304711e-277) (+ (* a (- d f)) (* (- d e) (- c a))) (if (<= d 7.139518570574187e-302) (* f (- (+ b (* w (- u b))) a)) (if (<= d 1.2981844718324616e-57) (+ (* a (- d f)) (* (- d e) (- c a))) (* d (- c (+ b (* w (- u b)))))))))) (1348 6.641284405240559 (if (<= w 5.7288188774892e-33) (- (* (- f d) b) (- (* c (- e d)) (* a (- e f)))) (+ (* (- f d) (- (* w (- u b)) (- a b))) (* d (- c a))))) (1224 11.049208465653292 (if (<= d -2.8e-71) (* d (- c (+ b (* w (- u b))))) (if (<= d 1.2981844718324616e-57) (+ (* (- f d) (- b a)) (* (- d e) (- c a))) (* d (- c (+ b (* w (- u b)))))))) (1096 21.06171895125918 (if (<= b -4.2777861953812345e-103) (* b (* (- f d) (- 1.0 w))) (if (<= b 1.053207512406512e-69) (+ (* a (- d f)) (* (- d e) (- c a))) (* b (* (- f d) (- 1.0 w)))))) (1088 6.702763026827028 (- (* (- f d) b) (- (* c (- e d)) (* a (- e f))))) (972 39.86006088115692 (if (<= d -4.6008248742511894e-123) (* d c) (if (<= d 5.064255515421494e-261) (* f (- b a)) (if (<= d 4.805173306626943e-235) (* (- c a) (- (* w e) e)) (if (<= d 1.667096717696512e-71) (* f (- b a)) (* d c)))))) (968 34.90729623999082 (if (<= b -1.1556649954823564e-105) (* b (* (- f d) (- 1.0 w))) (if (<= b 1.053207512406512e-69) (+ (* a (- d f)) (* d (- c a))) (* b (* (- f d) (- 1.0 w)))))) (584 39.82403460474446 (if (<= d -4.6008248742511894e-123) (* d c) (if (<= d 1.667096717696512e-71) (* f (- b a)) (* d c)))) (520 46.89013343148243 (if (<= d -4.6008248742511894e-123) (* d c) (if (<= d 1.9920263826064032e-131) (* f (- a)) (* d c)))) (192 51.05135463524362 (* d c))))","end":0.06177124062518029,"end-est":0.0546875,"identifier":"#f","input":"(- (* (- (* (- u b) w) (- a b)) (- f d)) (* (- (* (- v e) w) (- d e)) (- c a)))","link":"980fc7deab66de8165b450c14ada9aedbbf860ad.1.6","name":"((u-b)*w - (a-b)) * (f-d) - ((v-e)*w - (d-e)) * (c-a)","output":"(fma (- d (fma w (- v e) e)) c (fma (- f d) (fma w (- u b) b) (* a (- (fma w (- v e) e) f))))","pre":"(and (and (and (and (and (and (and (and (and (<= -1000000000.0 u) (<= u 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= 0.0 w) (<= w 1000.0))) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 f) (<= f 1000000000.0))) (and (<= -1000000000.0 d) (<= d 1000000000.0))) (and (<= -1000000000.0 v) (<= v 1000000000.0))) (and (<= -1000000000.0 e) (<= e 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(- (* (- (* (- u b) w) (- a b)) (- f d)) (* (- (* (- v e) w) (- d e)) (- c a)))","start":4.508642247552812,"start-est":6.448135312200624,"status":"imp-start","target":false,"target-prog":"#f","time":29747.6259765625,"vars":["u","b","w","a","f","d","v","e","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 14.491648625904572) (7104 0.014323120312590145) ((64 1.2387756996190638 b)))","end":0.014323120312590145,"end-est":0.01953125,"identifier":"#f","input":"(* (/ b a) (sqrt (- (pow a 2.0) (pow x 2.0))))","link":"47ebac041a7f6785102c8e5cd3e68cfffe3c498b.1.6","name":"(b/a)*sqrt(a^2 - x^2)","output":"(* b (sqrt (- 1.0 (* (/ x a) (/ x a)))))","pre":"(and (and (and (<= 0.0 b) (<= b 1000.0)) (and (<= 0.0 a) (<= a 1000.0))) (and (<= 0.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ b a) (sqrt (- (pow a 2.0) (pow x 2.0))))","start":14.491648625904572,"start-est":11.520492579221452,"status":"imp-start","target":false,"target-prog":"#f","time":6851.33935546875,"vars":["b","a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 0) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (/ b a) (sqrt (- (pow x 2.0) (pow x 2.0))))","link":"d131795a01d3b7fdc73521ad1bc6674b2323b054.1.6","name":"(b/a)*sqrt(x^2 - x^2)","output":"(* b (/ (sqrt 0.0) a))","pre":"(and (and (and (<= 0.0 b) (<= b 1000.0)) (and (<= 0.0 a) (<= a 1000.0))) (and (<= 0.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ b a) (sqrt (- (pow x 2.0) (pow x 2.0))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4335.58203125,"vars":["b","a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.18699063313501124) (6656 0.18171267103365704) ((6592 0.18699063313501124 (log (/ x y))) (6464 64.0 (log1p -1.0))))","end":0.18171267103365704,"end-est":0.17989881062715135,"identifier":"#f","input":"(log (/ x y))","link":"8914b5f9c83e631d9bd4e57eeae1e413561d0ef5.1.6","name":"log(x/y)","output":"(- (log (/ y x)))","pre":"(and (and (<= 0.001 x) (<= x 1000.0)) (and (<= 0.001 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(log (/ x y))","start":0.18699063313501124,"start-est":0.1856312517176708,"status":"ex-start","target":false,"target-prog":"#f","time":6876.3330078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 59.15598841303421) (26116 2.0786630117893203) ((13632 3.2229304300503356 (log (+ (- a (expm1 b)) (* (* a a) (+ (* a 0.16666666666666666) 0.5))))) (13124 3.1118383512485353 (if (<= a 1.777029199335469e-40) (log (- a (expm1 b))) (log (expm1 a)))) (13060 28.73668352007083 (if (<= b -4.45955103873123e-15) (log1p (- (exp b))) (log (expm1 a)))) (13060 12.72478328178513 (if (<= a 1.4e-210) (log (- (expm1 b))) (log (expm1 a)))) (12864 30.939013720350697 (log (expm1 a))) (6720 31.48993976886492 (+ (* a 0.5) (log a))) (6464 32.10190457371938 (log a))))","end":2.0786630117893203,"end-est":2.311762546363888,"identifier":"#f","input":"(log (- (exp a) (exp b)))","link":"05cd43dc6eb38ca8fb700014865e6b96226ccc87.1.6","name":"log(exp(a) - exp(b))","output":"(if (<= (exp b) 5e-43) (- (log (- (expm1 b))) (/ a (expm1 b))) (log (+ (- a (expm1 b)) (* (* a a) (+ (* a 0.16666666666666666) 0.5)))))","pre":"(and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(log (- (exp a) (exp b)))","start":59.15598841303421,"start-est":59.79262130689037,"status":"imp-start","target":false,"target-prog":"#f","time":13360.466552734375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.8112487540698649) (12928 0.66425) ((6720 2.2203463203067306 (+ (* x -0.5) (log 2.0))) (6464 3.0130420158434945 (log 2.0)) (192 61.44107768075564 (* x -0.5))))","end":0.66425,"end-est":0.5078125,"identifier":"#f","input":"(log (+ 1.0 (exp (- x))))","link":"067b189a01f9b8a68f5aa3f13cd3757c366ea5d4.1.6","name":"log(1 + exp(-x))","output":"(log1p (exp (- x)))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp (- x))))","start":0.8112487540698649,"start-est":0.51953125,"status":"ex-start","target":false,"target-prog":"#f","time":2885.9345703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 5.565387508468682) (6528 0.339125) ())","end":0.339125,"end-est":0.31640625,"identifier":"#f","input":"(exp (+ 1.0 (log x)))","link":"82f9fa7c0625667c80fc5a73125b2b1a3cc61e56.1.6","name":"exp(1 + log(x))","output":"(* E x)","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(exp (+ 1.0 (log x)))","start":5.565387508468682,"start-est":5.6558086577787705,"status":"imp-start","target":false,"target-prog":"#f","time":3098.8359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 58.32987846068963) (6464 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(log (+ 1.0 x))","link":"a5cf7916256402d6822494911614a05a76687cc0.1.6","name":"log(1 + x)","output":"(log1p x)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 x))","start":58.32987846068963,"start-est":58.2600751689107,"status":"imp-start","target":false,"target-prog":"#f","time":6127.279052734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.01425) (13504 0.03366748125036058) ((13120 0.01425 (+ (sqrt x) (sqrt (+ x 1.0)))) (6848 0.6419507079640713 (+ (sqrt x) (+ 1.0 (* x 0.5)))) (6592 1.3403178657087116 (+ 1.0 (sqrt x))) (64 2.667006275843542 1.0)))","end":0.03366748125036058,"end-est":0.01171875,"identifier":"#f","input":"(+ (sqrt x) (sqrt (+ x 1.0)))","link":"5a666361696532dc056d926c9ebbbf40eddc46de.1.6","name":"sqrt(x) + sqrt(x+1)","output":"(/ (+ (- x x) -1.0) (- (sqrt x) (sqrt (+ x 1.0))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt x) (sqrt (+ x 1.0)))","start":0.01425,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3499.654052734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 32.17125) (7684 0.17533603684848484) ((452 0.408309418303551 (if (<= x 0.10222025790571827) (- x) (+ x (/ -0.5 x)))) (452 0.2507553816847727 (if (<= x 0.10222025790571827) (- (/ 0.5 x) x) (+ x (/ -0.5 x)))) (260 0.5808827799683836 (if (<= x 0.0) (- x) x)) (64 31.794275408598793 x)))","end":0.17533603684848484,"end-est":0.2400067559733961,"identifier":"#f","input":"(sqrt (- (* x x) 1.0))","link":"3d6a07eeca8ad5185179b23d80d3d008726d9229.1.6","name":"sqrt(x*x - 1)","output":"(if (<= x -0.26719862549620615) (+ (/ 0.5 x) (+ (/ 0.125 (* x (* x x))) (- (/ 0.0625 (pow x 5.0)) x))) (+ x (/ -0.5 x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(sqrt (- (* x x) 1.0))","start":32.17125,"start-est":30.50390625,"status":"imp-start","target":false,"target-prog":"#f","time":3596.2470703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0) (6528 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(pow z n)","link":"4e0c2af89546f1a7ae32053d9da93a2adec3e987.1.6","name":"z^n","output":"(pow z n)","pre":"(and (and (<= -10.0 z) (<= z 10.0)) (and (<= 0.0 n) (<= n 100.0)))","prec":"binary64","preprocess":"()","spec":"(pow z n)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2792.985595703125,"vars":["z","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007823120312590144) (6720 0.000375) ((448 0.007823120312590144 (+ v0 (* t (- v1 v0)))) (320 10.50730779462244 (* v0 (- 1.0 t))) (320 0.8861855488596333 (+ v0 (* t v1))) (64 11.32137985938476 v0)))","end":0.000375,"end-est":0,"identifier":"#f","input":"(+ v0 (* t (- v1 v0)))","link":"ce6c900e7194166dd7a430a9b33d654409725eb1.1.6","name":"v0 + t * (v1 - v0)","output":"(fma t (- v1 v0) v0)","pre":"(and (and (and (<= -1000.0 v0) (<= v0 1000.0)) (and (<= -1000.0 t) (<= t 1000.0))) (and (<= -1000.0 v1) (<= v1 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ v0 (* t (- v1 v0)))","start":0.007823120312590144,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3304.758056640625,"vars":["v0","t","v1"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.48766649082199354) (13504 0.0692385343791466) ((13120 0.48766649082199354 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 2.2866513809224016 (+ (- 1.0 (sqrt x)) (* x 0.5))) (64 4.34523711837136 1.0)))","end":0.0692385343791466,"end-est":0.06478500976844201,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"8b9ddbde4af1a2e6e0208feeeb1b0da6f994bf66.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.48766649082199354,"start-est":0.4172873114972534,"status":"ex-start","target":false,"target-prog":"#f","time":3980.72607421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.059506072693995396) (13248 0.059506072693995396) ((6976 9.06552804106059 (log1p (+ (+ x (+ x (/ -0.5 x))) -1.0))) (6848 9.06493687449951 (log (+ x (+ x (/ -0.5 x))))) (6720 19.084256961728133 (log1p (+ (* x 2.0) -1.0))) (6592 19.084170209758838 (log (* x 2.0))) (6464 48.883779181708306 (log x))))","end":0.059506072693995396,"end-est":0.046875,"identifier":"#f","input":"(log (+ x (sqrt (- (* x x) 1.0))))","link":"f507280f772699134fadc3c149140e2ce93a7d15.1.6","name":"log (x + sqrt(x*x-1))","output":"(log (+ x (sqrt (+ (* x x) -1.0))))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (- (* x x) 1.0))))","start":0.059506072693995396,"start-est":0.046875,"status":"ex-start","target":false,"target-prog":"#f","time":5454.35009765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.45933718538417034) (19648 0.22607312031259014) ((19520 0.38688804234559193 (log (+ x (sqrt (fma x x -1.0))))) (13376 0.3940112091322564 (log (+ x (sqrt (* (+ x -1.0) (+ x 1.0)))))) (13248 0.45933718538417034 (log (+ x (sqrt (+ -1.0 (* x x)))))) (6848 47.12333362637188 (log (+ x (+ x (/ -0.5 x))))) (6592 49.77594718112476 (log (* x 2.0))) (6464 64.0 (log1p -1.0))))","end":0.22607312031259014,"end-est":0.22265625,"identifier":"#f","input":"(log (+ x (sqrt (- (* x x) 1.0))))","link":"3c5d844b095006d0bbae1be5f6b608e109635f28.1.6","name":"log (x + sqrt(x*x-1))","output":"(log1p (+ (sqrt (fma x x -1.0)) (+ x -1.0)))","pre":"(and (<= 1.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (- (* x x) 1.0))))","start":0.45933718538417034,"start-est":0.4346262118867922,"status":"ex-start","target":false,"target-prog":"#f","time":6601.1396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19456 1.0) (19456 0) ((19328 1.0 (/ (exp PI) (tan x))) (12928 55.24584668356368 (/ (exp PI) x))))","end":0,"end-est":0,"identifier":"#f","input":"(/ (* (exp PI) 1.0) (tan x))","link":"14388d4576d583375792126c490969ccb3c565da.1.6","name":"exp(PI)*1/tan(x)","output":"(* (/ 1.0 (tan x)) (exp PI))","pre":"(and (<= -1000.0 x) (<= x -1000.0))","prec":"binary64","preprocess":"()","spec":"(/ (* (exp PI) 1.0) (tan x))","start":1.0,"start-est":1.0,"status":"apx-start","target":false,"target-prog":"#f","time":3263.754150390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 13.244400002880678) (6528 0.007375) ((260 35.64881066838229 (if (<= x -2.2248911528360873e-195) (- x) y)) (64 46.355983387407825 y)))","end":0.007375,"end-est":0.00390625,"identifier":"#f","input":"(sqrt (+ (* x x) (* y y)))","link":"a11b7b14985460b411fced3bdc96e0516ac31885.1.6","name":"sqrt(x*x+y*y)","output":"(hypot x y)","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) (* y y)))","start":13.244400002880678,"start-est":13.250612649784694,"status":"imp-start","target":false,"target-prog":"#f","time":2903.78857421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((25792 56.14586186006727) (64708 0.09469761085114327) ((51652 15.041610566422287 (if (<= (+ (acos (cos x)) (acos (cos y))) 0.05) (+ y (fabs (remainder x (* PI 2.0)))) (+ (acos (cos x)) (acos (cos y))))) (26052 15.862648383311443 (if (<= (cos y) 0.8) (+ x (acos (cos y))) (+ y (fabs (remainder x (* PI 2.0)))))) (26052 15.846986920271029 (if (<= (cos y) 0.8) (+ (acos (cos y)) (sqrt (* x x))) (+ y (fabs (remainder x (* PI 2.0)))))) (25924 23.599730397945077 (if (<= (acos (cos y)) 0.05) (+ y (sqrt (* x x))) (+ x (acos (cos y))))) (19524 23.9716793193644 (if (<= (cos x) 0.8) (+ (acos (cos x)) y) (+ y (sqrt (* x x))))) (6720 25.170688824686412 (+ y (sqrt (* x x)))) (448 46.806058058850674 (+ y (+ (+ x 1.0) -1.0))) (192 33.46163742197727 (+ x y))))","end":0.09469761085114327,"end-est":0.06620036908403674,"identifier":"#f","input":"(+ (acos (cos x)) (acos (cos y)))","link":"76e7744a90d62a6548322814dc8b26979ec81525.1.6","name":"acos(cos(x)) + acos(cos(y))","output":"(if (<= (+ (acos (cos x)) (acos (cos y))) 0.05) (+ (fabs (remainder x (* PI 2.0))) (fabs (remainder y (* PI 2.0)))) (+ (acos (cos x)) (acos (cos y))))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (acos (cos x)) (acos (cos y)))","start":56.14586186006727,"start-est":53.70548834624718,"status":"imp-start","target":false,"target-prog":"#f","time":16249.2275390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (sqrt x) (sqrt x))","link":"22933e319edc69a24a44f7c61bebfaa1e6649454.1.6","name":"sqrt(x) + sqrt(x)","output":"(* (sqrt x) 2.0)","pre":"(and (<= 0.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt x) (sqrt x))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1873.4853515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (sqrt x) (sqrt x))","link":"fbca6613ead500c057bcf3894f424d83b9f83e4d.1.6","name":"sqrt(x)+sqrt(x)","output":"(* (sqrt x) 2.0)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt x) (sqrt x))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1460.290283203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.247375) (13120 0.247375) ((6592 45.62926140633275 (* (sqrt x) 2.0)) (6464 64.0 (sqrt -1.0))))","end":0.247375,"end-est":0.23046875,"identifier":"#f","input":"(+ (sqrt (- x 1.0)) (sqrt x))","link":"1e3bf42933bf91745f6128a895ce4ad6472e2670.1.6","name":"sqrt(x-1)+sqrt(x)","output":"(+ (sqrt (+ x -1.0)) (sqrt x))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (- x 1.0)) (sqrt x))","start":0.247375,"start-est":0.23046875,"status":"ex-start","target":false,"target-prog":"#f","time":4963.493896484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.012) (13120 0.012) ((6592 1.2347609907197297 (* (sqrt x) 2.0)) (6464 64.0 (sqrt -1.0))))","end":0.012,"end-est":0.015625,"identifier":"#f","input":"(+ (sqrt (- x 1.0)) (sqrt x))","link":"a5689905c2e6c054e9d1d71103a9d48a72c2085d.1.6","name":"sqrt(x-1)+sqrt(x)","output":"(+ (sqrt (+ x -1.0)) (sqrt x))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (- x 1.0)) (sqrt x))","start":0.012,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":4364.89404296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.016966520928207923) (6720 0.004664641240798068) ((192 4.042897251957333 (+ -1.0 x)) (64 61.995862904663205 x) (64 4.603528731513344 -1.0)))","end":0.004664641240798068,"end-est":0.00390625,"identifier":"#f","input":"(+ (- x 1.0) (sqrt x))","link":"bf104751a38f3afe9345b44d8b68e6e8116054d0.1.6","name":"x-1+sqrt(x)","output":"(+ -1.0 (+ x (sqrt x)))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(+ (- x 1.0) (sqrt x))","start":0.016966520928207923,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":4822.399658203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ 2.0 2.0)","link":"275d4f27b100088226e7f13437302476f899f1c5.1.6","name":"2+2","output":"4.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 2.0 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":888.6337890625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.00225) (448 0.002375) ((1248 30.858393247355867 (if (<= z -2.621967883384653e-129) (* 0.5 z) (if (<= z -1.7218967161100642e-172) x (if (<= z -1.3178578610746384e-200) (* y -0.5) (if (<= z -1.646325924568549e-216) x (if (<= z 6.589343247153585e-256) (* y -0.5) (if (<= z 5.201692959865229e-239) x (if (<= z 6.874765028046574e-139) (* y -0.5) (if (<= z 9.969101533162388e-107) x (* 0.5 z)))))))))) (584 13.172218027937786 (if (<= y -5.534106402848006e-75) (* y -0.5) (if (<= y 2.5522881066365905e-97) (+ x (* 0.5 z)) (* y -0.5)))) (584 10.139231199585005 (if (<= x -1.9015793746819397e-121) (+ x (* 0.5 z)) (if (<= x 4.540851674976876e-104) (* (- y z) -0.5) (+ x (* 0.5 z))))) (584 9.710294454774967 (if (<= z -3.476614369494151e-128) (+ x (* 0.5 z)) (if (<= z 9.969101533162388e-107) (- x (* 0.5 y)) (* (- y z) -0.5)))) (456 30.573387497255116 (if (<= z -2.621967883384653e-129) (* 0.5 z) (if (<= z 9.969101533162388e-107) x (* 0.5 z)))) (64 41.84471817123726 x)))","end":0.002375,"end-est":0,"identifier":"#f","input":"(+ (- x (/ y 2.0)) (/ z 2.0))","link":"67cf75b4b8cc6d52b7ceccb262908b1b5598500f.1.6","name":"x - y / 2 + z / 2","output":"(+ x (* (- y z) -0.5))","pre":"(and (and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0))) (and (<= -1000.0 z) (<= z 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- x (/ y 2.0)) (/ z 2.0))","start":0.00225,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4384.99365234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.00075) (576 0.00075) ())","end":0.00075,"end-est":0.00390625,"identifier":"#f","input":"(+ (- p (/ c 2.0)) (/ t 2.0))","link":"82d2dbf4df851fd5686c2fb024dd71010cb44c15.1.6","name":"p - (c / 2) + (t / 2)","output":"(+ (- p (/ c 2.0)) (/ t 2.0))","pre":"(and (and (and (<= -1.79e+308 p) (<= p 1.79e+308)) (and (<= -1.79e+308 c) (<= c 1.79e+308))) (and (<= -1.79e+308 t) (<= t 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (- p (/ c 2.0)) (/ t 2.0))","start":0.00075,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2518.39013671875,"vars":["p","c","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.00275) (576 0.00275) ())","end":0.00275,"end-est":0,"identifier":"#f","input":"(+ (- p (/ c 2.0)) (/ t 2.0))","link":"5316246265f4ae0f75d2601c1355177a82086797.1.6","name":"p - (c / 2) + (t / 2)","output":"(+ (- p (/ c 2.0)) (/ t 2.0))","pre":"(and (and (and (<= -1000000000.0 p) (<= p 1000000000.0)) (and (<= -1000000000.0 c) (<= c 1000000000.0))) (and (<= -1000000000.0 t) (<= t 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- p (/ c 2.0)) (/ t 2.0))","start":0.00275,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2405.198486328125,"vars":["p","c","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.00225) (448 0.002375) ((1248 30.858393247355867 (if (<= t -2.621967883384653e-129) (* 0.5 t) (if (<= t -1.7218967161100642e-172) p (if (<= t -1.3178578610746384e-200) (* c -0.5) (if (<= t -1.646325924568549e-216) p (if (<= t 6.589343247153585e-256) (* c -0.5) (if (<= t 5.201692959865229e-239) p (if (<= t 6.874765028046574e-139) (* c -0.5) (if (<= t 9.969101533162388e-107) p (* 0.5 t)))))))))) (584 13.806267295943853 (if (<= t -3.476614369494151e-128) (* 0.5 t) (if (<= t 6.997866544115456e-100) (+ p (* c -0.5)) (* 0.5 t)))) (584 9.836437903484208 (if (<= t -3.476614369494151e-128) (+ p (* 0.5 t)) (if (<= t 6.997866544115456e-100) (+ p (* c -0.5)) (+ p (* 0.5 t))))) (584 9.710294454774967 (if (<= t -3.476614369494151e-128) (+ p (* 0.5 t)) (if (<= t 9.969101533162388e-107) (+ p (* c -0.5)) (* 0.5 (- t c))))) (456 30.573387497255116 (if (<= t -2.621967883384653e-129) (* 0.5 t) (if (<= t 9.969101533162388e-107) p (* 0.5 t)))) (64 41.84471817123726 p)))","end":0.002375,"end-est":0,"identifier":"#f","input":"(+ (- p (/ c 2.0)) (/ t 2.0))","link":"732a9f7585dca75c0c2b6b7e938f7742248ff666.1.6","name":"p - (c / 2) + (t / 2)","output":"(+ p (* 0.5 (- t c)))","pre":"(and (and (and (<= -1000.0 p) (<= p 1000.0)) (and (<= -1000.0 c) (<= c 1000.0))) (and (<= -1000.0 t) (<= t 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- p (/ c 2.0)) (/ t 2.0))","start":0.00225,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4502.78662109375,"vars":["p","c","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((19456 31.23852565684901) (13712 8.667803668444671) ((13652 11.799482895322138 (if (<= p -5e-50) (- q) (if (<= p -6.903755651551612e-190) q (if (<= p -7.847299945069485e-222) (- q) (if (<= p -1.20651240610946e-254) q (if (<= p -8.0145337800332e-310) (- q) (hypot q (pow p 1.5)))))))) (6792 14.501286069579468 (if (<= q -1.45e-154) (- q) (if (<= q 1.3e-190) (pow p 1.5) (+ q (* 0.5 (* (* p p) (* p (/ 1.0 q)))))))) (260 15.595904578051602 (if (<= q 0.0) (- q) q)) (64 39.4581920799786 q)))","end":8.667803668444671,"end-est":6.877885896477534,"identifier":"#f","input":"(sqrt (fma q q (pow p 3.0)))","link":"3cd946ccf373e499c490217b613edebce8bcbff0.1.6","name":"sqrt(fma(q, q, pow(p, 3)))","output":"(if (<= q -7.055703294941473e+125) (- q) (if (<= q -1e-95) (sqrt (+ (* q q) (pow p 3.0))) (if (<= q 1e-124) (hypot q (pow p 1.5)) (if (<= q 8.067391195031876e+57) (sqrt (+ (* q q) (pow p 3.0))) q))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (fma q q (pow p 3.0)))","start":31.23852565684901,"start-est":29.987978159820017,"status":"imp-start","target":false,"target-prog":"#f","time":5873.30224609375,"vars":["q","p"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 21.220021240625183) (13384 0.5340327336550392) ((7112 0.647949069171979 (if (<= y -3.159573503907142e+157) (* y -1.7320508075688772) (if (<= y 3.7133441484881485e+76) (* 1.7320508075688772 (sqrt (+ x (* y y)))) (* y 1.7320508075688772)))) (6856 7.197989118853903 (if (<= y -1.25e-52) (+ (* y -1.7320508075688772) (/ (* x -0.8660254037844386) y)) (if (<= y 2.1e-54) (* 1.7320508075688772 (sqrt x)) (+ (* y 1.7320508075688772) (* 0.8660254037844386 (/ x y)))))) (6856 7.177522489584471 (if (<= y -1.25e-52) (+ (* y -1.7320508075688772) (/ (* x -0.8660254037844386) y)) (if (<= y 2.1e-54) (sqrt (* x 2.9999999999999996)) (+ (* y 1.7320508075688772) (* 0.8660254037844386 (/ x y)))))) (708 20.881139633040732 (if (<= y -2.8e-209) (+ (* y -1.7320508075688772) (/ (* x -0.8660254037844386) y)) (* y 1.7320508075688772))) (324 20.92664275262906 (if (<= y 0.0) (* y -1.7320508075688772) (* y 1.7320508075688772))) (192 41.906578635985305 (* y -1.7320508075688772))))","end":0.5340327336550392,"end-est":0.0625,"identifier":"#f","input":"(* 1.7320508075688772 (sqrt (+ x (* y y))))","link":"0e4192b7741202756fdb0e9830899e76710db28d.1.6","name":"1.7320508075688772935274463415059*sqrt(x + y*y)","output":"(if (<= y -1.7728733262038668e+106) (* y -1.7320508075688772) (if (<= y 3.7133441484881485e+76) (sqrt (* (fma y y x) 2.9999999999999996)) (* y 1.7320508075688772)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 1.7320508075688772 (sqrt (+ x (* y y))))","start":21.220021240625183,"start-est":21.0703125,"status":"imp-start","target":false,"target-prog":"#f","time":5771.199462890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 21.30575) (13384 0.5113784659227325) ((7112 0.5112534659227325 (if (<= y -3.159573503907142e+157) (* y (- (sqrt 3.0))) (if (<= y 2.9685268621966813e+153) (sqrt (* 3.0 (+ x (* y y)))) (* y (sqrt 3.0))))) (6856 7.575123282170633 (if (<= y -1.25e-52) (* y (- (sqrt 3.0))) (if (<= y 2.1e-54) (sqrt (* 3.0 x)) (* y (sqrt 3.0))))) (6724 24.705712114507474 (if (<= y 2.1e-54) (sqrt (* 3.0 x)) (* y (sqrt 3.0)))) (6592 41.52690954106185 (sqrt (* 3.0 x)))))","end":0.5113784659227325,"end-est":0.2265625,"identifier":"#f","input":"(sqrt (+ (* 3.0 x) (* (* 3.0 y) y)))","link":"c8418713e89a84c0ec1e775f209ae22b44f62c21.1.6","name":"sqrt(3*x + 3*y*y)","output":"(if (<= y -3.159573503907142e+157) (* y (- (sqrt 3.0))) (if (<= y 2.9685268621966813e+153) (sqrt (* 3.0 (fma y y x))) (* y (sqrt 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* 3.0 x) (* (* 3.0 y) y)))","start":21.30575,"start-est":21.12109375,"status":"imp-start","target":false,"target-prog":"#f","time":6296.37744140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 0.0846039628874018) (20160 0.0846039628874018) ((20032 0.09607108358667257 (+ x (/ (+ (cos x) (/ (- (* 0.5 pi) (sin x)) x)) (sin x)))) (6976 1.1266772174816748 (+ x (* pi (/ 0.5 (* x (sin x)))))) (840 1.1460567838575852 (if (<= x -2.124426205811318) x (if (<= x 0.026011541505071997) (* pi (+ 0.08333333333333333 (/ 0.5 (* x x)))) x))) (712 1.2526198281407657 (if (<= x -2.124426205811318) x (if (<= x 0.026011541505071997) (* pi (/ 0.5 (* x x))) x))) (704 1.1328810219417327 (+ x (* pi (+ 0.08333333333333333 (/ (/ 0.5 x) x))))) (704 1.1286102278432062 (+ x (* pi (+ 0.08333333333333333 (/ 0.5 (* x x)))))) (576 1.2463672968637096 (+ x (* pi (/ 0.5 (* x x))))) (576 1.206522713538435 (- x (/ pi (/ (* x x) -0.5)))) (64 21.85318943097899 x)))","end":0.0846039628874018,"end-est":0.061747480164287515,"identifier":"#f","input":"(+ x (/ (+ (- (* x (cos x)) (sin x)) (* 0.5 pi)) (* x (sin x))))","link":"906d3073427fe74f1ad66e471e04dd333f9aa1a0.1.6","name":"x + (x * cos(x) - sin(x) + 0.5 *pi) / (x * sin(x))","output":"(+ x (/ (+ (- (* x (cos x)) (sin x)) (* 0.5 pi)) (* x (sin x))))","pre":"(and (<= 3.14159265358979 pi) (<= pi 3.1415926535898))","prec":"binary64","preprocess":"()","spec":"(+ x (/ (+ (- (* x (cos x)) (sin x)) (* 0.5 pi)) (* x (sin x))))","start":0.0846039628874018,"start-est":0.061747480164287515,"status":"ex-start","target":false,"target-prog":"#f","time":13811.25634765625,"vars":["x","pi"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.16109436093777044) (13248 0.018125) ((13184 0.019094360937770435 (+ (pow x -0.5) (cbrt (/ x 2.0)))) (6528 1.6944509822690406 (pow x -0.5))))","end":0.018125,"end-est":0.0078125,"identifier":"#f","input":"(+ (sqrt (/ 1.0 x)) (cbrt (/ x 2.0)))","link":"5a881904b3aaef01a3412650f4de9dbf0c911601.1.6","name":"sqrt(1/x ) + cbrt(x/2)","output":"(+ (pow x -0.5) (pow (* x 0.5) 0.3333333333333333))","pre":"(and (<= 0.0 x) (<= x 10.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (/ 1.0 x)) (cbrt (/ x 2.0)))","start":0.16109436093777044,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":3532.88623046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.142625) (6528 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(sqrt (/ 1.0 x))","link":"8bdac58f89ddb6b1e3d5e73315f370717e1f0e6e.1.6","name":"sqrt(1/x)","output":"(pow x -0.5)","pre":"(and (<= 0.0 x) (<= x 10000.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (/ 1.0 x))","start":0.142625,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":1867.899658203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0.725625) (19584 0.3512463487695789) ((19520 0.37059473750504823 (/ (sqrt (* -2.0 (log r))) (sqrt r))) (13120 0.725625 (sqrt (* -2.0 (/ (log r) r))))))","end":0.3512463487695789,"end-est":0.3758238265635141,"identifier":"#f","input":"(sqrt (/ (* (- 2.0) (log r)) r))","link":"44194d62cc36e5eca1940ef9655f2347277e8ce6.1.6","name":"sqrt(-2 * log(r) / r)","output":"(pow (sqrt (/ r (* -2.0 (log r)))) -1.0)","pre":"(and (<= 0.0 r) (<= r 1.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (* (- 2.0) (log r)) r))","start":0.725625,"start-est":1.69921875,"status":"ex-start","target":false,"target-prog":"#f","time":19063.32421875,"vars":["r"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.05083771853980772) (13504 0.06316541406655646) ((13120 0.05083771853980772 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 1.0683827163527382 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (6848 1.057857866110738 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.1299394119824195 1.0)))","end":0.06316541406655646,"end-est":0.046875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"96388aa99aa496c72dd7359457c50c4b007d8425.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 0.0 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.05083771853980772,"start-est":0.05403472661783102,"status":"ex-start","target":false,"target-prog":"#f","time":4115.317138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 38.87162095057582) (39112 0.6905889983468666) ((6592 21.638531868065687 (fma x x x)) (320 21.643541330596225 (* x (+ x 1.0))) (64 21.771114730553006 x)))","end":0.6905889983468666,"end-est":0.017419654760301943,"identifier":"#f","input":"(- (exp x) (cos x))","link":"15d3fb859faf1ae50b574eb4cf887a5408b722a6.1.6","name":"exp(x) - cos(x)","output":"(if (<= (- (exp x) (cos x)) -0.1) (- (exp x) (cos x)) (if (<= (- (exp x) (cos x)) 2e-5) (+ x (* x (* x (fma x 0.16666666666666666 1.0)))) (- (exp x) (cos x))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (cos x))","start":38.87162095057582,"start-est":39.09738771918606,"status":"imp-start","target":false,"target-prog":"#f","time":7308.976318359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.08607312031259015) (6784 0.005823120312590144) ((576 0.08607312031259015 (+ (* q q) (* p (* p p))))))","end":0.005823120312590144,"end-est":0,"identifier":"#f","input":"(+ (* q q) (* (* p p) p))","link":"b4bfe532d5d22b23d40cf5eb4f9f2cbe4cb74327.1.6","name":"q*q + p*p*p","output":"(+ (* q q) (pow p 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* q q) (* (* p p) p))","start":0.08607312031259015,"start-est":0.078125,"status":"ex-start","target":false,"target-prog":"#f","time":2846.17529296875,"vars":["q","p"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 31.247150656849012) (13388 8.66980366844467) ((7504 10.848517643229567 (if (<= q -7.055703294941473e+125) (- q) (if (<= q -1e-152) (sqrt (+ (* q q) (* p (* p p)))) (if (<= q 4.4e-190) (pow p 1.5) (if (<= q 8.067391195031876e+57) (sqrt (+ (* q q) (* p (* p p)))) q))))) (6792 14.501286069579468 (if (<= q -1.45e-154) (- q) (if (<= q 1.3e-190) (pow p 1.5) (+ q (* 0.5 (* (* p p) (/ p q))))))) (260 15.595904578051602 (if (<= q 0.0) (- q) q)) (64 39.4581920799786 q)))","end":8.66980366844467,"end-est":6.873979646477534,"identifier":"#f","input":"(sqrt (+ (* q q) (* (* p p) p)))","link":"2c91c93f7e71f8071bd71f9c7fdf27056238f9ab.1.6","name":"sqrt(q*q + p*p*p)","output":"(if (<= q -7.055703294941473e+125) (- q) (if (<= q -1e-95) (sqrt (+ (* q q) (* p (* p p)))) (if (<= q 1e-124) (hypot q (pow p 1.5)) (if (<= q 8.067391195031876e+57) (sqrt (+ (* q q) (* p (* p p)))) q))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* q q) (* (* p p) p)))","start":31.247150656849012,"start-est":29.987978159820017,"status":"imp-start","target":false,"target-prog":"#f","time":6743.3740234375,"vars":["q","p"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.085450897438) (13248 0.1667548875021635) ((26308 0.3428734331332031 (if (<= (- (sqrt (+ 1.0 x)) (sqrt x)) 4e-5) (* 0.5 (sqrt (/ 1.0 x))) (- (sqrt (+ 1.0 x)) (sqrt x)))) (6980 0.9731833408189547 (if (<= x 0.0007865835300043417) (+ 1.0 (- (* x 0.5) (sqrt x))) (* 0.5 (sqrt (/ 1.0 x))))) (6852 2.052130272641022 (if (<= x 0.0007865835300043417) 1.0 (* 0.5 (sqrt (/ 1.0 x))))) (64 31.34149409361164 1.0)))","end":0.1667548875021635,"end-est":0.170253759768442,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"07136866173bf87403856998197296bfeef11e14.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":30.085450897438,"start-est":29.69289157287601,"status":"imp-start","target":false,"target-prog":"#f","time":6093.605224609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 1.5152890978557008) (12992 1.235732271913822) ((13060 2.037026553698158 (if (<= x -1.1529522680467756e-15) (log1p (exp x)) (log1p (exp (- y))))) (12864 3.5208595733122725 (log1p (exp x))) (7360 4.234977344355833 (log1p (+ 1.0 (- (* (- 1.0 y) (+ x (* 0.5 (* x x)))) y)))) (6848 4.479221231718199 (log1p (* (- 1.0 y) (+ x 1.0)))) (6720 4.969406466084948 (+ (* x 0.5) (log 2.0))) (6592 5.0751588657265145 (log1p (- 1.0 y))) (6464 5.637478977350272 (log 2.0))))","end":1.235732271913822,"end-est":0.77734375,"identifier":"#f","input":"(log (+ 1.0 (exp (- x y))))","link":"6210999c18abf292e98d1cfd07a686dbe814b40f.1.6","name":"log(1 + exp(x - y))","output":"(log1p (exp (- x y)))","pre":"(and (and (<= -10000000000.0 x) (<= x 10000000000.0)) (and (<= -10000000000.0 y) (<= y 10000000000.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp (- x y))))","start":1.5152890978557008,"start-est":0.8092575195368841,"status":"apx-start","target":false,"target-prog":"#f","time":7142.427734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.3391245311524549) (12992 0.059215990056820406) ((13192 0.17341625404346908 (if (<= y -8.910460885685153e-16) (log1p (exp (- y))) (if (<= y 5.380998751198504e-32) (log1p (exp x)) (log1p (exp (- y)))))) (12864 1.7315817237797422 (log1p (exp x))) (6720 2.843173109745285 (+ (* x 0.5) (log 2.0))) (6464 3.5118924824610653 (log 2.0))))","end":0.059215990056820406,"end-est":0.00390625,"identifier":"#f","input":"(log (+ 1.0 (exp (- x y))))","link":"b4fb134f3fa6bed5a163b593e2659651bf68e15e.1.6","name":"log(1 + exp(x - y))","output":"(log1p (exp (- x y)))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp (- x y))))","start":0.3391245311524549,"start-est":0.5347085097493632,"status":"ex-start","target":false,"target-prog":"#f","time":4210.680908203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 1.499128824278972) (12992 1.230733795589948) ((13060 2.142481222485054 (if (<= x -3.7931871214378105e-11) (log1p (exp x)) (log1p (exp (- y))))) (12864 3.45262752214864 (log1p (exp x))) (7360 4.0895690271811045 (log (+ (- 2.0 y) (* (- 1.0 y) (+ x (* x (* x 0.5))))))) (6976 4.327354191183076 (log (- (+ 2.0 (* x (- 1.0 y))) y))) (6720 4.816956002499451 (+ (* y -0.5) (log 2.0))) (6592 4.910460920798521 (log (- 2.0 y))) (6464 5.485150679917802 (log 2.0))))","end":1.230733795589948,"end-est":1.51171875,"identifier":"#f","input":"(log (+ 1.0 (exp (- x y))))","link":"fa7463404da48ccbe66488ef9e65f8082eac7e71.1.6","name":"log(1 + exp(x - y))","output":"(log1p (exp (- x y)))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp (- x y))))","start":1.499128824278972,"start-est":2.00585180872535,"status":"apx-start","target":false,"target-prog":"#f","time":6090.119873046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0) (12992 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(log (+ 1.0 (exp (- x y))))","link":"ae9e8569c58bee132c7b7d29de3349e137bd7b87.1.6","name":"log(1 + exp(x - y))","output":"(log1p (exp (- x y)))","pre":"(and (and (<= -1000000000.0 x) (<= x -1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (exp (- x y))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":16782.203857421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.13789389883353) (20036 0.24515086679506287) ((13512 0.68801091973531 (if (<= x -137.6210729802433) (+ 1.0 (/ (- (tan x) (sin x)) x)) (if (<= x 4.8762725335003646e-5) (+ (* x (* x 0.225)) -0.5) (+ 1.0 (/ (- (tan x) (sin x)) x))))) (13512 0.24427586679506288 (if (<= x -137.6210729802433) (/ (- x (sin x)) (- x (tan x))) (if (<= x 4.8762725335003646e-5) (+ (* x (* x 0.225)) -0.5) (/ (- x (sin x)) (- x (tan x)))))) (6984 0.9525836633691394 (if (<= x -137.6210729802433) (/ x (- x (tan x))) (if (<= x 4.8762725335003646e-5) (+ (* x (* x 0.225)) -0.5) (/ x (- x (tan x)))))) (712 0.9818463794577573 (if (<= x -137.6210729802433) 1.0 (if (<= x 4.8762725335003646e-5) (+ (* x (* x 0.225)) -0.5) 1.0))) (328 1.1224180854153012 (if (<= x -137.6210729802433) 1.0 (if (<= x 4.8762725335003646e-5) -0.5 1.0))) (64 31.928848273712266 1.0)))","end":0.24515086679506287,"end-est":0.0078125,"identifier":"#f","input":"(/ (- x (sin x)) (- x (tan x)))","link":"90e591f46f33714d5e07e654bf0db33c640652e7.1.6","name":"(x - (sin(x))) / (x - (tan(x)))","output":"(if (<= x -137.6210729802433) (- (/ x (- x (tan x))) (/ (sin x) (- x (tan x)))) (if (<= x 4.8762725335003646e-5) (+ (* x (* x 0.225)) -0.5) (/ (- x (sin x)) (- x (tan x)))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (- x (tan x)))","start":31.13789389883353,"start-est":30.48715128445778,"status":"imp-start","target":false,"target-prog":"#f","time":20442.286865234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 13.171638530061815) (448 0.013) ((984 32.8693145583162 (if (<= sin -80124767194.42117) (/ sin tan) (if (<= sin 1.049130692675259e-275) (/ -1.0 tan) (if (<= sin 5.669406163064532e-230) 1.0 (if (<= sin 2.3390943531311517e-87) (/ -1.0 tan) (if (<= sin 2.2220453554399264e-34) 1.0 (if (<= sin 4.311180134706449) (/ -1.0 tan) (/ sin tan)))))))) (984 16.18958777089882 (if (<= tan -2.989008764698424e+265) (/ -1.0 tan) (if (<= tan -3.9682988046588814e+108) (/ sin tan) (if (<= tan -4.739559512898834e+82) (/ -1.0 tan) (if (<= tan -36000.68598639223) (/ sin tan) (if (<= tan 0.1279092931971742) (- 1.0 sin) (if (<= tan 1.1764745580545281e+44) (/ -1.0 tan) (/ sin tan)))))))) (712 0.977900663782662 (if (<= tan -36000.68598639223) (/ (+ sin -1.0) tan) (if (<= tan 0.1279092931971742) (* (- 1.0 sin) (+ 1.0 tan)) (/ (+ sin -1.0) tan)))) (584 1.23629648589235 (if (<= tan -36000.68598639223) (/ (+ sin -1.0) tan) (if (<= tan 0.1279092931971742) (- 1.0 sin) (/ (+ sin -1.0) tan)))) (456 31.954610976047043 (if (<= tan -4.6451959680245054e-8) (/ sin tan) (if (<= tan 0.1279092931971742) 1.0 (/ sin tan)))) (64 46.90859890950184 1.0)))","end":0.013,"end-est":0.0078125,"identifier":"#f","input":"(/ (- x (* sin x)) (- x (* tan x)))","link":"25c82e6aeac3a655c11ff2d907613a04154d9ac9.1.6","name":"((x - (sin x)) / (x - (tan x)))","output":"(/ (- 1.0 sin) (- 1.0 tan))","pre":"(and (and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 sin) (<= sin 1.79e+308))) (and (<= -1.79e+308 tan) (<= tan 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (- x (* sin x)) (- x (* tan x)))","start":13.171638530061815,"start-est":14.742279749946997,"status":"imp-start","target":false,"target-prog":"#f","time":7045.452880859375,"vars":["x","sin","tan"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.026344360937770435) (704 0.026344360937770435) ((448 0.6598260629821311 (* (- 1.0 sin) (+ tan 1.0))) (448 0.018198120312590146 (/ (- 1.0 sin) (- 1.0 tan))) (320 1.3638518219898466 (/ -1.0 (+ tan -1.0))) (192 1.9887532352589141 (+ tan 1.0)) (192 1.3013352692055455 (- 1.0 sin)) (64 2.606364699768859 1.0)))","end":0.026344360937770435,"end-est":0.01953125,"identifier":"#f","input":"(/ (- (* sin x) x) (- (* tan x) x))","link":"f623324a50659623477562ae8736c3ded0cf7bd0.1.6","name":"((sin x) - x) / ((tan x) - x)","output":"(/ (- (* sin x) x) (- (* x tan) x))","pre":"(and (and (and (<= -1.0 sin) (<= sin 1.0)) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 tan) (<= tan 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (* sin x) x) (- (* tan x) x))","start":0.026344360937770435,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":5245.087158203125,"vars":["sin","x","tan"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.082625) (6720 0.044375) ((456 1.9751704968031487 (if (<= x -20.528488700900155) (* x x) (if (<= x 5.4113814852533385e-8) (* x 10.0) (* x x)))) (448 0.082625 (+ (* x x) (* x 10.0))) (320 0.074875 (* x (+ x 10.0))) (192 41.08366571019018 (* x x))))","end":0.044375,"end-est":0.04296875,"identifier":"#f","input":"(+ (* x x) (* x 10.0))","link":"27a8fc5e8351771da69ebd11b8a3a63e86350fc9.1.6","name":"x*x+x*10","output":"(fma x 10.0 (* x x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x x) (* x 10.0))","start":0.082625,"start-est":0.0703125,"status":"ex-start","target":false,"target-prog":"#f","time":3737.01220703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19840 0.009834053167746435) (13440 0.00325) ((6912 0.8756152767612497 (+ (* x x) (- 1.0 (pow x 4.0)))) (6848 0.8681541048647543 (+ 1.0 (* x (fma x x x)))) (6592 0.9955136910495953 (fma x x 1.0)) (64 1.1979170112254092 1.0)))","end":0.00325,"end-est":0,"identifier":"#f","input":"(- (+ (+ 1.0 (pow x 2.0)) (pow x 3.0)) (pow x 4.0))","link":"efe9e56cf54505ab1deb2822c17e6e06697792a1.1.6","name":"1 + x^2 + x^3 - x^4","output":"(+ 1.0 (- (* x (fma x x x)) (pow x 4.0)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (+ (+ 1.0 (pow x 2.0)) (pow x 3.0)) (pow x 4.0))","start":0.009834053167746435,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4497.693115234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin x)","link":"950f8b6a9563d26e8c8dde38f2af6e1e7f96bf1e.1.6","name":"sin(x)","output":"(sin x)","pre":"(and (<= -1.57079632679 x) (<= x 1.57079632679))","prec":"binary64","preprocess":"()","spec":"(sin x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1981.653076171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.533991050900026) (13248 0.11652857187842554) ((13120 13.533991050900026 (- (sqrt (+ 1.0 x)) (sqrt x))) (6848 14.830952529736715 (+ (* x 0.5) (- 1.0 (sqrt x)))) (64 16.13862225502499 1.0)))","end":0.11652857187842554,"end-est":0.150722509768442,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"ae7d33882c3f7efd7ddea99fca17ad08c78b2508.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= 0.0 x) (<= x 1e+100))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.533991050900026,"start-est":15.05147414506619,"status":"imp-start","target":false,"target-prog":"#f","time":4385.111328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03225488750216349) (13120 0.03225488750216349) ((64 2.7658657050987556 1.0)))","end":0.03225488750216349,"end-est":0.015625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"cd5a9b33572cc0335897032b487fbc0ad9ffb0ff.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03225488750216349,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2696.93701171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 0.16491748125036057) (19904 0.16218872187554087) ((13632 0.16491748125036057 (/ (* x x) (* PI (pow (+ 1.0 (* -0.75 (* n_dot_h n_dot_h))) 2.0)))) (13440 0.3419610112802984 (/ (/ x PI) (/ (fma n_dot_h (* n_dot_h -1.5) 1.0) x))) (13440 0.30155435746625864 (/ x (/ PI (/ x (fma n_dot_h (* n_dot_h -1.5) 1.0))))) (13440 0.3010451604734989 (* (/ x PI) (/ x (fma n_dot_h (* n_dot_h -1.5) 1.0)))) (6656 0.46175638035074285 (/ (* x x) PI)) (6656 0.45851372686292735 (* x (/ x PI)))))","end":0.16218872187554087,"end-est":0.12109375,"identifier":"#f","input":"(/ (* x x) (* PI (pow (+ (* (* n_dot_h n_dot_h) (- (* 0.5 0.5) 1.0)) 1.0) 2.0)))","link":"d808188d7dc04281ba23d397919432ce3821801a.1.6","name":"x * x / (PI * pow(n_dot_h * n_dot_h * (0.5 * 0.5 - 1) + 1, 2))","output":"(/ (* x (/ x PI)) (pow (fma n_dot_h (* n_dot_h -0.75) 1.0) 2.0))","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= -1.0 n_dot_h) (<= n_dot_h 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* x x) (* PI (pow (+ (* (* n_dot_h n_dot_h) (- (* 0.5 0.5) 1.0)) 1.0) 2.0)))","start":0.16491748125036057,"start-est":0.15234375,"status":"ex-start","target":false,"target-prog":"#f","time":8116.632568359375,"vars":["x","n_dot_h"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.07531314172485908) (13504 0.06354041406655646) ((13120 0.07531314172485908 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 1.2667597968577322 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.3641264733585787 1.0)))","end":0.06354041406655646,"end-est":0.0703125,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"7671c174414fb343e655b8e099232d91634e2c39.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.07531314172485908,"start-est":0.08703595937737447,"status":"ex-start","target":false,"target-prog":"#f","time":4338.82373046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 0.17092708319999192) (8064 0.16078552656439304) ((6656 0.5333353301737594 (* a (/ a PI))) (6656 0.5323627684262205 (/ a (/ PI a)))))","end":0.16078552656439304,"end-est":0.16796875,"identifier":"#f","input":"(/ (* a a) (* PI (pow (+ (* (* n_dot_h n_dot_h) (- (* a a) 1.0)) 1.0) 2.0)))","link":"6a50d3603d5c8b2b249f2a60a90bf07b263a5cd4.1.6","name":"a * a / (PI * pow(n_dot_h * n_dot_h * (a * a - 1) + 1, 2))","output":"(* a (/ (/ a PI) (* (- 1.0 (* n_dot_h n_dot_h)) (+ (- 1.0 (* n_dot_h n_dot_h)) (* 2.0 (* a (* n_dot_h (* a n_dot_h))))))))","pre":"(and (and (<= 0.0 a) (<= a 1.0)) (and (<= 0.0 n_dot_h) (<= n_dot_h 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* a a) (* PI (pow (+ (* (* n_dot_h n_dot_h) (- (* a a) 1.0)) 1.0) 2.0)))","start":0.17092708319999192,"start-est":0.1796875,"status":"ex-start","target":false,"target-prog":"#f","time":6996.08447265625,"vars":["a","n_dot_h"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03418176718957333) (13120 0.03418176718957333) ((6848 0.7550538426624802 (+ (* x 0.5) (- 1.0 (sqrt x)))) (6848 0.7473203289894604 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 2.8571270520142407 1.0)))","end":0.03418176718957333,"end-est":0.0390625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"c66f0c8c67f062eb11cc0807be5b014d834b9301.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03418176718957333,"start-est":0.0390625,"status":"ex-start","target":false,"target-prog":"#f","time":4446.168212890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7552 0.12768872187554087) (20096 0.13308272226222148) ((7552 0.12768872187554087 (/ (* a a) (* 3.14 (pow (+ 1.0 (* (* n_dot_h n_dot_h) (+ -1.0 (* a a)))) 2.0)))) (1728 0.13060396288740178 (* a (/ (/ a 3.14) (* (- 1.0 (* n_dot_h n_dot_h)) (+ (- 1.0 (* n_dot_h n_dot_h)) (* 2.0 (* (* a n_dot_h) (* a n_dot_h)))))))) (320 0.507387326706327 (/ a (/ 3.14 a))) (320 0.5020538089538616 (/ (* a a) 3.14))))","end":0.13308272226222148,"end-est":0.1171875,"identifier":"#f","input":"(/ (* a a) (* 3.14 (pow (+ (* (* n_dot_h n_dot_h) (- (* a a) 1.0)) 1.0) 2.0)))","link":"de653ade5d22425b1f14033d67dc9ba94c3c4557.1.6","name":"a * a / (3.14 * pow(n_dot_h * n_dot_h * (a * a - 1) + 1, 2))","output":"(/ a (* (pow (fma (* n_dot_h n_dot_h) (fma a a -1.0) 1.0) 2.0) (/ 3.14 a)))","pre":"(and (and (<= 0.0 a) (<= a 1.0)) (and (<= 0.0 n_dot_h) (<= n_dot_h 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* a a) (* 3.14 (pow (+ (* (* n_dot_h n_dot_h) (- (* a a) 1.0)) 1.0) 2.0)))","start":0.12768872187554087,"start-est":0.125,"status":"ex-start","target":false,"target-prog":"#f","time":7010.102783203125,"vars":["a","n_dot_h"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.13701054219902045) (7488 0.09888955219539469) ((7424 0.15578727785781651 (+ (/ (* (- x A) (- A x)) n) (+ B (pow (- x A) 2.0)))) (1216 0.15186701283657583 (- B (+ (* (- x A) (+ A (/ (- x A) n))) (* x (- A x))))) (964 7.4082845969625275 (if (<= x -1.3460494508339279e-68) (+ B (* (- x A) (- x (/ x n)))) (- B (* (- A x) (- (+ x (/ A n)) A))))) (964 7.40851559081894 (if (<= x -1.3460494508339279e-68) (+ B (* (- x A) (- x (/ x n)))) (- B (* (- x A) (- (- A (/ A n)) x))))) (960 0.13701054219902045 (+ B (* (- x A) (+ x (- (/ (- A x) n) A))))) (836 8.513979635173932 (if (<= x -1.8249359337841932e-107) (+ B (* (- x A) (- x (/ x n)))) (+ B (* A (- A (/ A n)))))) (836 8.597128849428502 (if (<= x -1.8249359337841932e-107) (+ B (* (- x A) (- x (/ x n)))) (+ B (* (- A x) (- A (/ A n)))))) (708 18.443203909800314 (if (<= A 1.2558388603067791e-98) (+ B (* x x)) (* (- A x) (- A (/ A n))))) (708 10.963812174219772 (if (<= x -2.5137458631976305e-32) (* x (- x (/ x n))) (+ B (* A (- A (/ A n)))))) (708 8.536882355743542 (if (<= x -1.8249359337841932e-107) (+ B (* x (- x (/ x n)))) (+ B (* A (- A (/ A n)))))) (580 17.49227622977215 (if (<= A 1.563813679152122e-65) (+ B (* x x)) (* A (- A (/ A n))))) (448 23.963886007217752 (+ B (* A (- A x)))) (320 23.915145867044583 (+ B (* x x))) (64 26.709961546458743 B)))","end":0.09888955219539469,"end-est":0.09500753162065376,"identifier":"#f","input":"(+ B (* (- x A) (- x (+ A (/ (- x A) n)))))","link":"4144e5be37fbbe8efba72653ca95700cd758f374.1.6","name":"B + (x - A) * (x - (A + (x - A) / n))","output":"(+ B (fma (- x A) x (* (- x A) (- (/ (- A x) n) A))))","pre":"(and (and (and (and (<= 0.0 B) (<= B 1000.0)) (and (<= -1000.0 x) (<= x 1000.0))) (and (<= 0.0 A) (<= A 1000.0))) (and (<= 1.0 n) (<= n 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ B (* (- x A) (- x (+ A (/ (- x A) n)))))","start":0.13701054219902045,"start-est":0.14807379138909577,"status":"ex-start","target":false,"target-prog":"#f","time":22353.28564453125,"vars":["B","x","A","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0.0005) (6528 0.0005) ())","end":0.0005,"end-est":0,"identifier":"#f","input":"(pow x 1.2)","link":"0d6a2de7258a71eaab989c0d574f875ce615d077.1.6","name":"pow(x,1.2)","output":"(pow x 1.2)","pre":"(and (<= -1.79e+308 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(pow x 1.2)","start":0.0005,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2717.181396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.1179508195694776) (13248 0.04906426727406264) ((6848 0.16634172668806194 (/ (exp (/ a b)) (/ b a))) (6848 0.16701470912488434 (* a (/ (exp (/ a b)) b))) (6848 0.04550067862606903 (* (/ a b) (exp (/ a b)))) (6848 0.1179508195694776 (/ (* a (exp (/ a b))) b)) (576 32.55838208957772 (* a (/ (+ (/ a b) 1.0) b))) (576 32.28286769055924 (* (/ a b) (+ (/ a b) 1.0))) (576 32.28210759310155 (/ (* a (+ (/ a b) 1.0)) b)) (192 32.620620159125835 (/ a b))))","end":0.04906426727406264,"end-est":0.03125,"identifier":"#f","input":"(/ (* (exp (/ a b)) a) b)","link":"5078393286b3d128068b80ed0ef95f017e34dcf9.1.6","name":"exp(a/b)*a/b","output":"(* (/ a b) (pow E (/ a b)))","pre":"(and (and (<= -1000.0 a) (<= a 0.0)) (and (<= 0.0 b) (<= b 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* (exp (/ a b)) a) b)","start":0.1179508195694776,"start-est":0.03250753162065376,"status":"ex-start","target":false,"target-prog":"#f","time":5565.167724609375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ x y)","link":"74cceb5b883d61dfada4ec3b9a1326385471115a.1.6","name":"x / y","output":"(/ x y)","pre":"(and (and (<= 0.0 x) (<= x 1000000000.0)) (and (<= 0.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ x y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1722.3359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ x y)","link":"0914a87caedc92df63bd4c8c5f163ccd54feb30c.1.6","name":"x / y","output":"(/ x y)","pre":"(and (and (<= 0.0 x) (<= x 1.79e+308)) (and (<= 0.0 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ x y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1857.052490234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.012469360937770433) (6912 0.012509601949631355) ((6784 0.6192922042090258 (- (log (+ (/ 1.0 p) -1.0)))) (6592 0.7353328650564109 (+ p (log p))) (6528 62.48298004867703 (- (log A))) (6464 1.1311287910641354 (log p))))","end":0.012509601949631355,"end-est":0.0078125,"identifier":"#f","input":"(- (log (+ (- (/ 1.0 p) 1.0) A)))","link":"7253a28a54e6fced91374fa4033bca9b7da3bcd7.1.6","name":"-log(1/p - 1 +A)","output":"(- (log (+ (/ 1.0 p) (+ A -1.0))))","pre":"(and (and (<= 0.0 p) (<= p 1.0)) (and (<= 1e-10 A) (<= A 5.0)))","prec":"binary64","preprocess":"()","spec":"(- (log (+ (- (/ 1.0 p) 1.0) A)))","start":0.012469360937770433,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":5709.088623046875,"vars":["p","A"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.26125) (6528 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(/ 1.0 (sqrt x))","link":"3d92aa0c1470ec195adb67be1924f0fe82f95a35.1.6","name":"1/sqrt(x)","output":"(pow x -0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt x))","start":0.26125,"start-est":0.3203125,"status":"ex-start","target":false,"target-prog":"#f","time":1662.800048828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19584 61.33645150562337) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (log c) (log (pow c (* g 2.0))))","link":"1ea271d5b5ac73e01748b6cf0f73af6dbb6bccc7.1.6","name":"log(c) / (log(pow(c, g * 2)))","output":"(/ 0.5 g)","pre":"(and (and (<= 0.0 c) (<= c 1.0)) (and (<= 0.0 g) (<= g 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (log c) (log (pow c (* g 2.0))))","start":61.33645150562337,"start-est":61.55741802203422,"status":"imp-start","target":false,"target-prog":"#f","time":8643.744384765625,"vars":["c","g"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.24875) (13120 0.24875) ((6592 45.42855411751097 (* (sqrt x) 2.0)) (192 51.96715911437097 (* x 0.5)) (64 53.677770054480106 1.0)))","end":0.24875,"end-est":0.25,"identifier":"#f","input":"(+ (sqrt (+ x 1.0)) (sqrt x))","link":"f5ef2411b0011403e42cc3827a9f95b83c01b1ef.1.6","name":"sqrt(x+1)+sqrt(x)","output":"(+ (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= 1.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (+ x 1.0)) (sqrt x))","start":0.24875,"start-est":0.25,"status":"ex-start","target":false,"target-prog":"#f","time":4397.5810546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.07338995818199438) (704 0.023345120188481415) ((704 0.02202124062518029 (/ (/ (+ x (- 1.0 x)) x) (+ x 1.0))) (448 1.1531090722650834 (+ (/ 1.0 x) (+ x -1.0))) (448 0.024063721875540872 (/ -1.0 (* x (- -1.0 x)))) (320 1.4513445340789501 (+ -1.0 (/ 1.0 x))) (192 1.9469103539809975 (/ 1.0 x)) (64 61.50809272965961 x)))","end":0.023345120188481415,"end-est":0.01953125,"identifier":"#f","input":"(- (/ 1.0 x) (/ 1.0 (+ x 1.0)))","link":"7899b78ffb03538a3f36e62947f0eea5b1f1d533.1.6","name":"1/x -1/(x+1)","output":"(/ (+ x (- -1.0 x)) (* x (- -1.0 x)))","pre":"(and (<= 0.0 x) (<= x 10000.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 x) (/ 1.0 (+ x 1.0)))","start":0.07338995818199438,"start-est":0.08006717554002918,"status":"ex-start","target":false,"target-prog":"#f","time":3614.087646484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6624 0.03775168169209066) (3424 0.02116320428598533) ((296 7.770461857193118 (if (<= Y -9.9999998245167e-14) (* -6.103515625e-5 (* Y Y)) (if (<= Y 0.0020000000949949026) (* X X) (* -6.103515625e-5 (* Y Y))))) (288 0.03675168169209066 (+ (* X X) (* Y (* Y -6.103515625e-5)))) (96 13.40023567940407 (* X X))))","end":0.02116320428598533,"end-est":0.01171875,"identifier":"pow_then_sub_2","input":"(- (pow X 2.0) (pow (/ Y 128.0) 2.0))","link":"1a6b091948a5044de81df0a9406c677901a0c636.1.6","name":"pow_then_sub_2","output":"(fma Y (* Y -6.103515625e-5) (* X X))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(- (pow X 2.0) (pow (/ Y 128.0) 2.0))","start":0.03775168169209066,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":5901.59228515625,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6688 0.022233922264866184) (3520 0.021983922264866184) ((3456 0.6957811938377895 (+ (* X X) (* (pow X 128.0) -2.938735877055719e-39))) (3456 0.5574659648894488 (+ (* X X) (* (pow Y 128.0) -2.938735877055719e-39)))))","end":0.021983922264866184,"end-est":0.021932460328575033,"identifier":"pow_then_sub_2","input":"(- (pow X 2.0) (pow (/ (+ X Y) 2.0) 128.0))","link":"83f5b0648126afbfdb22ae7d341d68fc5800c870.1.6","name":"pow_then_sub_2","output":"(- (* X X) (pow (/ (+ X Y) 2.0) 128.0))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(- (pow X 2.0) (pow (/ (+ X Y) 2.0) 128.0))","start":0.022233922264866184,"start-est":0.021932460328575033,"status":"ex-start","target":false,"target-prog":"#f","time":7100.3447265625,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6752 0.021728196803664543) (3584 0.021478196803664543) ((3520 0.5712772282736382 (+ (* 0.0078125 (* X X)) (* (pow Y 128.0) -2.938735877055719e-39)))))","end":0.021478196803664543,"end-est":0.021932460328575033,"identifier":"pow_then_sub_2","input":"(- (/ (pow X 2.0) 128.0) (pow (/ (+ X Y) 2.0) 128.0))","link":"b2e36048e006b1ad3b332a4359fbc3a664c750df.1.6","name":"pow_then_sub_2","output":"(- (* 0.0078125 (* X X)) (pow (/ (+ X Y) 2.0) 128.0))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(- (/ (pow X 2.0) 128.0) (pow (/ (+ X Y) 2.0) 128.0))","start":0.021728196803664543,"start-est":0.021932460328575033,"status":"ex-start","target":false,"target-prog":"#f","time":7381.09033203125,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((3392 0.09045056406367187) (6688 0.06326061268031885) ((544 0.07544324357715203 (+ (* X (+ X (* Y -0.0078125))) (* (* Y -0.0078125) (+ X (* Y -0.0078125))))) (424 6.275034489539758 (if (<= Y -1.9999999920083944e-12) (* Y (+ (* -0.015625 X) (* Y 6.103515625e-5))) (if (<= Y 2.0000000233721948e-7) (* X (+ X (* Y -0.015625))) (* Y (+ (* -0.015625 X) (* Y 6.103515625e-5)))))) (360 6.593419428982033 (if (<= Y -1.9999999920083944e-12) (* Y (* Y 6.103515625e-5)) (if (<= Y 2.0000000233721948e-7) (* X (+ X (* Y -0.015625))) (* Y (* Y 6.103515625e-5))))) (352 0.08970056406367187 (* (+ X (* Y -0.0078125)) (+ X (* Y -0.0078125)))) (296 6.778464070371779 (if (<= Y -1.9999999920083944e-12) (* Y (* Y 6.103515625e-5)) (if (<= Y 2.0000000233721948e-7) (* X X) (* Y (* Y 6.103515625e-5))))) (96 13.47496425625546 (* X X))))","end":0.06326061268031885,"end-est":0.0390625,"identifier":"sub_then_pow","input":"(pow (- X (/ Y 128.0)) 2.0)","link":"e3056b868857685c978828abe1c83df91a4da9f6.1.6","name":"sub_then_pow","output":"(fma Y (fma 6.103515625e-5 Y (* -0.015625 X)) (* X X))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(pow (- X (/ Y 128.0)) 2.0)","start":0.09045056406367187,"start-est":0.09765625,"status":"ex-start","target":false,"target-prog":"#f","time":7688.572265625,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6752 0.27618463401379556) (6752 0.18055487917796406) ((3616 0.1867496449674327 (+ (* -0.25 (* Y Y)) (* X (fma X 0.25 (* Y -0.5))))) (3584 0.20830963401303973 (- (* X (/ X 2.0)) (pow (/ (+ X Y) 2.0) 2.0))) (616 5.608799080065065 (if (<= Y -2.499999956129175e-14) (+ (* X (/ X 2.0)) (* Y (- (* X -0.5) (* 0.25 Y)))) (if (<= Y 9.999999960041972e-13) (* X (* X 0.25)) (+ (* X (/ X 2.0)) (* Y (- (* X -0.5) (* 0.25 Y))))))) (544 0.4180987535781933 (+ (* X (/ X 2.0)) (/ (* -0.5 (+ X Y)) (/ 2.0 (+ X Y))))) (488 6.260779611933598 (if (<= Y -4.099999961933165e-13) (* Y (- (* X -0.5) (* 0.25 Y))) (if (<= Y 9.999999960041972e-13) (* X (* X 0.25)) (+ (* X (/ X 2.0)) (* Y (* Y -0.25)))))) (480 0.4066115137025501 (+ (* X (/ X 2.0)) (/ (* (+ X Y) (+ X Y)) -4.0))) (424 6.909951883075304 (if (<= Y -4.099999961933165e-13) (* Y (+ (* X -0.5) (* Y -0.25))) (if (<= Y 6.0) (* X (* X 0.25)) (* Y (+ (* X -0.5) (* Y -0.25)))))) (296 13.720200227119292 (if (<= Y -9.99999983775159e-18) (* Y (* Y -0.25)) (if (<= Y 1.000000045813705e-18) (* 0.5 (* X X)) (* Y (* Y -0.25))))) (296 7.4732924811909065 (if (<= Y -4.099999961933165e-13) (* Y (* Y -0.25)) (if (<= Y 6.0) (* X (* X 0.25)) (* Y (* Y -0.25))))) (160 14.978582872241248 (* Y (* Y -0.25)))))","end":0.18055487917796406,"end-est":0.17806625976975413,"identifier":"pow_then_sub_2","input":"(- (/ (pow X 2.0) 2.0) (pow (/ (+ X Y) 2.0) 2.0))","link":"07601ab263baf3bcdfed722150096a085a162e26.1.6","name":"pow_then_sub_2","output":"(fma X (fma X 0.25 (* Y -0.5)) (* -0.25 (* Y Y)))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(- (/ (pow X 2.0) 2.0) (pow (/ (+ X Y) 2.0) 2.0))","start":0.27618463401379556,"start-est":0.36460878907639227,"status":"ex-start","target":false,"target-prog":"#f","time":10497.12841796875,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7040 0.5316283581234404) (7488 0.3532163053219776) ((7376 11.397773606681822 (if (<= X -4.6373401476509505e-76) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (if (<= X -4.3458051118961233e-94) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))) (if (<= X -6.495331104831322e-107) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (if (<= X 2.6601780288418686e-48) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))) (* X (fma X 0.4444444444444444 (* Y -0.4444444444444444)))))))) (7308 13.360290271385056 (if (<= Y -1.0830893745684445e-87) (pow (+ X (* (+ X Y) -0.3333333333333333)) 2.0) (if (<= Y -3.48128510561764e-105) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))) (if (<= Y -4.3365270126142306e-160) (pow (+ X (* (+ X Y) -0.3333333333333333)) 2.0) (pow (+ X (* -0.3333333333333333 (+ X Z))) 2.0))))) (7168 0.582555952781636 (pow (+ X (+ (* (+ X Y) -0.3333333333333333) (* Z -0.3333333333333333))) 2.0)) (7044 12.68325438490086 (if (<= Z 1.9000092233529753e-116) (pow (+ X (* (+ X Y) -0.3333333333333333)) 2.0) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))))) (7040 0.5316283581234404 (pow (- X (/ (+ Z (+ X Y)) 3.0)) 2.0)) (1360 11.342029655383593 (if (<= X -4.6373401476509505e-76) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (if (<= X -4.3458051118961233e-94) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))) (if (<= X -6.495331104831322e-107) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (if (<= X 2.6601780288418686e-48) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444)))))))) (968 30.86616018578215 (if (<= Y -3.4275998904481012e-130) (* 0.1111111111111111 (* Y Y)) (if (<= Y 5.756971259033528e-270) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (* Z (* Z 0.1111111111111111))))) (968 30.703025636507682 (if (<= Y -3.4275998904481012e-130) (* Y (+ (* Z 0.2222222222222222) (+ (* X -0.4444444444444444) (* Y 0.1111111111111111)))) (if (<= Y 5.756971259033528e-270) (* X (+ (* X 0.4444444444444444) (* (+ Y Z) -0.4444444444444444))) (* Z (* Z 0.1111111111111111))))) (584 25.379320817851887 (if (<= X -1.9015793746819397e-121) (* 0.4444444444444444 (* X X)) (if (<= X 6.26011982858203e-104) (* Y (* Y 0.1111111111111111)) (* 0.4444444444444444 (* X X))))) (584 25.380919712715663 (if (<= X -1.9015793746819397e-121) (* 0.4444444444444444 (* X X)) (if (<= X 6.26011982858203e-104) (* 0.1111111111111111 (* Y Y)) (* 0.4444444444444444 (* X X))))) (584 31.01631348979464 (if (<= Y -3.4275998904481012e-130) (* 0.1111111111111111 (* Y Y)) (if (<= Y 5.756971259033528e-270) (* 0.4444444444444444 (* X X)) (* Z (* Z 0.1111111111111111))))) (584 31.027768033425435 (if (<= Y -3.4275998904481012e-130) (* 0.1111111111111111 (* Y Y)) (if (<= Y 8.563862394213806e-259) (* X (* X 0.4444444444444444)) (* Z (* Z 0.1111111111111111))))) (320 36.56308986594532 (* 0.4444444444444444 (* X X)))))","end":0.3532163053219776,"end-est":0.319355029305326,"identifier":"#f","input":"(pow (- X (/ (+ (+ X Y) Z) 3.0)) 2.0)","link":"b27f864a5fca5fcf33cd4e7ee4f509dd32f1852b.1.6","name":"(X - (X+Y+Z)/3)^2","output":"(fma X (* X 0.4444444444444444) (* (+ Y Z) (+ (* (+ Y Z) 0.1111111111111111) (* X -0.4444444444444444))))","pre":"(and (and (and (<= -1000.0 X) (<= X 1000.0)) (and (<= -1000.0 Y) (<= Y 1000.0))) (and (<= -1000.0 Z) (<= Z 1000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- X (/ (+ (+ X Y) Z) 3.0)) 2.0)","start":0.5316283581234404,"start-est":0.5343515137479347,"status":"ex-start","target":false,"target-prog":"#f","time":10996.506591796875,"vars":["X","Y","Z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 0.4690375885716339) (13824 0.35250058007986) ((13632 0.3741253873339614 (fma (/ X -3.0) (- X) (* -0.1111111111111111 (pow (+ Y (+ Z X)) 2.0)))) (1612 12.869056543619301 (if (<= Y -1.0830893745684445e-87) (- (* X (/ X 3.0)) (* (+ Y X) (+ (* Z 0.2222222222222222) (* 0.1111111111111111 (+ Y X))))) (if (<= Y -3.48128510561764e-105) (* (+ Y Z) (+ (* -0.1111111111111111 (+ Y Z)) (* X -0.2222222222222222))) (if (<= Y -1.0322706562266943e-153) (- (* X (/ X 3.0)) (* (+ Y X) (+ (* Z 0.2222222222222222) (* 0.1111111111111111 (+ Y X))))) (+ (* X (/ X 3.0)) (* (+ Z X) (+ (* Y -0.2222222222222222) (* -0.1111111111111111 (+ Z X))))))))) (1480 7.227124396911311 (if (<= X -1.9015793746819397e-121) (+ (* X (/ X 3.0)) (* (+ Z X) (+ (* Y -0.2222222222222222) (* -0.1111111111111111 (+ Z X))))) (if (<= X 6.26011982858203e-104) (* (+ Y Z) (+ (* -0.1111111111111111 (+ Y Z)) (* X -0.2222222222222222))) (+ (* X (/ X 3.0)) (* (+ Z X) (+ (* Y -0.2222222222222222) (* -0.1111111111111111 (+ Z X)))))))) (1360 11.565108788489072 (if (<= X -4.6373401476509505e-76) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (if (<= X -4.3458051118961233e-94) (* (+ Y Z) (+ (* -0.1111111111111111 (+ Y Z)) (* X -0.2222222222222222))) (if (<= X -1.9015793746819397e-121) (* X (+ (* -0.2222222222222222 (+ Y Z)) (* X 0.2222222222222222))) (if (<= X 2.6601780288418686e-48) (* (+ Y Z) (+ (* -0.1111111111111111 (+ Y Z)) (* X -0.2222222222222222))) (* X (* -0.2222222222222222 (- (+ Y Z) X)))))))) (1216 0.36768439476203435 (+ (* X (/ X 3.0)) (/ (* (+ Y (+ Z X)) (+ Y (+ Z X))) -9.0))) (1096 30.37369173787388 (if (<= Y -3.4275998904481012e-130) (+ (* X (/ X 3.0)) (* -0.1111111111111111 (* Y Y))) (if (<= Y 5.756971259033528e-270) (* X (+ (* -0.2222222222222222 (+ Y Z)) (* X 0.2222222222222222))) (+ (* (+ Y X) (* Z -0.2222222222222222)) (* Z (* Z -0.1111111111111111)))))) (968 30.372129562498994 (if (<= Y -3.4275998904481012e-130) (+ (* X (/ X 3.0)) (* -0.1111111111111111 (* Y Y))) (if (<= Y 5.756971259033528e-270) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (* Z (+ (* Z -0.1111111111111111) (* -0.2222222222222222 (+ Y X))))))) (968 30.372923392386852 (if (<= Y -3.4275998904481012e-130) (+ (* X (/ X 3.0)) (* -0.1111111111111111 (* Y Y))) (if (<= Y 5.756971259033528e-270) (* X (+ (* -0.2222222222222222 (+ Y Z)) (* X 0.2222222222222222))) (* Z (+ (* Z -0.1111111111111111) (* -0.2222222222222222 (+ Y X))))))) (840 30.504667403559324 (if (<= Z 7.463844584179029e-292) (* -0.1111111111111111 (* Y Y)) (if (<= Z 1.9000092233529753e-116) (* (- X Y) (* X 0.2222222222222222)) (* Z (+ (* Z -0.1111111111111111) (* Y -0.2222222222222222)))))) (840 30.47352043928568 (if (<= Z 7.463844584179029e-292) (* -0.1111111111111111 (* Y Y)) (if (<= Z 1.9000092233529753e-116) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (* Z (+ (* Z -0.1111111111111111) (* Y -0.2222222222222222)))))) (840 30.38973866209909 (if (<= Z 7.463844584179029e-292) (* -0.1111111111111111 (* Y Y)) (if (<= Z 1.9000092233529753e-116) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (* Z (+ (* Z -0.1111111111111111) (* X -0.2222222222222222)))))) (840 30.6025743343975 (if (<= Y -3.4275998904481012e-130) (* Y (+ (* -0.2222222222222222 (+ Z X)) (* Y -0.1111111111111111))) (if (<= Y 5.756971259033528e-270) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (* Z (+ (* Z -0.1111111111111111) (* X -0.2222222222222222)))))) (840 30.46351677436231 (if (<= Y -3.4275998904481012e-130) (+ (* X (/ X 3.0)) (* -0.1111111111111111 (* Y Y))) (if (<= Y 5.756971259033528e-270) (* X (* -0.2222222222222222 (- (+ Y Z) X))) (* Z (+ (* Z -0.1111111111111111) (* X -0.2222222222222222)))))) (712 30.5817232753713 (if (<= Z 7.463844584179029e-292) (* -0.1111111111111111 (* Y Y)) (if (<= Z 1.9000092233529753e-116) (* (- X Y) (* X 0.2222222222222222)) (* Z (* Z -0.1111111111111111))))) (584 25.730728419038588 (if (<= X -1.9015793746819397e-121) (* X (* X 0.2222222222222222)) (if (<= X 6.26011982858203e-104) (* -0.1111111111111111 (* Y Y)) (* X (* X 0.2222222222222222))))) (584 31.257554508577538 (if (<= Y -3.4275998904481012e-130) (* -0.1111111111111111 (* Y Y)) (if (<= Y 5.756971259033528e-270) (* X (* X 0.2222222222222222)) (* Z (* Z -0.1111111111111111))))) (320 37.00326582741726 (* X (* X 0.2222222222222222)))))","end":0.35250058007986,"end-est":0.33822250976844204,"identifier":"#f","input":"(- (/ (pow X 2.0) 3.0) (pow (/ (+ (+ X Y) Z) 3.0) 2.0))","link":"2ed68572d24369cd7288618d988d3b104b8ed4d9.1.6","name":"X^2/3 - ((X+Y+Z)/3)^2","output":"(fma (pow (+ Y Z) 2.0) -0.1111111111111111 (* X (+ (* -0.2222222222222222 (+ Y Z)) (* X 0.2222222222222222))))","pre":"(and (and (and (<= -1000.0 X) (<= X 1000.0)) (and (<= -1000.0 Y) (<= Y 1000.0))) (and (<= -1000.0 Z) (<= Z 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (/ (pow X 2.0) 3.0) (pow (/ (+ (+ X Y) Z) 3.0) 2.0))","start":0.4690375885716339,"start-est":0.48378759768442026,"status":"ex-start","target":false,"target-prog":"#f","time":14827.21435546875,"vars":["X","Y","Z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 0.038995840942065076) (960 0.04129772062947493) ((1104 8.87583956933505 (if (<= X -1.9151729321339393e-113) (* X (+ (* X 0.25) (* Y -0.5))) (if (<= X -8.161962620468615e-135) (* -0.25 (* Y Y)) (if (<= X -2.6635874996929363e-157) (* X (+ (* X 0.25) (* Y -0.5))) (if (<= X 1.2058617401384551e-164) (* -0.25 (* Y Y)) (* X (+ (* X 0.25) (* Y -0.5)))))))) (1104 8.84067430109233 (if (<= X -1.9151729321339393e-113) (* X (+ (* X 0.25) (* Y -0.5))) (if (<= X -8.161962620468615e-135) (* Y (+ (* Y -0.25) (* X -0.5))) (if (<= X -2.6635874996929363e-157) (* X (+ (* X 0.25) (* Y -0.5))) (if (<= X 1.2058617401384551e-164) (* -0.25 (* Y Y)) (* X (+ (* X 0.25) (* Y -0.5)))))))) (848 9.365480323074053 (if (<= X -1.9151729321339393e-113) (* X (* X 0.25)) (if (<= X -8.161962620468615e-135) (* -0.25 (* Y Y)) (if (<= X -2.6635874996929363e-157) (* X (* X 0.25)) (if (<= X 1.2058617401384551e-164) (* -0.25 (* Y Y)) (* X (* X 0.25))))))) (320 23.126367546408066 (* X (* X 0.25)))))","end":0.04129772062947493,"end-est":0.041347509768442016,"identifier":"#f","input":"(- (/ (pow X 2.0) 2.0) (pow (/ (+ X Y) 2.0) 2.0))","link":"01f63d19042fb66a65121a8ee1cbabb03ed2bc63.1.6","name":"X^2/2 - ((X+Y)/2)^2","output":"(- (* X (/ X 2.0)) (* (+ X Y) (/ (+ X Y) 4.0)))","pre":"(and (and (<= -1000.0 X) (<= X 1000.0)) (and (<= -1000.0 Y) (<= Y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (/ (pow X 2.0) 2.0) (pow (/ (+ X Y) 2.0) 2.0))","start":0.038995840942065076,"start-est":0.04753876953688403,"status":"ex-start","target":false,"target-prog":"#f","time":6756.534423828125,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.03366872309297666) (7424 0.025438039304804587) ((848 9.12537813383856 (if (<= X -1.9151729321339393e-113) (* 0.25 (* X X)) (if (<= X -8.161962620468615e-135) (* Y (* Y 0.25)) (if (<= X -2.6635874996929363e-157) (* 0.25 (* X X)) (if (<= X 1.2058617401384551e-164) (* Y (* Y 0.25)) (* 0.25 (* X X))))))) (704 0.02516748125036058 (* (- Y X) (* -0.5 (* -0.5 (- Y X))))) (320 22.87343844150554 (* 0.25 (* X X)))))","end":0.025438039304804587,"end-est":0.01171875,"identifier":"#f","input":"(pow (- X (/ (+ X Y) 2.0)) 2.0)","link":"6c70685e4f135daa59448ce280d5b053e251a227.1.6","name":"(X -(X+Y)/2)^2","output":"(+ (* -0.5 (* Y X)) (+ (* 0.25 (pow Y 2.0)) (* 0.25 (* X X))))","pre":"(and (and (<= -1000.0 X) (<= X 1000.0)) (and (<= -1000.0 Y) (<= Y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- X (/ (+ X Y) 2.0)) 2.0)","start":0.03366872309297666,"start-est":0.029628759768442016,"status":"ex-start","target":false,"target-prog":"#f","time":4618.49169921875,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 0.4072898288101333) (960 0.3506797107724529) ((1096 7.821870581823199 (if (<= Y -2.0196450571303647e-133) (- (* X (/ X 3.0)) (/ (+ X Y) (/ 9.0 Y))) (if (<= Y 3.827584632226183e-154) (* -0.2222222222222222 (* X (- Y X))) (- (* X (/ X 3.0)) (/ (+ X Y) (/ 9.0 Y)))))) (976 9.089335348380727 (if (<= X -1.9151729321339393e-113) (* X (* -0.2222222222222222 (- Y X))) (if (<= X -8.161962620468615e-135) (* (* Y Y) -0.1111111111111111) (if (<= X -2.6635874996929363e-157) (* X (* -0.2222222222222222 (- Y X))) (if (<= X 1.2058617401384551e-164) (* (* Y Y) -0.1111111111111111) (* X (* -0.2222222222222222 (- Y X)))))))) (976 9.088725721649617 (if (<= X -1.9151729321339393e-113) (* -0.2222222222222222 (* X (- Y X))) (if (<= X -8.161962620468615e-135) (* (* Y Y) -0.1111111111111111) (if (<= X -2.6635874996929363e-157) (* -0.2222222222222222 (* X (- Y X))) (if (<= X 1.2058617401384551e-164) (* (* Y Y) -0.1111111111111111) (* X (* -0.2222222222222222 (- Y X)))))))) (968 7.887268318306716 (if (<= Y -2.0196450571303647e-133) (+ (* X (/ X 3.0)) (* (* Y Y) -0.1111111111111111)) (if (<= Y 3.827584632226183e-154) (* -0.2222222222222222 (* X (- Y X))) (+ (* X (/ X 3.0)) (* (* Y Y) -0.1111111111111111))))) (968 7.845317814440201 (if (<= Y -2.0196450571303647e-133) (+ (* X (/ X 3.0)) (/ (* Y Y) -9.0)) (if (<= Y 3.827584632226183e-154) (* -0.2222222222222222 (* X (- Y X))) (+ (* X (/ X 3.0)) (/ (* Y Y) -9.0))))) (960 0.3520900338242638 (- (* X (/ X 3.0)) (* (+ X Y) (/ (+ X Y) 9.0)))) (848 9.559602579360721 (if (<= X -1.9151729321339393e-113) (* 0.2222222222222222 (* X X)) (if (<= X -8.161962620468615e-135) (* (* Y Y) -0.1111111111111111) (if (<= X -2.6635874996929363e-157) (* 0.2222222222222222 (* X X)) (if (<= X 1.2058617401384551e-164) (* (* Y Y) -0.1111111111111111) (* 0.2222222222222222 (* X X))))))) (848 9.559939022898186 (if (<= X -1.9151729321339393e-113) (* 0.2222222222222222 (* X X)) (if (<= X -8.161962620468615e-135) (* (* Y Y) -0.1111111111111111) (if (<= X -2.6635874996929363e-157) (* 0.2222222222222222 (* X X)) (if (<= X 1.2058617401384551e-164) (* (* Y Y) -0.1111111111111111) (* X (* X 0.2222222222222222))))))) (320 23.22198724158175 (* 0.2222222222222222 (* X X)))))","end":0.3506797107724529,"end-est":0.30763627930532605,"identifier":"#f","input":"(- (/ (pow X 2.0) 3.0) (pow (/ (+ X Y) 3.0) 2.0))","link":"e97c53ef13a8660587c95de876c46127379e75a0.1.6","name":"X^2/3 - ((X+Y)/3)^2","output":"(+ (* X (/ X 3.0)) (/ (* (+ X Y) (+ X Y)) -9.0))","pre":"(and (and (<= -1000.0 X) (<= X 1000.0)) (and (<= -1000.0 Y) (<= Y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (/ (pow X 2.0) 3.0) (pow (/ (+ X Y) 3.0) 2.0))","start":0.4072898288101333,"start-est":0.41376879884221013,"status":"ex-start","target":false,"target-prog":"#f","time":10393.555419921875,"vars":["X","Y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7040 0.827136506335455) (21248 0.7231393788265338) ((8576 0.777483713626332 (+ (+ (* 2.0 (/ (* Z (- (+ (/ Y N) (/ X N)) X)) N)) (pow (- X (+ (/ Y N) (/ X N))) 2.0)) (* (/ Z N) (/ Z N)))) (8576 0.7244465932053943 (+ (+ (* 2.0 (/ (* Z (- (+ (/ Y N) (/ X N)) X)) N)) (pow (- X (+ (/ Y N) (/ X N))) 2.0)) (* Z (/ Z (* N N))))) (8320 0.7989670021814285 (+ (pow (+ (/ Y N) (/ Z N)) 2.0) (* (- X (/ X N)) (+ (- X (/ X N)) (* -2.0 (+ (/ Y N) (/ Z N))))))) (7296 0.8041453692738791 (pow (- (- X (/ Z N)) (+ (/ Y N) (/ X N))) 2.0)) (1856 0.7693519516141021 (+ (* X (- X (/ (+ Z (+ X Y)) N))) (* (/ (+ Z (+ X Y)) N) (- (/ (+ Z (+ X Y)) N) X)))) (1216 0.8728343663619997 (* (- X (/ (+ Y (+ Z X)) N)) (- X (/ (+ Y (+ Z X)) N)))) (1216 0.8271855460133024 (* (- X (/ (+ Z (+ X Y)) N)) (- X (/ (+ Z (+ X Y)) N)))) (836 49.30084622745931 (if (<= X 0.32109438086381226) (* Z (/ Z (* N N))) (* (- X (/ X N)) (- X (/ X N))))) (448 51.55397628228448 (* Z (/ (/ Z N) N))) (448 51.55397628228447 (* (/ Z N) (/ Z N))) (448 51.55397628228448 (* Z (/ Z (* N N)))) (192 53.919261339725786 (* X X))))","end":0.7231393788265338,"end-est":0.7477183724170479,"identifier":"#f","input":"(pow (- X (/ (+ (+ X Y) Z) N)) 2.0)","link":"5f9d7bd4777aed30bb10e050be9365bf091a00ce.1.6","name":"(X - (X+Y+Z)/N)^2","output":"(+ (/ (pow Z 2.0) (pow N 2.0)) (+ (* 2.0 (/ (* Z (- (+ (/ Y N) (/ X N)) X)) N)) (pow (- X (+ (/ Y N) (/ X N))) 2.0)))","pre":"(and (and (and (and (<= 0.001 X) (<= X 1000.0)) (and (<= 0.001 Y) (<= Y 1000.0))) (and (<= 0.001 Z) (<= Z 1000.0))) (and (<= 0.001 N) (<= N 1000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- X (/ (+ (+ X Y) Z) N)) 2.0)","start":0.827136506335455,"start-est":0.8107203384753552,"status":"ex-start","target":false,"target-prog":"#f","time":12381.87744140625,"vars":["X","Y","Z","N"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.014417481250360579) (448 0.002575916289218701) ((192 2.3161062250235385 (+ x 1.0)) (64 3.0829437867708234 1.0)))","end":0.002575916289218701,"end-est":0,"identifier":"#f","input":"(- (+ 1.0 x) (pow x 2.0))","link":"fba7ee45c274d5a8258d76185bc58f427dbc51b8.1.6","name":"1+x-x^2","output":"(+ 1.0 (* x (- 1.0 x)))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (+ 1.0 x) (pow x 2.0))","start":0.014417481250360579,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3587.338623046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.04377124062518029) (704 0.04377124062518029) ((716 24.85356066165341 (if (<= x -1.09230775107914e-186) (/ x (- b c)) (if (<= x -5.338553729849262e-203) (/ (- y) c) (if (<= x -1.5182129761376337e-209) (/ x (- b c)) (/ y (- b c)))))) (708 15.951206514453439 (if (<= y 8.513956394459544e-304) (/ x (- b c)) (- (/ y (- b c)) (/ x c)))) (580 2.54094763534391 (if (<= b -1.2779050544890175e-8) (+ (/ y b) (/ x b)) (/ (- (- x) y) c))) (576 0.2937712406251803 (* (/ 1.0 (- b c)) (+ x y))) (516 2.540822634962634 (if (<= b -1.2779050544890175e-8) (/ (+ x y) b) (/ (- (- x) y) c))) (452 25.133162898483622 (if (<= x -1.09230775107914e-186) (- (/ x c)) (/ y (- b c)))) (388 26.23001336282043 (if (<= x -1.09230775107914e-186) (- (/ x c)) (/ (- y) c))) (256 33.3324141231276 (/ (- y) c)) (192 60.85950818892683 (/ x b)) (192 60.92206426147365 (/ y b))))","end":0.04377124062518029,"end-est":0.05078125,"identifier":"#f","input":"(+ (/ x (- b c)) (/ y (- b c)))","link":"e80f5d8b0e8c609bf6af15df2d7cdb1aef755ed3.1.6","name":"x/(b-c) + y/(b-c)","output":"(+ (/ x (- b c)) (/ y (- b c)))","pre":"(and (and (and (and (<= -1e+15 x) (<= x 1e+15)) (and (<= -1e+15 b) (<= b 10.0))) (and (<= 1e-15 c) (<= c 1e+15))) (and (<= -1e+15 y) (<= y 1e+15)))","prec":"binary64","preprocess":"()","spec":"(+ (/ x (- b c)) (/ y (- b c)))","start":0.04377124062518029,"start-est":0.05078125,"status":"ex-start","target":false,"target-prog":"#f","time":6955.861328125,"vars":["x","b","c","y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(- (* (sqrt x) (sqrt x)) x)","link":"743a68c0121d8df4ae05b6d081ca4c354c4bc10e.1.6","name":"sqrt(x) * sqrt(x)  - x","output":"#f","pre":"(and (<= -1.79e+308 x) (<= x -1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (* (sqrt x) (sqrt x)) x)","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":3.069091796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.03457312031259015) (576 0.033219360937770434) ((576 0.19453074404994758 (/ (- c b) (/ (+ c -1.0) a))) (520 11.013479919979929 (if (<= b -4.713180557056554e-110) (* b a) (if (<= b 1.8474472641632496e-146) (- (* c a)) (* b a)))) (320 1.8471879776434612 (* a (- b c))) (192 21.857779035151314 (* b a)) (64 60.05837993667253 a)))","end":0.033219360937770434,"end-est":0.02734375,"identifier":"#f","input":"(* a (/ (- b c) (- 1.0 c)))","link":"ced89dabac5ffab5790bd7f7c8ddd4665b0d5e85.1.6","name":"a * ((b-c)/(1-c))","output":"(* (- c b) (/ a (+ c -1.0)))","pre":"(and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 c) (<= c 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* a (/ (- b c) (- 1.0 c)))","start":0.03457312031259015,"start-est":0.03515625,"status":"ex-start","target":false,"target-prog":"#f","time":7537.5126953125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((26496 0.2198212267792676) (26496 0.2198212267792676) ((26304 0.22360172355199526 (/ (+ a (log1p (exp (- a)))) (* (+ (exp (- a)) 1.0) (exp a)))) (19712 0.22014244540439576 (/ (+ a (log1p (exp (- a)))) (+ 1.0 (exp a)))) (13440 1.030974431411123 (* (+ a (log1p (exp (- a)))) (+ 0.5 (* a -0.25)))) (6976 1.1979462720980931 (/ (+ (* a 0.5) (log 2.0)) (+ a 2.0))) (6592 1.8379662874653193 (* 0.5 (log 2.0))) (192 61.521478959509885 (/ a 2.0))))","end":0.2198212267792676,"end-est":0.021816259768442016,"identifier":"#f","input":"(* (/ (exp (- a)) (+ 1.0 (exp (- a)))) (+ a (log (+ 1.0 (exp (- a))))))","link":"b1b1a286fcc9df284a54cdd86b262a21a092c9f2.1.6","name":"exp(-a)/(1+exp(-a))*(a+log(1+exp(-a)))","output":"(* (/ (exp (- a)) (+ (exp (- a)) 1.0)) (+ a (log (+ (exp (- a)) 1.0))))","pre":"(and (<= -1000.0 a) (<= a 1000.0))","prec":"binary64","preprocess":"()","spec":"(* (/ (exp (- a)) (+ 1.0 (exp (- a)))) (+ a (log (+ 1.0 (exp (- a))))))","start":0.2198212267792676,"start-est":0.021816259768442016,"status":"ex-start","target":false,"target-prog":"#f","time":5697.83447265625,"vars":["a"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 0.1850624384142769) (26368 0.03139624062518029) ((19908 1.1431635639375548 (if (<= y -8.910460885685153e-16) (/ (- (expm1 (+ y -2.0))) (+ (exp (- y)) 1.0)) (/ (- (expm1 (/ -2.0 (exp x)))) (+ (exp (- y)) 1.0)))) (19840 1.8048211134734746 (/ (- (expm1 (- -1.0 (exp (- y))))) (+ (exp (- y)) 1.0))) (13572 1.2110368892661183 (if (<= (- y) 1e-27) (* (expm1 (/ -2.0 (exp x))) -0.5) (/ (- (expm1 (+ y -2.0))) (+ (exp (- y)) 1.0)))) (13120 1.660849890732841 (* (expm1 (/ -2.0 (exp x))) -0.5)) (6848 2.5710945289979334 (* -0.5 (expm1 (+ -2.0 (* x 2.0))))) (6592 3.3976041023255523 (* -0.5 (expm1 -2.0)))))","end":0.03139624062518029,"end-est":0.046875,"identifier":"#f","input":"(/ (- 1.0 (exp (* (- (exp (- x))) (+ 1.0 (exp (- y)))))) (+ 1.0 (exp (- y))))","link":"c790ddc5380fe606ed23b04363a2efe361e01144.1.6","name":"(1-exp(-exp(-x)*(1+exp(-y))))/(1+exp(-y))","output":"(/ (- (expm1 (/ (- -1.0 (exp (- y))) (exp x)))) (+ (exp (- y)) 1.0))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (exp (* (- (exp (- x))) (+ 1.0 (exp (- y)))))) (+ 1.0 (exp (- y))))","start":0.1850624384142769,"start-est":0.35763577709832217,"status":"ex-start","target":false,"target-prog":"#f","time":7854.485595703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7872 0.000875) (960 0.031793331202975075) ())","end":0.031793331202975075,"end-est":0,"identifier":"#f","input":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* (* 4.0 b) x) y)) (* 2.0 x))","link":"4ec1438aacca421c1798ad06a8a22dfa36e86a1e.1.6","name":"-2*a+4*b*x^3 -4 * b*x*y + 2*x","output":"(+ (+ (* -2.0 a) (* y (* x (* b -4.0)))) (* x 2.0))","pre":"(and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 x) (<= x 1000.0))) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* (* 4.0 b) x) y)) (* 2.0 x))","start":0.000875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4968.768310546875,"vars":["a","b","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7872 0.000875) (960 0.031793331202975075) ())","end":0.031793331202975075,"end-est":0,"identifier":"#f","input":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* (* 4.0 b) x) y)) (* 2.0 x))","link":"b4b8b68610a3c6ccaa34d75dbcab766a15f9f06e.1.6","name":"-2*a+4*b*x^3 - 4*b*x*y + 2*x","output":"(+ (+ (* -2.0 a) (* y (* x (* b -4.0)))) (* x 2.0))","pre":"(and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 x) (<= x 1000.0))) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* (* 4.0 b) x) y)) (* 2.0 x))","start":0.000875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4903.17236328125,"vars":["a","b","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7744 0.0065) (832 0.03741833120297508) ((840 5.129241255821179 (if (<= a -4.345791159353037e-228) (* 2.0 (- x a)) (if (<= a 7.101654683445244e-271) (+ (* 2.0 x) (* b (* -4.0 y))) (* 2.0 (- x a))))) (840 5.200147173929772 (if (<= x -3.151774939032336e-235) (* 2.0 (- x a)) (if (<= x 7.153926381034121e-281) (+ (* -2.0 a) (* -4.0 (* y b))) (* 2.0 (- x a))))) (320 6.11773324284881 (* 2.0 (- x a))) (192 34.447689399301375 (* -2.0 a))))","end":0.03741833120297508,"end-est":0.00390625,"identifier":"#f","input":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* 4.0 b) y)) (* 2.0 x))","link":"4358af0fd639b071c32102f8df301c3f4b7d6a7c.1.6","name":"-2*a+4*b*x^3 - 4*b*y + 2*x","output":"(+ (* 2.0 x) (+ (* -2.0 a) (* -4.0 (* y b))))","pre":"(and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 x) (<= x 1000.0))) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (* (- 2.0) a) (* (* 4.0 b) (pow x 3.0))) (* (* 4.0 b) y)) (* 2.0 x))","start":0.0065,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":6615.400390625,"vars":["a","b","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007823120312590144) (6720 0.000375) ((448 0.007823120312590144 (+ a (* t (- b a)))) (320 10.50730779462244 (* a (- 1.0 t))) (320 0.8861855488596333 (+ a (* t b))) (64 11.32137985938476 a)))","end":0.000375,"end-est":0,"identifier":"#f","input":"(+ a (* t (- b a)))","link":"bcd20e26712409124810895f711afd83bf9389c3.1.6","name":"a+t*(b-a)","output":"(fma t (- b a) a)","pre":"(and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 t) (<= t 1000.0))) (and (<= -1000.0 b) (<= b 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ a (* t (- b a)))","start":0.007823120312590144,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3349.431640625,"vars":["a","t","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01574427453879836) (6720 0.000875) ((584 10.772788105130015 (if (<= t 8.556669588498515e-32) (- a (* t a)) (if (<= t 1.2370657192253703e-27) (* t b) (- a (* t a))))) (456 11.741698395200704 (if (<= t 8.556669588498515e-32) a (if (<= t 1.2370657192253703e-27) (* t b) a))) (448 0.010482635863249424 (+ a (* t (- b a)))) (320 1.0848027188304168 (+ a (* t b))) (64 11.607237483378562 a)))","end":0.000875,"end-est":0,"identifier":"#f","input":"(+ (* (- 1.0 t) a) (* t b))","link":"10f92adda07f10d8cbd8cd5f3db345cd1f3a9c16.1.6","name":"(1-t)*a+t*b","output":"(fma t (- b a) a)","pre":"(and (and (and (<= -1000.0 t) (<= t 1000.0)) (and (<= -1000.0 a) (<= a 1000.0))) (and (<= -1000.0 b) (<= b 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (- 1.0 t) a) (* t b))","start":0.01574427453879836,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":4068.848388671875,"vars":["t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.5184597926128179) (26304 0.4722304481993268) ((20032 0.5871605192262267 (* y (+ 2.0 (/ (pow y 3.0) (* (fma (pow y 3.0) 2.0 x) -0.3333333333333333))))) (20032 0.4970032112505175 (* y (fma (pow y 3.0) (/ -3.0 (+ x (* 2.0 (pow y 3.0)))) 2.0))) (13760 0.5221823485940618 (- (* y 2.0) (* 3.0 (/ (pow y 4.0) (+ x (* 2.0 (pow y 3.0))))))) (13760 0.5184597926128179 (+ (* y 2.0) (/ (* -3.0 (pow y 4.0)) (+ x (* 2.0 (pow y 3.0)))))) (7364 28.511805043680845 (if (<= y 0.34126652528508356) (+ (* y 2.0) (* (pow y 4.0) (/ -3.0 x))) (- (* y 2.0) (fma y 1.5 (/ x (/ (* y y) -0.75)))))) (7364 28.513731914125014 (if (<= y 0.34126652528508356) (+ (* y 2.0) (* (pow y 4.0) (/ -3.0 x))) (- (* y 2.0) (fma (/ x (* y y)) -0.75 (* y 1.5))))) (7172 28.510144757979567 (if (<= y 0.34126652528508356) (+ (* y 2.0) (* (pow y 4.0) (/ -3.0 x))) (fma y 0.5 (* 0.75 (/ (/ x y) y))))) (7108 35.29925622948896 (if (<= y 0.34126652528508356) (* y 2.0) (fma y 0.5 (* 0.75 (/ (/ x y) y))))) (964 35.29990838979516 (if (<= y 0.34126652528508356) (* y 2.0) (* y (+ 0.5 (/ (/ (* x 0.75) (* y y)) y))))) (324 40.362840048284724 (if (<= y 0.4749827905301307) (* y 2.0) (* y 0.5))) (192 44.84157282122882 (* y 2.0))))","end":0.4722304481993268,"end-est":0.45565914254587747,"identifier":"#f","input":"(- (* 2.0 y) (/ (* 3.0 (pow y 4.0)) (+ x (* 2.0 (pow y 3.0)))))","link":"2bb6aea23a0c6e55602a622b6c3688c4dc977d1d.1.6","name":"2*y-(3*y^4)/(x+2*y^3)","output":"(fma -3.0 (/ (pow y 4.0) (fma 2.0 (pow y 3.0) x)) (+ y y))","pre":"(and (and (<= 0.001 y) (<= y 100.0)) (and (<= 0.001 x) (<= x 100.0)))","prec":"binary64","preprocess":"()","spec":"(- (* 2.0 y) (/ (* 3.0 (pow y 4.0)) (+ x (* 2.0 (pow y 3.0)))))","start":0.5184597926128179,"start-est":0.5000190793045699,"status":"ex-start","target":false,"target-prog":"#f","time":9961.02490234375,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.1893516921910155) (26624 0.17830921094065502) ((20160 0.2164464296960634 (+ (* 2.0 y) (* (/ 1.0 (/ (fma 2.0 (pow y 3.0) x) (pow y 4.0))) -2.0))) (13760 0.1893516921910155 (+ (* 2.0 y) (/ (* (pow y 4.0) -2.0) (+ (* 2.0 (pow y 3.0)) x)))) (13444 27.571328576902438 (if (<= y 0.34126652528508356) (* y (fma -2.0 (/ (pow y 3.0) x) 2.0)) (fma (/ 0.5 y) (/ x y) y))) (7172 27.56446533365433 (if (<= y 0.34126652528508356) (+ (* 2.0 y) (* (pow y 4.0) (/ -2.0 x))) (fma (/ 0.5 y) (/ x y) y))) (6980 34.345299723318576 (if (<= y 0.34126652528508356) (* 2.0 y) (fma (/ 0.5 y) (/ x y) y))) (452 39.341088889039796 (if (<= y 0.474) (* 2.0 y) (- (* 2.0 y) y))) (192 44.07969122431917 (* 2.0 y))))","end":0.17830921094065502,"end-est":0.1640625,"identifier":"#f","input":"(- (* 2.0 y) (/ (* 2.0 (pow y 4.0)) (+ x (* 2.0 (pow y 3.0)))))","link":"0f0ea6d7d8e675aa6581c8f54b9125f11aa047a6.1.6","name":"2*y-(2*y^4)/(x+2*y^3)","output":"(- (* 2.0 y) (sqrt (/ (* 4.0 (pow y 8.0)) (pow (+ (* 2.0 (pow y 3.0)) x) 2.0))))","pre":"(and (and (<= 0.001 y) (<= y 100.0)) (and (<= 0.001 x) (<= x 100.0)))","prec":"binary64","preprocess":"()","spec":"(- (* 2.0 y) (/ (* 2.0 (pow y 4.0)) (+ x (* 2.0 (pow y 3.0)))))","start":0.1893516921910155,"start-est":0.193691259768442,"status":"ex-start","target":false,"target-prog":"#f","time":9626.47216796875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 7.837869544970455) (80712 1.7708939715584409) ((74504 1.773440365179549 (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -9e-6) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y)))) (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -1e-13) (+ (* -2.0 (/ (pow y 7.0) (pow x 2.0))) (+ (* -8.0 (/ (pow y 13.0) (pow x 4.0))) (- (* -4.0 (/ (pow y 10.0) (pow x 3.0))) (/ (pow y 4.0) x)))) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))))) (61128 2.6606349933578928 (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -1.5e-6) (fma (/ x y) (/ 1.0 (- (* y 2.0) (/ (/ x y) y))) (- y (/ (* y y) (- (* y 2.0) (/ (/ x y) y))))) (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -1e-13) (- (fma -2.0 (/ (pow y 7.0) (* x x)) (* -4.0 (/ (pow y 10.0) (pow x 3.0)))) (/ (pow y 4.0) x)) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))))) (41544 4.6925344738651384 (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -3e-8) (fma (/ x y) (/ 1.0 (- (* y 2.0) (/ (/ x y) y))) (- y (/ (* y y) (- (* y 2.0) (/ (/ x y) y))))) (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -1e-13) (- (* (/ -2.0 x) (/ (pow y 7.0) x)) (/ (pow y 4.0) x)) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))))) (7552 7.648851302585277 (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))) (1216 7.680600814662878 (- y (/ (- (* y y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))) (1092 47.422542989487155 (if (<= y 0.985) (+ y (/ (/ x y) (- (* y 2.0) (/ (/ x y) y)))) (* y 0.5))) (192 53.068426025845376 (* y 0.5)) (64 61.983696707648676 0.0) (64 57.977913835463895 y)))","end":1.7708939715584409,"end-est":1.3986883024055181,"identifier":"#f","input":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","link":"e017701d87e7934d606697aa4e9597f10be23321.1.6","name":"y-(y^2-x/y)/(2*y-x/y^2)","output":"(if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -9e-6) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y)))) (if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) -1e-13) (fma -2.0 (/ (pow y 7.0) (* x x)) (- (fma -8.0 (/ (pow y 13.0) (pow x 4.0)) (* -4.0 (/ (pow y 10.0) (pow x 3.0)))) (/ (pow y 4.0) x))) (+ y (/ (fma y (- y) (/ x y)) (- (* y 2.0) (/ (/ x y) y))))))","pre":"(and (and (<= 0.001 y) (<= y 100.0)) (and (<= 0.001 x) (<= x 100.0)))","prec":"binary64","preprocess":"()","spec":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","start":7.837869544970455,"start-est":7.352890311334704,"status":"imp-start","target":false,"target-prog":"#f","time":11828.102783203125,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 44.68721173053295) (22212 8.127637663008436) ((7508 12.357467946550107 (if (<= y 4.04927824952171e-108) 0.0 (if (<= y 1.1404958690605441e-82) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ x (* y y))))) (if (<= y 1.359353763652169e-45) (/ (- (pow y 4.0)) x) (if (<= y 1.5518992373958199e-43) (- y (/ (- (* y y) (/ x y)) (- (* y 2.0) (/ (/ x y) y)))) (if (<= y 1.9872001615515834e-32) (* (pow y 4.0) (/ 1.0 (- x))) (+ y (/ (- (/ x y) (* y y)) (+ (* y 2.0) (* x (/ -1.0 (* y y)))))))))))) (7380 12.356980251876337 (if (<= y 4.04927824952171e-108) 0.0 (if (<= y 1.1404958690605441e-82) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ x (* y y))))) (if (<= y 1.359353763652169e-45) (/ (- (pow y 4.0)) x) (if (<= y 1.5518992373958199e-43) (- y (/ (- (* y y) (/ x y)) (- (* y 2.0) (/ (/ x y) y)))) (if (<= y 1.9872001615515834e-32) (/ (- (pow y 4.0)) x) (+ y (/ (- (/ x y) (* y y)) (+ (* y 2.0) (* x (/ -1.0 (* y y)))))))))))) (1476 13.038318175380569 (if (<= y 4.718739044097013e-117) 0.0 (+ y (* (- (/ x y) (* y y)) (/ 1.0 (- (* y 2.0) (/ (/ x y) y))))))) (1348 12.56991185830585 (if (<= y 4.718739044097013e-117) 0.0 (- y (/ (- (* y y) (/ x y)) (- (* y 2.0) (/ (/ x y) y)))))) (324 13.839225902476633 (if (<= y 1.2854168173194907e-85) 0.0 (* y 0.5))) (196 21.915483692228044 (if (<= y 2.269073163907308e-79) 0.0 y)) (64 59.0472435615201 y)))","end":8.127637663008436,"end-est":7.661072902808505,"identifier":"#f","input":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","link":"c81253c928facfa86ca977cfaeaa9a317b57b397.1.6","name":"y-(y^2-x/y)/(2*y-x/y^2)","output":"(if (<= (+ y (/ (- (/ x y) (pow y 2.0)) (- (* y 2.0) (/ x (pow y 2.0))))) 1e-90) (/ (- (pow y 4.0)) x) (fma x (/ (/ 1.0 y) (- (* y 2.0) (/ (/ x y) y))) (- y (/ (* y y) (- (* y 2.0) (/ (/ x y) y))))))","pre":"(and (and (<= 0.0 y) (<= y 1000.0)) (and (<= 0.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","start":44.68721173053295,"start-est":44.905474330859846,"status":"imp-start","target":false,"target-prog":"#f","time":11245.502685546875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 44.48996674394091) (34632 8.99608561210015) ((1608 12.783209389414607 (if (<= y -1.6665788251149086e-78) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ x (/ y (/ 1.0 y)))))) (if (<= y 2.7577136233904715e-92) 0.0 (+ y (/ (- (/ x y) (* y y)) (+ (* y 2.0) (/ -1.0 (* y (/ y x))))))))) (1480 12.593645495775005 (if (<= y -3.176149353574332e-88) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ (/ x y) y)))) (if (<= y 2.7577136233904715e-92) 0.0 (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ (/ x y) y))))))) (1480 12.763065475559404 (if (<= y -1.6665788251149086e-78) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ x (/ y (/ 1.0 y)))))) (if (<= y 2.7577136233904715e-92) 0.0 (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ (/ x y) y))))))) (968 13.573115154311756 (if (<= y -1.6665788251149086e-78) (* y 0.5) (if (<= y 2.7577136233904715e-92) 0.0 (+ (* y 0.5) (* x (/ 0.25 (* y y))))))) (456 13.557025053655053 (if (<= y -1.6665788251149086e-78) (* y 0.5) (if (<= y 2.7577136233904715e-92) 0.0 (* y 0.5)))) (64 23.417274763948615 0.0)))","end":8.99608561210015,"end-est":6.042235528203127,"identifier":"#f","input":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","link":"3e9a4fe6c91d56a8a6afde351b38523798ce5826.1.6","name":"y-(y^2-x/y)/(2*y-x/y^2)","output":"(if (<= (- y (/ (- (pow y 2.0) (/ x y)) (- (* y 2.0) (/ x (pow y 2.0))))) -5e-79) (+ y (/ (- (/ x y) (* y y)) (+ (* y 2.0) (/ -1.0 (* y (/ y x)))))) (if (<= (- y (/ (- (pow y 2.0) (/ x y)) (- (* y 2.0) (/ x (pow y 2.0))))) 2e-96) (/ (- (pow y 4.0)) x) (+ y (/ (- (/ x y) (* y y)) (- (* y 2.0) (/ (/ x y) y))))))","pre":"(and (and (<= -1000.0 y) (<= y 1000.0)) (and (<= -1000.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- y (/ (- (pow y 2.0) (/ x y)) (- (* 2.0 y) (/ x (pow y 2.0)))))","start":44.48996674394091,"start-est":45.025909388116496,"status":"imp-start","target":false,"target-prog":"#f","time":10649.41845703125,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 1.035350541263519) (14016 0.8608324489404077) ((6976 0.8887027939315058 (* y (* (fma y (* y x) -3.0) -0.5))) (1600 1.0180742805816354 (* (* 0.5 y) (/ (- 9.0 (* x (* (* y y) (* y (* y x))))) (+ 3.0 (* x (* y y)))))) (708 54.46603423923166 (if (<= y 1.3081) (* y 1.5) (* y (* -0.5 (* y (* y x)))))) (704 1.0263259432668315 (* (* 0.5 y) (- 3.0 (* x (* y y))))) (704 1.035350541263519 (* (* 0.5 y) (- 3.0 (* y (* y x))))) (192 60.594760665724486 (* y 1.5))))","end":0.8608324489404077,"end-est":0.8535712435211941,"identifier":"#f","input":"(* (* 0.5 y) (- 3.0 (* (* x y) y)))","link":"6a53e1f845b8d652faec0995812883e6d2894e58.1.6","name":"0.5 * y * (3 - (x*y)*y)","output":"(* (* 0.5 y) (/ (fma (* x x) (- (pow y 4.0)) 9.0) (+ 3.0 (* x (* y y)))))","pre":"(and (and (<= 1.0 y) (<= y 2.0)) (and (<= 1.0 x) (<= x 4.0)))","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 y) (- 3.0 (* (* x y) y)))","start":1.035350541263519,"start-est":0.9898454655222925,"status":"apx-start","target":false,"target-prog":"#f","time":7348.200439453125,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((32960 1.9394522759363033) (6848 0.47249205290355134) ())","end":0.47249205290355134,"end-est":0.11609140828044984,"identifier":"#f","input":"(- (+ (* r (cos phi)) (sqrt (- (pow l 2.0) (pow (+ offset (* r (sin phi))) 2.0)))) xstart)","link":"4b9c398dd2fc4f9fa273c1ff5d5458552818571d.1.6","name":"(r * cos(phi) + sqrt( pow(l,2) - pow(offset + r * sin(phi),2)) - xstart)","output":"(- (+ (* r (cos phi)) l) xstart)","pre":"(and (and (and (and (and (<= 0.0 r) (<= r 1000.0)) (and (<= -1000000000.0 phi) (<= phi 1000000000.0))) (and (<= 0.0 l) (<= l 1000.0))) (and (<= 0.0 offset) (<= offset 1000.0))) (and (<= 0.0 xstart) (<= xstart 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (+ (* r (cos phi)) (sqrt (- (pow l 2.0) (pow (+ offset (* r (sin phi))) 2.0)))) xstart)","start":1.9394522759363033,"start-est":2.339704719731122,"status":"imp-start","target":false,"target-prog":"#f","time":12185.99365234375,"vars":["r","phi","l","offset","xstart"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"dd9b5ef4e5ee714d6a78cfd084e5ea561b9e6f0e.1.6","name":"sqrt(x+1)-sqrt(x)","output":"#f","pre":"(and (<= -1.79e+308 x) (<= x -1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":85.2001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.248625) (13184 0.203875) ((320 0.2685 (/ z (/ y z)))))","end":0.203875,"end-est":0.24609375,"identifier":"#f","input":"(/ (pow z 2.0) y)","link":"73132ef8e0bab472a2cf04643c29bf2f03e6d9aa.1.6","name":"z^2/y","output":"(sqrt (/ (pow z 4.0) (* y y)))","pre":"(and (and (<= 0.0001 z) (<= z 100.0)) (and (<= 0.0001 y) (<= y 100.0)))","prec":"binary64","preprocess":"()","spec":"(/ (pow z 2.0) y)","start":0.248625,"start-est":0.2578125,"status":"ex-start","target":false,"target-prog":"#f","time":4552.6943359375,"vars":["z","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 4.737311274106514) (7112 1.33755965343327) ((976 9.613315806643401 (if (<= d -3.6e-172) (- (* a b) (/ a c)) (if (<= d 5e-173) (+ (* a b) (/ 1.0 c)) (if (<= d 6.6e-87) (- (/ 1.0 c) (/ a c)) (if (<= d 3.5e-21) (+ (* a b) (/ 1.0 c)) (* a b)))))) (840 1.3416327737458602 (if (<= d -2.8e-19) (* a b) (if (<= d 3.6e-28) (+ (* a b) (/ (- 1.0 a) c)) (* a b)))) (712 8.613180950781553 (if (<= d -3.6e-172) (- (* a b) (/ a c)) (if (<= d 3.5e-21) (+ (* a b) (/ 1.0 c)) (* a b)))) (580 13.965601646888922 (if (<= d 3.6e-28) (- (* a b) (/ a c)) (* a b))) (192 18.90955948677008 (* a b))))","end":1.33755965343327,"end-est":0.006191259768442017,"identifier":"#f","input":"(+ (* (- 1.0 a) (* (pow (* b c) d) (/ 1.0 c))) (* a b))","link":"5f07537eef3f13afb4c473109ec31f182b35a0b4.1.6","name":"(1-a)*(pow(b*c,d)*(1/c))+a*b","output":"(if (<= d -2.8e-19) (* a b) (if (<= d 3.6e-28) (fma b a (/ (- 1.0 a) c)) (* a b)))","pre":"(and (and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308))) (and (<= -1.79e+308 d) (<= d 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (* (- 1.0 a) (* (pow (* b c) d) (/ 1.0 c))) (* a b))","start":4.737311274106514,"start-est":3.011426360323799,"status":"imp-start","target":false,"target-prog":"#f","time":15838.400390625,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.2902712406251803) (576 0.29076184218813095) ((324 49.89156484239378 (if (<= n 64.0) (/ n b) 1.0)) (320 1.332830986247596 (/ n (+ n b))) (64 51.50520627338497 1.0)))","end":0.29076184218813095,"end-est":0.30078125,"identifier":"#f","input":"(/ (+ a n) (+ (+ a b) n))","link":"48dab224b9e1095a1214b7dd0412f1bc850438aa.1.6","name":"(a+n)/(a+b+n)","output":"(/ (+ a n) (+ a (+ n b)))","pre":"(and (and (and (<= 0.0 a) (<= a 1.0)) (and (<= 1.0 n) (<= n 1000.0))) (and (<= 1.0 b) (<= b 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ a n) (+ (+ a b) n))","start":0.2902712406251803,"start-est":0.3125,"status":"ex-start","target":false,"target-prog":"#f","time":6559.965576171875,"vars":["a","n","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.008625) (320 0.008625) ((192 0.5251498492168072 (/ a b)) (64 60.69494898252836 1.0)))","end":0.008625,"end-est":0.00390625,"identifier":"#f","input":"(/ a (+ b a))","link":"2bae832b79be94774411c1462bcfd61f25005cb5.1.6","name":"a/(b+a)","output":"(/ a (+ a b))","pre":"(and (and (<= 0.0 a) (<= a 1.0)) (and (<= 1000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ a (+ b a))","start":0.008625,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2632.08154296875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 8.772359032328815) (19648 0.33876917344137636) ((19648 0.3229979328161958 (/ (hypot x y) (/ (sqrt x) (hypot x y)))) (19584 0.5925052719418938 (pow (/ (hypot x y) (pow x 0.25)) 2.0)) (7772 14.086739730173147 (if (<= x 8.988242009171814e-147) (* y (* y (pow x -0.5))) (if (<= x 1.5780149975553124e-140) (pow x 1.5) (if (<= x 1.1329653033471462e-127) (* (* y y) (pow x -0.5)) (if (<= x 5.309141289696471e-106) (pow x 1.5) (if (<= x 1.1696482053979765e-99) (/ (* y y) (sqrt x)) (if (<= x 4.5362958093141887e-88) (pow x 1.5) (if (<= x 5.746099073936254e-81) (* y (* y (sqrt (/ 1.0 x)))) (pow x 1.5))))))))) (7772 14.082623727594903 (if (<= x 8.988242009171814e-147) (* y (/ y (sqrt x))) (if (<= x 1.5780149975553124e-140) (pow x 1.5) (if (<= x 1.1329653033471462e-127) (* (* y y) (pow x -0.5)) (if (<= x 5.309141289696471e-106) (pow x 1.5) (if (<= x 1.1696482053979765e-99) (* y (/ y (sqrt x))) (if (<= x 4.5362958093141887e-88) (pow x 1.5) (if (<= x 5.746099073936254e-81) (* y (* y (sqrt (/ 1.0 x)))) (pow x 1.5))))))))) (7708 14.086864730287317 (if (<= x 8.988242009171814e-147) (* y (* y (pow x -0.5))) (if (<= x 1.5780149975553124e-140) (pow x 1.5) (if (<= x 1.1329653033471462e-127) (* (* y y) (pow x -0.5)) (if (<= x 5.309141289696471e-106) (pow x 1.5) (if (<= x 1.1696482053979765e-99) (/ (* y y) (sqrt x)) (if (<= x 4.5362958093141887e-88) (pow x 1.5) (if (<= x 5.746099073936254e-81) (* y (* y (pow x -0.5))) (pow x 1.5))))))))) (7108 4.26252740363897 (if (<= x 2.2232423274002503e-169) (* y (/ y (sqrt x))) (/ (+ (* x x) (* y y)) (sqrt x)))) (6980 13.190507420740971 (if (<= (* y y) 1.8788839462263056e-307) (pow x 1.5) (/ (* y y) (sqrt x)))) (6528 28.957244733961478 (pow x 1.5))))","end":0.33876917344137636,"end-est":0.26171875,"identifier":"#f","input":"(/ (* (+ (* x x) (* y y)) 1.0) (sqrt x))","link":"3b2863ab371d6b007d6224a2219809ce477b5bc4.1.6","name":"(x*x + y*y) * 1/sqrt(x)","output":"(* (hypot x y) (/ (hypot x y) (sqrt x)))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* (+ (* x x) (* y y)) 1.0) (sqrt x))","start":8.772359032328815,"start-est":7.058925878234856,"status":"imp-start","target":false,"target-prog":"#f","time":6281.392822265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 8.50875001440176) (19712 0.3274672937539664) ((19648 0.32385169219101567 (/ (hypot x y) (/ (sqrt x) (hypot x y)))) (19584 0.5892879781879264 (pow (/ (hypot x y) (pow x 0.25)) 2.0)) (14160 5.440664709225631 (if (<= y 1.2227489574808203e-203) (pow x 1.5) (if (<= y 1.0552171257400288e-195) (* (hypot x y) (* y (pow x -0.5))) (if (<= y 1.895772206718053e-173) (pow x 1.5) (if (<= y 8.12950975069829e-160) (pow (/ (- (* -0.5 (* x (/ x y))) y) (pow x 0.25)) 2.0) (/ (+ (* x x) (* y y)) (sqrt x))))))) (13776 5.420112651985175 (if (<= y 1.2227489574808203e-203) (pow x 1.5) (if (<= y 1.0552171257400288e-195) (* (hypot x y) (* y (pow x -0.5))) (if (<= y 1.895772206718053e-173) (pow x 1.5) (if (<= y 8.12950975069829e-160) (* (hypot x y) (* y (pow x -0.5))) (/ (+ (* x x) (* y y)) (sqrt x))))))) (7508 14.170346356303044 (if (<= y 1.2227489574808203e-203) (pow x 1.5) (if (<= y 1.0552171257400288e-195) (* y (* y (sqrt (/ 1.0 x)))) (if (<= y 1.895772206718053e-173) (pow x 1.5) (if (<= y 1.2527040058233465e-145) (* y (* y (sqrt (/ 1.0 x)))) (if (<= y 7.561240868437921e-125) (pow x 1.5) (* y (* y (sqrt (/ 1.0 x)))))))))) (7504 5.454247824167796 (if (<= y 1.2227489574808203e-203) (pow x 1.5) (if (<= y 1.0552171257400288e-195) (* y (* y (sqrt (/ 1.0 x)))) (if (<= y 1.895772206718053e-173) (pow x 1.5) (if (<= y 8.12950975069829e-160) (* y (* y (sqrt (/ 1.0 x)))) (/ (+ (* x x) (* y y)) (sqrt x))))))) (7500 13.194210345810076 (if (<= (* y y) 1.8670135030878165e-307) (pow x 1.5) (if (<= (* y y) 1.569267326205859e-290) (/ (* y y) (sqrt x)) (if (<= (* y y) 5.717236347053584e-249) (pow x 1.5) (/ (* y y) (sqrt x)))))) (6528 28.900906716059133 (pow x 1.5))))","end":0.3274672937539664,"end-est":0.3209762695368841,"identifier":"#f","input":"(/ (* (+ (* x x) (* y y)) 1.0) (sqrt x))","link":"378d2774c7190b00bd04bf7591685f45efb0fe5c.1.6","name":"(x*x + y*y) * 1/sqrt(x)","output":"(* (hypot x y) (* (hypot x y) (pow x -0.5)))","pre":"(and (and (<= 0.0 x) (<= x 1000.0)) (and (<= 0.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* (+ (* x x) (* y y)) 1.0) (sqrt x))","start":8.50875001440176,"start-est":9.805290137656343,"status":"imp-start","target":false,"target-prog":"#f","time":7008.107421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.000125) (320 0.002207722262221498) ())","end":0.002207722262221498,"end-est":0,"identifier":"#f","input":"(/ (/ deflate res) 2.0)","link":"a7be2b775cbaaf3aeb073c03b6a8c322d7b5d42e.1.6","name":"deflate / res / 2","output":"(/ (/ deflate 2.0) res)","pre":"(and (and (<= 0.0 deflate) (<= deflate 10.0)) (and (<= 0.0 res) (<= res 10000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (/ deflate res) 2.0)","start":0.000125,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1812.050537109375,"vars":["deflate","res"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.05717565179875435) (13504 0.06751917344137619) ((13120 0.05717565179875435 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 1.1368834357123505 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.2005030878389213 1.0)))","end":0.06751917344137619,"end-est":0.07421875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"30498f5a21c27ebbeabb4b253a3491df86b8b189.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 0.0 x) (<= x 256.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.05717565179875435,"start-est":0.08579820651481414,"status":"ex-start","target":false,"target-prog":"#f","time":3599.6103515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.017375) (13120 0.017375) ((6976 1.2196371371644712 (+ (sqrt x) (+ (+ (* x 0.5) 2.0) -1.0))) (6848 1.2145965443502937 (+ (sqrt x) (+ 1.0 (* x 0.5)))) (6592 1.8568549573699213 (+ 1.0 (sqrt x))) (64 3.2672904965573797 1.0)))","end":0.017375,"end-est":0.01171875,"identifier":"#f","input":"(+ (sqrt (+ x 1.0)) (sqrt x))","link":"91c8ef36a4ba4a214cec5a816e300fe92bbef82c.1.6","name":"sqrt(x+1)  + sqrt(x)","output":"(+ (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (+ x 1.0)) (sqrt x))","start":0.017375,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3683.459228515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00303740100229841) (448 0.00303740100229841) ())","end":0.00303740100229841,"end-est":0,"identifier":"#f","input":"(- (/ (* pos 2.0) height) 1.0)","link":"64c8cdd6d6e588f7f542b70d1f2545435d60cab3.1.6","name":"pos * 2.0 / height - 1.0","output":"(+ (/ (* pos 2.0) height) -1.0)","pre":"(and (and (<= 0.0 pos) (<= pos 32768.0)) (and (<= 1.0 height) (<= height 32768.0)))","prec":"binary64","preprocess":"()","spec":"(- (/ (* pos 2.0) height) 1.0)","start":0.00303740100229841,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2109.697265625,"vars":["pos","height"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 58.25182640550229) (26816 0.06934423120959017) ((20228 0.22797526153990824 (if (<= (exp x) 1.0) (+ x (* (fma 0.041666666666666664 (pow y 4.0) (* -0.5 (* y y))) (+ x 1.0))) (expm1 x))) (19648 0.48904330423966824 (fma (* y (* y -0.5)) (exp x) (expm1 x))) (13708 8.84720588294175 (if (<= y 2.8399890039279438e-101) (expm1 x) (if (<= y 2.255942945976651e-92) (fma 0.041666666666666664 (pow y 4.0) (* -0.5 (* y y))) (if (<= y 2.781349039937419e-80) (expm1 x) (fma 0.041666666666666664 (pow y 4.0) (* -0.5 (* y y))))))) (6464 15.536349097647339 (expm1 x)) (64 16.753968056497087 x)))","end":0.06934423120959017,"end-est":0.04632023826221708,"identifier":"#f","input":"(- (* (exp x) (cos y)) 1.0)","link":"a7568e425222e6e5b26702210bb5ba96b0bb223b.1.6","name":"exp(x)*cos(y)-1","output":"(+ (* (exp x) (+ (+ (* -0.001388888888888889 (pow y 6.0)) (* y (* y -0.5))) (* 0.041666666666666664 (pow y 4.0)))) (expm1 x))","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 0.25)))","prec":"binary64","preprocess":"()","spec":"(- (* (exp x) (cos y)) 1.0)","start":58.25182640550229,"start-est":57.74064606399371,"status":"imp-start","target":false,"target-prog":"#f","time":8544.91845703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 57.699285181921404) (6724 0.0801785624958425) ((6976 0.5674464102634883 (- (+ x (* x (* x 0.5))) (expm1 y))) (6724 0.24223477191799747 (if (<= x 1.2586213014228413e-10) (- x (expm1 y)) (expm1 x))) (6660 0.7367169916314998 (if (<= y 7.469759874856932e-11) (- (* x (+ (* x 0.5) 1.0)) y) (- (expm1 y)))) (576 1.7771565869180599 (- (* x (+ (* x 0.5) 1.0)) y)) (260 19.313230448985255 (if (<= y 1.5930614064351656e-177) x (- y))) (192 2.4298640548113344 (- x y)) (64 33.49830306220579 x)))","end":0.0801785624958425,"end-est":0.14257066998769247,"identifier":"#f","input":"(- (exp x) (exp y))","link":"ec92a1bf59914861fbe7e6c33c5577ce34c8b80d.1.6","name":"exp(x)-exp(y)","output":"(if (<= x 1.667109402076561e-22) (- x (expm1 y)) (- (expm1 x) y))","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (exp y))","start":57.699285181921404,"start-est":57.091524703763035,"status":"imp-start","target":false,"target-prog":"#f","time":5636.470703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.05214340061561778) (12992 0.05214340061561778) ((13380 19.350881517000232 (if (<= (sqrt y) 5e-103) (* (- x y) (sqrt (/ 1.0 x))) (/ (- x y) (sqrt y)))) (13380 19.278677695556905 (if (<= (sqrt y) 5e-103) (* (- x y) (sqrt (/ 1.0 x))) (* (- x y) (sqrt (/ 1.0 y))))) (13252 19.561106710093195 (if (<= (sqrt y) 5e-103) (sqrt x) (/ (- x y) (sqrt y)))) (13060 18.811747455627607 (if (<= (sqrt y) 8.287520322013715e-69) (sqrt x) (- (sqrt y)))) (6464 33.911411009713305 (sqrt x))))","end":0.05214340061561778,"end-est":0.07421875,"identifier":"#f","input":"(- (sqrt x) (sqrt y))","link":"388785f626984a238fdfa60ff364d67b13a62ae3.1.6","name":"sqrt(x)-sqrt(y)","output":"(- (sqrt x) (sqrt y))","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (sqrt x) (sqrt y))","start":0.05214340061561778,"start-est":0.07421875,"status":"ex-start","target":false,"target-prog":"#f","time":4423.26513671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 57.52738275465338) (6592 1.3309500865969033) ((7056 16.929299496636943 (if (<= x -1.7474831969972158e-114) (expm1 x) (if (<= x -1.0102412960454478e-137) (- (expm1 y)) (if (<= x -8.151342336483403e-163) (expm1 x) (if (<= x 2.064822271495613e-176) (- (expm1 y)) (expm1 x)))))) (6464 30.932672122578076 (expm1 x)) (64 32.20232388140336 x)))","end":1.3309500865969033,"end-est":1.391341203119857,"identifier":"#f","input":"(- (exp x) (exp y))","link":"b188c2e72ff10a80df9c20669b55aa4aad797610.1.6","name":"exp(x)-exp(y)","output":"(- x (expm1 y))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (exp y))","start":57.52738275465338,"start-est":55.87627109344503,"status":"imp-start","target":false,"target-prog":"#f","time":6227.671142578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.004875) (6720 0.004875) ((64 0.6831578966754042 1.0)))","end":0.004875,"end-est":0,"identifier":"#f","input":"(sqrt (- 1.0 (pow x 2.0)))","link":"d603b07292b86cd678550a9f516368b85426ad76.1.6","name":"sqrt(1-x^2)","output":"(sqrt (- 1.0 (* x x)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (- 1.0 (pow x 2.0)))","start":0.004875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3035.79052734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 3.163521656650895) (26432 0.5619118789439785) ((13632 0.5419985016033388 (* (* 2.0 (sin (* (- x y) 0.5))) (cos (* 0.5 (+ x y))))) (13124 56.15418834065834 (if (<= (sin x) 0.8218) (- (sin y)) (- x (sin y)))) (13124 55.866902380890636 (if (<= (sin x) 0.8218) (- (sin x) y) (- x (sin y)))) (13060 56.48811425936542 (if (<= (sin x) 0.8218) (- (sin y)) (sin x))) (12992 3.163521656650895 (- (sin x) (sin y))) (6464 58.65032350948067 (sin x))))","end":0.5619118789439785,"end-est":0.5596275879159782,"identifier":"#f","input":"(- (sin x) (sin y))","link":"c73f467eefbbce952701c56df0a6032aa278a17f.1.6","name":"sin(x)-sin(y)","output":"(* (* 2.0 (sin (* (- x y) 0.5))) (log1p (expm1 (cos (* 0.5 (+ x y))))))","pre":"(and (and (<= 0.9 x) (<= x 1.1)) (and (<= 0.9 y) (<= y 1.1)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":3.163521656650895,"start-est":3.3200347798468997,"status":"imp-start","target":false,"target-prog":"#f","time":6836.97802734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 23.566546995984226) (13632 0.4775178593921288) ((12992 23.566546995984226 (- (sin x) (sin y))) (260 58.22237610888476 (if (<= x 0.9999999542) (- y) x)) (192 51.82870648279975 (- x y)) (64 59.839842941036295 x)))","end":0.4775178593921288,"end-est":0.4893150879159782,"identifier":"#f","input":"(- (sin x) (sin y))","link":"7e1527f810d830f366ad7a7cc94f329477308fbe.1.6","name":"sin(x)-sin(y)","output":"(* 2.0 (* (sin (* (- x y) 0.5)) (cos (* 0.5 (+ x y)))))","pre":"(and (and (<= 0.9999999 x) (<= x 1.00000001)) (and (<= 0.9999999 y) (<= y 1.00000001)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":23.566546995984226,"start-est":23.630416786932322,"status":"imp-start","target":false,"target-prog":"#f","time":4939.871826171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0) (6848 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","link":"dd7a80ea1ca8099f8eb6b4b11207506734dba590.1.6","name":"(exp(2*x)-1)/(2*x)","output":"(/ (/ (expm1 (+ x x)) 2.0) x)","pre":"(and (<= -1.0 x) (<= x -1.0))","prec":"binary64","preprocess":"()","spec":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2379.790283203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26816 4.517544015023174) (52160 2.777671602634201) ((45824 2.984969514652367 (/ (+ (pow (exp x) (- a)) (pow (exp (- x)) b)) (+ (pow (exp x) (- c)) (exp (* x (- d)))))) (39552 3.1106255336621356 (/ (+ (/ 1.0 (pow (exp x) a)) (exp (- (* x b)))) (+ (pow (exp x) (- c)) (exp (* x (- d)))))) (33152 4.059029718073931 (/ (+ (pow (exp x) (- a)) (exp (- (* x b)))) (+ (exp (* x (- d))) (exp (* x (- c)))))) (33152 3.63255368470337 (/ (+ (exp (- (* x b))) (pow (exp a) (- x))) (+ (exp (* x (- d))) (exp (* x (- c)))))) (26880 4.622660775896377 (/ (+ (exp (- (* x b))) (/ 1.0 (exp (* x a)))) (+ (exp (* x (- d))) (exp (* x (- c)))))) (26816 4.517544015023174 (/ (+ (exp (- (* x b))) (exp (* x (- a)))) (+ (exp (* x (- d))) (exp (* x (- c)))))) (26560 54.12620590986248 (* (+ (pow (exp x) (- a)) (pow (exp x) (- b))) (+ (* x (* c 0.25)) 0.5))) (20224 54.223682405847384 (/ (+ (exp (- (* x b))) (exp (* x (- a)))) (+ 1.0 (exp (* x (- c)))))) (13504 54.30139710046417 (* 0.5 (+ (exp (- (* x b))) (exp (* x (- a)))))) (64 57.87488821650465 1.0)))","end":2.777671602634201,"end-est":2.977079241519049,"identifier":"#f","input":"(/ (+ (exp (* (- x) a)) (exp (* (- x) b))) (+ (exp (* (- x) c)) (exp (* (- x) d))))","link":"d10448773cb9321e2dcee22c8572d8cd10b228c3.1.6","name":"(exp(-x*a) + exp(-x*b)) / (exp(-x*c) + exp(-x*d))","output":"(/ (+ (pow (exp x) (- a)) (pow (exp (- x)) b)) (+ (pow (exp (- c)) x) (pow (exp (- x)) d)))","pre":"(and (and (and (and (and (<= 1.0 x) (<= x 10.0)) (and (<= 1.0 a) (<= a 1000.0))) (and (<= 1.0 b) (<= b 1000.0))) (and (<= 1.0 c) (<= c 1000.0))) (and (<= 1.0 d) (<= d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (exp (* (- x) a)) (exp (* (- x) b))) (+ (exp (* (- x) c)) (exp (* (- x) d))))","start":4.517544015023174,"start-est":4.602465223946765,"status":"imp-start","target":false,"target-prog":"#f","time":12890.310302734375,"vars":["x","a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.16162520351258203) (832 0.15259436093777043) ((1104 15.458201657364189 (if (<= y0 -1.8594109778195146e-122) (- y0 (* y0 (/ x (- x1 x0)))) (if (<= y0 -6.194942391604168e-244) (+ y0 (* x (/ (- y1 y0) x1))) (if (<= y0 8.109315805373976e-236) (* (/ y1 (- x0 x1)) (- x0 x)) (if (<= y0 1.6925015394299745e-165) (+ y0 (* x (/ (- y1 y0) x1))) (- y0 (* y0 (/ x (- x1 x0))))))))) (1104 15.45845587492131 (if (<= y0 -1.8594109778195146e-122) (- y0 (* y0 (/ x (- x1 x0)))) (if (<= y0 -6.194942391604168e-244) (+ y0 (* (- y1 y0) (/ x x1))) (if (<= y0 8.109315805373976e-236) (* (/ y1 (- x0 x1)) (- x0 x)) (if (<= y0 1.6925015394299745e-165) (+ y0 (* x (/ (- y1 y0) x1))) (- y0 (* y0 (/ x (- x1 x0))))))))) (968 8.703294562282105 (if (<= y0 -6.194942391604168e-244) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= y0 3.377357100325569e-280) (* (/ y1 (- x0 x1)) (- x0 x)) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x)))))) (968 6.029518353155624 (if (<= x -8.363228959053449e-201) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= x 6.435498244391276e-174) (+ y0 (/ (- y1 y0) (- 1.0 (/ x1 x0)))) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x)))))) (968 4.00186757724533 (if (<= x -9.39382373728008e-143) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= x 8.829592839410925e-163) (+ y0 (* (- x x0) (/ y1 (- x1 x0)))) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x)))))) (968 4.000321523425838 (if (<= x -9.39382373728008e-143) (+ y0 (/ x (/ (- x1 x0) (- y1 y0)))) (if (<= x 8.829592839410925e-163) (+ y0 (* (- x x0) (/ y1 (- x1 x0)))) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x)))))) (844 23.234873357499936 (if (<= x1 -5.469460149036999e-228) (+ y0 (* x (/ y1 x1))) (if (<= x1 3.420071210559683e-221) (* (- x0 x) (/ y1 x0)) (if (<= x1 5.25320360477159e-118) (- y0 (* y0 (/ x x1))) (+ y0 (* x (/ y1 x1))))))) (840 17.130083112651974 (if (<= x1 -2.669732201646011e-213) (+ y0 (/ x (/ x1 (- y1 y0)))) (if (<= x1 3.420071210559683e-221) (/ x (/ (- x0 x1) y0)) (+ y0 (/ x (/ x1 (- y1 y0))))))) (840 17.12578531726569 (if (<= x1 -2.669732201646011e-213) (+ y0 (* x (/ (- y1 y0) x1))) (if (<= x1 3.420071210559683e-221) (/ x (/ (- x0 x1) y0)) (+ y0 (/ x (/ x1 (- y1 y0))))))) (712 28.66584078763239 (if (<= y0 -9.687842846648171e-234) (- y0 (* y0 (/ x x1))) (if (<= y0 4.278803749215169e-226) (/ y1 (/ x1 x)) (- y0 (* y0 (/ x x1)))))) (712 22.683843064619154 (if (<= x1 -2.60603280805063e-227) (+ y0 (* x (/ y1 x1))) (if (<= x1 2.91956826664912e-145) (/ x (/ (- x0 x1) y0)) (+ y0 (* x (/ y1 x1)))))) (584 33.35811533718314 (if (<= y0 -9.687842846648171e-234) y0 (if (<= y0 2.1401339508628472e-225) (/ y1 (/ x1 x)) y0))) (64 61.10742281940513 y1) (64 34.578210187963684 y0)))","end":0.15259436093777043,"end-est":0.13509750976844204,"identifier":"#f","input":"(+ y0 (* (- y1 y0) (/ (- x x0) (- x1 x0))))","link":"4525796247a2fd6714812b8c50d4d0586c0e0225.1.6","name":"y0 + (y1-y0)*((x-x0)/(x1-x0))","output":"(+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0))))","pre":"(and (and (and (and (and (and (<= -1.0 y0) (<= y0 1.0)) (and (<= -1.0 y1) (<= y1 1.0))) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 x0) (<= x0 1.0))) (and (<= -1.0 x1) (<= x1 1.0))) (<= (/ (- x x0) (- x1 x0)) 0.5))","prec":"binary64","preprocess":"()","spec":"(+ y0 (* (- y1 y0) (/ (- x x0) (- x1 x0))))","start":0.16162520351258203,"start-est":0.15625,"status":"ex-start","target":false,"target-prog":"#f","time":18376.0673828125,"vars":["y0","y1","x","x0","x1"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 8.734544755654598) (8136 0.5340717794714559) ((2252 5.808362990840372 (if (<= (/ (- x x0) (- x1 x0)) -0.2) (* x (/ (- y1 y0) (- x1 x0))) (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (+ y0 (* x0 (/ (- y0 y1) (- x1 x0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (/ (* (- y1 y0) (- x1 x)) x0)) (/ x (/ (- x1 x0) (- y1 y0))))))) (2252 5.870808314575471 (if (<= (/ (- x x0) (- x1 x0)) -1e-7) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (+ y0 (* x0 (/ (- y0 y1) (- x1 x0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (/ (* (- y1 y0) (- x1 x)) x0)) (/ x (/ (- x1 x0) (- y1 y0))))))) (2252 5.871970233547447 (if (<= (/ (- x x0) (- x1 x0)) -1e-7) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (- y0 (/ x0 (/ (- x1 x0) (- y1 y0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (/ (* (- y1 y0) (- x1 x)) x0)) (/ x (/ (- x1 x0) (- y1 y0))))))) (2252 4.936837511633285 (if (<= (/ (- x x0) (- x1 x0)) -1e-7) (+ y0 (/ (- y1 y0) (/ (- x1 x0) x))) (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (- y0 (/ x0 (/ (- x1 x0) (- y1 y0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (- y1 (* (- y1 y0) (/ (- x x1) x0))) (/ x (/ (- x1 x0) (- y1 y0))))))) (2124 8.729833095241107 (if (<= (/ (- x x0) (- x1 x0)) -0.2) (* x (/ (- y1 y0) (- x1 x0))) (if (<= (/ (- x x0) (- x1 x0)) 0.5) (+ y0 (* x0 (/ (- y0 y1) x1))) (if (<= (/ (- x x0) (- x1 x0)) 1.1) (+ y1 (* x1 (/ (- y1 y0) x0))) (* x (/ (- y1 y0) (- x1 x0))))))) (2124 8.726502563743697 (if (<= (/ (- x x0) (- x1 x0)) -0.2) (* x (/ (- y1 y0) (- x1 x0))) (if (<= (/ (- x x0) (- x1 x0)) 0.5) (+ y0 (* x0 (/ (- y0 y1) x1))) (if (<= (/ (- x x0) (- x1 x0)) 1.1) (+ y1 (* x1 (/ (- y1 y0) x0))) (/ x (/ (- x1 x0) (- y1 y0))))))) (2124 8.099585295657485 (if (<= (/ (- x x0) (- x1 x0)) -0.2) (* x (/ (- y1 y0) (- x1 x0))) (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (+ y0 (* x0 (/ (- y0 y1) (- x1 x0)))) (if (<= (/ (- x x0) (- x1 x0)) 1.1) (+ y1 (* x1 (/ (- y1 y0) x0))) (/ x (/ (- x1 x0) (- y1 y0))))))) (2120 0.5415405081446494 (if (<= (/ (- x x0) (- x1 x0)) 0.5) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (* (* (+ (/ x1 x0) 1.0) (- x1 x)) (/ (- y1 y0) x0))) (+ y0 (* (/ (- x x0) (- x1 x0)) (- y1 y0)))))) (2120 0.5354680200966363 (if (<= (/ (- x x0) (- x1 x0)) 0.5) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (* (+ (/ x1 x0) 1.0) (/ (- x1 x) (/ x0 (- y1 y0))))) (+ y0 (* (/ (- x x0) (- x1 x0)) (- y1 y0)))))) (1864 0.5371226447347974 (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0)))) (if (<= (/ (- x x0) (- x1 x0)) 1.0000000000000004) (- y1 (* (- y1 y0) (/ (- x x1) x0))) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0))))))) (1864 0.3704193961705158 (if (<= (/ (- x x0) (- x1 x0)) 0.99999999) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0)))) (if (<= (/ (- x x0) (- x1 x0)) 1.0000001) (- y1 (* (- y1 y0) (/ (- x x1) x0))) (+ y0 (* (/ (- x x0) (- x1 x0)) (- y1 y0)))))) (1500 29.62869204971143 (if (<= x -2.9487278922568967e-198) (* x (/ (- y1 y0) (- x1 x0))) (if (<= x 5.2809414793012394e-300) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 6.523542617464639e-247) (+ y0 (* x0 (/ (- y0 y1) x1))) (if (<= x 3.302248418890135e-167) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 1.1290574526195495e-159) (* x (/ (- y1 y0) (- x1 x0))) (if (<= x 1.3023769513461118e-138) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 1.562846693309007e-108) (+ y0 (* y1 (/ x x1))) (* x (/ (- y1 y0) (- x1 x0))))))))))) (1304 32.6882676866572 (if (<= x0 -1.2665607900196326e-102) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x0 -5.382157884262261e-148) (+ y0 (/ (* x y1) x1)) (if (<= x0 -1.0776282738866642e-170) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x0 1.748464775009604e-209) (+ y0 (* y1 (/ x x1))) (if (<= x0 1.3030501250776045e-165) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x0 3.0337233706213315e-99) (- y0 (/ y0 (/ x1 x))) (/ (- y1) (+ (/ x1 x0) -1.0))))))))) (1236 31.302380305108898 (if (<= x -3.0362347176082353e-179) (/ (* x (- y1 y0)) (- x1 x0)) (if (<= x 4.900895531264943e-294) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 7.209824999644786e-247) (* y0 (+ 1.0 (/ x0 (- x1 x0)))) (if (<= x 3.302248418890135e-167) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 4.8003145990359214e-98) (- y0 (* x (/ y0 x1))) (/ (* x (- y1 y0)) (- x1 x0)))))))) (1236 31.007363282990074 (if (<= x -3.0362347176082353e-179) (/ (* x (- y1 y0)) (- x1 x0)) (if (<= x 5.2809414793012394e-300) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 6.523542617464639e-247) (+ y0 (* x0 (/ (- y0 y1) x1))) (if (<= x 3.302248418890135e-167) (/ (- y1) (+ (/ x1 x0) -1.0)) (if (<= x 4.8003145990359214e-98) (- y0 (* x (/ y0 x1))) (/ (* x (- y1 y0)) (- x1 x0)))))))) (1108 33.21047186808526 (if (<= x0 -1.2665607900196326e-102) y1 (if (<= x0 -5.382157884262261e-148) (+ y0 (/ (* x y1) x1)) (if (<= x0 -1.1694982387912833e-170) y1 (if (<= x0 -1.1011422225930286e-238) (- y0 (/ y0 (/ x1 x))) (if (<= x0 3.0337233706213315e-99) (+ y0 (* y1 (/ x x1))) y1)))))) (712 32.34800226274879 (if (<= x0 -1.2665607900196326e-102) y1 (if (<= x0 3.0337233706213315e-99) (+ y0 (* x (/ y1 x1))) y1))) (712 32.34615162814752 (if (<= x0 -1.2665607900196326e-102) y1 (if (<= x0 3.0337233706213315e-99) (+ y0 (* y1 (/ x x1))) y1))) (592 40.447354801239186 (if (<= x0 -1.2665607900196326e-102) y1 (if (<= x0 1.748464775009604e-209) y0 (if (<= x0 2.10201824247854e-168) y1 (if (<= x0 3.0337233706213315e-99) y0 y1))))) (64 47.917807461372085 y1)))","end":0.5340717794714559,"end-est":0.15958628585886941,"identifier":"#f","input":"(+ y0 (* (- y1 y0) (/ (- x x0) (- x1 x0))))","link":"4796734bd7374f7a7d7740c4fc01607796a7025d.1.6","name":"y0 + (y1-y0)*((x-x0)/(x1-x0))","output":"(if (<= (/ (- x x0) (- x1 x0)) 0.5) (+ y0 (/ (- y1 y0) (/ (- x1 x0) (- x x0)))) (if (<= (/ (- x x0) (- x1 x0)) 2.0) (+ y1 (* (+ (/ x1 x0) 1.0) (/ (- x1 x) (/ x0 (- y1 y0))))) (fma (- y1 y0) (/ (- x0 x) (- x0 x1)) y0)))","pre":"(and (and (and (and (and (<= -1.0 y0) (<= y0 1.0)) (and (<= -1.0 y1) (<= y1 1.0))) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 x0) (<= x0 1.0))) (and (<= -1.0 x1) (<= x1 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ y0 (* (- y1 y0) (/ (- x x0) (- x1 x0))))","start":8.734544755654598,"start-est":10.361939989833907,"status":"imp-start","target":false,"target-prog":"#f","time":25496.0263671875,"vars":["y0","y1","x","x0","x1"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 8.734544755654598) (8136 0.36829528639371006) ((2252 1.9817987821022012 (if (<= (/ (- x x_0) (- x_1 x_0)) -0.2) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= (/ (- x x_0) (- x_1 x_0)) 0.5) (+ y_0 (* (- y_0 y_1) (/ (- x_0 x) x_1))) (if (<= (/ (- x x_0) (- x_1 x_0)) 2.0) (+ y_1 (* (/ (- y_1 y_0) x_0) (- x_1 x))) (/ x (/ (- x_1 x_0) (- y_1 y_0))))))) (2124 7.745551833853486 (if (<= (/ (- x x_0) (- x_1 x_0)) -0.2) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= (/ (- x x_0) (- x_1 x_0)) 0.5) (+ y_0 (* (- y_0 y_1) (/ (- x_0 x) x_1))) (if (<= (/ (- x x_0) (- x_1 x_0)) 1.1) (/ y_1 (/ (- x_1 x_0) (- x x_0))) (/ x (/ (- x_1 x_0) (- y_1 y_0))))))) (1864 0.37139405340970344 (if (<= (/ (- x x_0) (- x_1 x_0)) 0.99999999) (+ y_0 (* (/ (- x x_0) (- x_1 x_0)) (- y_1 y_0))) (if (<= (/ (- x x_0) (- x_1 x_0)) 1.0000001) (+ y_1 (* (/ (- y_1 y_0) x_0) (- x_1 x))) (+ y_0 (* (/ (- x x_0) (- x_1 x_0)) (- y_1 y_0)))))) (1632 28.29993209516748 (if (<= x_0 -4.866032945015864e-87) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -5.382157884262261e-148) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 -1.1694982387912833e-170) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 1.3030501250776045e-165) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 2.3507866255363712e-145) (- y_0 (* x (/ y_0 x_1))) (if (<= x_0 2.433389272615736e-115) (* y_0 (/ (- x) (- x_1 x_0))) (if (<= x_0 3.0337233706213315e-99) (+ y_0 (/ x_0 (/ (- x_1 x_0) y_0))) (* y_1 (/ x_0 (- x_0 x_1)))))))))))) (1632 26.787034331468444 (if (<= x_0 -1.4408941769575415e-83) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -8.483895055329508e-170) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= x_0 -1.890608515709031e-178) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 1.1748499231516626e-226) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 1.7896486141280978e-213) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 2.10201824247854e-168) (/ (* y_1 (- x_0 x)) (- x_0 x_1)) (if (<= x_0 3.0337233706213315e-99) (- y_0 (/ (* x y_0) (- x_1 x_0))) (* y_1 (/ x_0 (- x_0 x_1)))))))))))) (1504 28.283113376835118 (if (<= x_0 -4.866032945015864e-87) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -5.382157884262261e-148) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 -1.1694982387912833e-170) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 1.3030501250776045e-165) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 2.3507866255363712e-145) (- y_0 (* x (/ y_0 x_1))) (if (<= x_0 2.433389272615736e-115) (* y_0 (/ (- x) (- x_1 x_0))) (if (<= x_0 3.0337233706213315e-99) (- y_0 (* x (/ y_0 x_1))) (* y_1 (/ x_0 (- x_0 x_1)))))))))))) (1504 28.2808438073504 (if (<= x_0 -4.866032945015864e-87) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -5.382157884262261e-148) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 -1.1694982387912833e-170) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 1.3030501250776045e-165) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 2.3507866255363712e-145) (- y_0 (* x (/ y_0 x_1))) (if (<= x_0 2.433389272615736e-115) (* y_0 (/ (- x) (- x_1 x_0))) (if (<= x_0 3.0337233706213315e-99) (- y_0 (* x (/ y_0 x_1))) (* y_1 (/ x_0 (- x_0 x_1)))))))))))) (1500 26.716140170136242 (if (<= x_0 -1.4408941769575415e-83) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -4.799430217215341e-199) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= x_0 1.1748499231516626e-226) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 1.7896486141280978e-213) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 2.10201824247854e-168) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.0337233706213315e-99) (- y_0 (/ (* x y_0) (- x_1 x_0))) (* y_1 (/ x_0 (- x_0 x_1))))))))))) (1372 37.18657199571553 (if (<= x_1 -8.332736475908568e-179) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 -3.5011347294224435e-241) (* (- x x_1) (/ y_0 x_0)) (if (<= x_1 -7.325331052795468e-283) y_1 (if (<= x_1 8.816416114943932e-290) (* (- x x_1) (/ y_0 x_0)) (if (<= x_1 6.201604471927522e-140) (* y_1 (/ x_0 (- x_0 x_1))) (if (<= x_1 5.923721070402718e-111) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 3.7690148042357355e-98) (/ (* x y_1) x_1) (- y_0 (* x (/ y_0 x_1))))))))))) (1372 35.05054089885233 (if (<= x_1 -8.332736475908568e-179) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 -3.5011347294224435e-241) (* (- x x_1) (/ y_0 x_0)) (if (<= x_1 -7.325331052795468e-283) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_1 8.816416114943932e-290) (* (- x x_1) (/ y_0 x_0)) (if (<= x_1 1.3919329856431722e-162) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_1 5.923721070402718e-111) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 3.7690148042357355e-98) (/ (* x y_1) x_1) (- y_0 (* x (/ y_0 x_1))))))))))) (1372 34.96442124475388 (if (<= x_1 -8.374797445996831e-151) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 -3.5011347294224435e-241) (* y_0 (/ (- x) (- x_1 x_0))) (if (<= x_1 -7.325331052795468e-283) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_1 8.816416114943932e-290) (* (- x x_1) (/ y_0 x_0)) (if (<= x_1 1.3919329856431722e-162) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_1 5.923721070402718e-111) (- y_0 (* x (/ y_0 x_1))) (if (<= x_1 3.7690148042357355e-98) (/ (* x y_1) x_1) (- y_0 (* x (/ y_0 x_1))))))))))) (1368 27.32290943568896 (if (<= x_0 -4.866032945015864e-87) (/ (* x_0 y_1) (- x_0 x_1)) (if (<= x_0 -5.382157884262261e-148) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 -1.1694982387912833e-170) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 2.10201824247854e-168) (* y_1 (/ (- x_0 x) x_0)) (if (<= x_0 3.0337233706213315e-99) (- y_0 (/ (* x y_0) (- x_1 x_0))) (* y_1 (/ x_0 (- x_0 x_1)))))))))) (1368 23.938321798406193 (if (<= x_0 -1.890608515709031e-178) (/ y_1 (/ (- x_1 x_0) (- x x_0))) (if (<= x_0 1.1748499231516626e-226) (+ y_0 (* (- y_1 y_0) (/ x x_1))) (if (<= x_0 1.7896486141280978e-213) (/ x (/ (- x_1 x_0) (- y_1 y_0))) (if (<= x_0 3.5638675234756263e-196) (+ y_0 (* x (/ (- y_1 y_0) x_1))) (if (<= x_0 2.10201824247854e-168) (/ y_1 (/ (- x_1 x_0) (- x x_0))) (if (<= x_0 3.0337233706213315e-99) (- y_0 (/ (* x y_0) (- x_1 x_0))) (/ y_1 (/ (- x_1 x_0) (- x x_0)))))))))) (976 34.95829543154451 (if (<= x_0 -1.890608515709031e-178) (* y_1 (/ x_0 (- x_0 x_1))) (if (<= x_0 1.748464775009604e-209) (- y_0 (* x (/ y_0 x_1))) (if (<= x_0 1.3030501250776045e-165) (* y_1 (/ x_0 (- x_0 x_1))) (if (<= x_0 3.0337233706213315e-99) (- y_0 (* x (/ y_0 x_1))) (* y_1 (/ x_0 (- x_0 x_1)))))))) (856 40.816093926621484 (if (<= x_0 -1.2665607900196326e-102) y_1 (if (<= x_0 3.614772045653448e-303) y_0 (if (<= x_0 1.2599593880360269e-262) (/ (* x y_1) x_1) (if (<= x_0 1.748464775009604e-209) y_0 (if (<= x_0 2.10201824247854e-168) y_1 (if (<= x_0 3.0337233706213315e-99) y_0 y_1))))))) (856 40.58114863978923 (if (<= x_0 -1.2665607900196326e-102) y_1 (if (<= x_0 3.614772045653448e-303) y_0 (if (<= x_0 1.2599593880360269e-262) (* y_1 (/ x x_1)) (if (<= x_0 1.748464775009604e-209) y_0 (if (<= x_0 2.10201824247854e-168) y_1 (if (<= x_0 3.0337233706213315e-99) y_0 y_1))))))) (712 35.08806603375103 (if (<= x_0 -1.2665607900196326e-102) y_1 (if (<= x_0 3.0337233706213315e-99) (- y_0 (* x (/ y_0 x_1))) y_1))) (592 40.447354801239186 (if (<= x_0 -1.2665607900196326e-102) y_1 (if (<= x_0 1.748464775009604e-209) y_0 (if (<= x_0 2.10201824247854e-168) y_1 (if (<= x_0 3.0337233706213315e-99) y_0 y_1))))) (64 47.33337429716556 y_0)))","end":0.36829528639371006,"end-est":0.37413042314269523,"identifier":"#f","input":"(+ y_0 (* (- y_1 y_0) (/ (- x x_0) (- x_1 x_0))))","link":"23bdc92cba700cdd20f314320d1a779905040cf6.1.6","name":"y_0 + (y_1-y_0)*((x-x_0)/(x_1-x_0))","output":"(if (<= (/ (- x x_0) (- x_1 x_0)) 0.99999999) (+ y_0 (* (/ (- x x_0) (- x_1 x_0)) (- y_1 y_0))) (if (<= (/ (- x x_0) (- x_1 x_0)) 1.0000001) (+ y_1 (* (/ (- y_1 y_0) x_0) (- x_1 x))) (fma (- y_1 y_0) (/ (- x_0 x) (- x_0 x_1)) y_0)))","pre":"(and (and (and (and (and (<= -1.0 y_0) (<= y_0 1.0)) (and (<= -1.0 y_1) (<= y_1 1.0))) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 x_0) (<= x_0 1.0))) (and (<= -1.0 x_1) (<= x_1 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ y_0 (* (- y_1 y_0) (/ (- x x_0) (- x_1 x_0))))","start":8.734544755654598,"start-est":10.361939989833907,"status":"imp-start","target":false,"target-prog":"#f","time":28181.641845703125,"vars":["y_0","y_1","x","x_0","x_1"]},{"bits":128,"conversions":[],"cost-accuracy":"((12864 0.0055) (12864 0.0055) ((6720 0.12645412998570615 (+ (* x 0.5) (log 2.0))) (6592 0.1418171236950655 (log (+ x 2.0))) (6464 0.7783429637629796 (log 2.0)) (192 61.59030170210679 (* x 0.5))))","end":0.0055,"end-est":0.01171875,"identifier":"#f","input":"(log1p (exp x))","link":"c9ca4faa2d36f77ff9d81aab34dc52639982d30c.1.6","name":"log1p(exp(x))","output":"(log1p (exp x))","pre":"(and (<= -0.0001 x) (<= x 0.0001))","prec":"binary64","preprocess":"()","spec":"(log1p (exp x))","start":0.0055,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3109.874755859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 61.71368394173732) (12928 0.001625) ((12864 64.0 (log (expm1 x)))))","end":0.001625,"end-est":0.00390625,"identifier":"#f","input":"(log (- (exp 0.0) (exp x)))","link":"d8c04814a10040fbd51c1118aeebee39c1c9a5d6.1.6","name":"log(exp(0) - exp(x))","output":"(log (- (expm1 x)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(log (- (exp 0.0) (exp x)))","start":61.71368394173732,"start-est":61.915762897964846,"status":"imp-start","target":false,"target-prog":"#f","time":6771.6650390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- sinx siny)","link":"351a858edbf9ba467a19e1dae3aaef1fcd1dfbe5.1.6","name":"sinx - siny","output":"(- sinx siny)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- sinx siny)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1434.317626953125,"vars":["sinx","siny"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- sinx siny)","link":"0dedab2cb9921d8248522bef39a64a7e4047fb90.1.6","name":"sinx - siny","output":"(- sinx siny)","pre":"(and (and (<= 0.0 sinx) (<= sinx 1.0)) (and (<= 0.0 siny) (<= siny 1.0)))","prec":"binary64","preprocess":"()","spec":"(- sinx siny)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1573.16552734375,"vars":["sinx","siny"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- sinx siny)","link":"cf921cbfbdb06bea29a1a2f151b075e35da06ae1.1.6","name":"sinx - siny","output":"(- sinx siny)","pre":"(and (and (<= -1000.0 sinx) (<= sinx 1000.0)) (and (<= -1000.0 siny) (<= siny 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- sinx siny)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1667.825439453125,"vars":["sinx","siny"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.07780753239606428) (26816 0.08181654219390024) ((13120 0.07780753239606428 (- (sqrt (+ x 2.0)) (sqrt x))) (12992 1.9952192637774977 (- (sqrt 2.0) (sqrt x))) (6464 3.267199928220431 (sqrt 2.0))))","end":0.08181654219390024,"end-est":0.06707001953688403,"identifier":"#f","input":"(- (sqrt (+ x 2.0)) (sqrt x))","link":"a7ad50f8ba95ce195987e400f7b881377f319a1f.1.6","name":"sqrt(x+2) - sqrt(x)","output":"(* (sqrt (+ x (- 2.0 x))) (* (sqrt (+ x (- 2.0 x))) (/ 1.0 (+ (sqrt (+ x 2.0)) (sqrt x)))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 2.0)) (sqrt x))","start":0.07780753239606428,"start-est":0.07229607281327616,"status":"ex-start","target":false,"target-prog":"#f","time":3644.028076171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((27328 2.67225644703709) (40000 0.7132670844001765) ((40064 0.8011396489892364 (- (+ (+ (/ (pow (exp x) (- a)) a) (/ (/ -1.0 (pow (exp x) b)) b)) (/ (exp (* x (- c))) c)) (/ (exp (* x (- d))) d))) (40000 1.236008012397791 (- (+ (/ (exp (* x (- c))) c) (- (/ (pow (exp x) (- a)) a) (/ (pow (exp (- b)) x) b))) (/ (exp (* x (- d))) d))) (33664 2.2010489006622906 (- (+ (/ (exp (* x (- c))) c) (- (/ (exp (* x (- a))) a) (/ (pow (exp b) (- x)) b))) (/ (exp (* x (- d))) d))) (33664 1.703924373111621 (- (+ (/ (exp (* x (- c))) c) (- (/ (pow (exp x) (- a)) a) (/ (exp (- (* x b))) b))) (/ (exp (* x (- d))) d))) (33664 1.6923883081803088 (- (+ (/ (exp (* x (- c))) c) (- (/ (exp (* x (- a))) a) (/ (pow (exp x) (- b)) b))) (/ (exp (* x (- d))) d))) (27328 2.67225644703709 (- (+ (/ (exp (* x (- c))) c) (- (/ (exp (* x (- a))) a) (/ (exp (- (* x b))) b))) (/ (exp (* x (- d))) d))) (14144 59.11150104853454 (- (+ (/ (exp (* x (- c))) c) (+ (/ 1.0 a) (/ -1.0 b))) (/ (exp (* x (- d))) d)))))","end":0.7132670844001765,"end-est":1.5668848963633506,"identifier":"#f","input":"(- (+ (- (/ (exp (* (- x) a)) a) (/ (exp (* (- x) b)) b)) (/ (exp (* (- x) c)) c)) (/ (exp (* (- x) d)) d))","link":"4cbaaa415c53b2f2052ada2399d55deee80e9574.1.6","name":"exp(-x*a)/a - exp(-x*b)/b + exp(-x*c)/c - exp(-x*d)/d","output":"(+ (/ (pow (exp (- x)) a) a) (- (/ (exp (* x (- c))) c) (+ (/ (pow (exp (- x)) b) b) (/ (exp (* x (- d))) d))))","pre":"(and (and (and (and (and (<= 1.0 x) (<= x 1000.0)) (and (<= 1.0 a) (<= a 1000.0))) (and (<= 1.0 b) (<= b 1000.0))) (and (<= 1.0 c) (<= c 1000.0))) (and (<= 1.0 d) (<= d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (+ (- (/ (exp (* (- x) a)) a) (/ (exp (* (- x) b)) b)) (/ (exp (* (- x) c)) c)) (/ (exp (* (- x) d)) d))","start":2.67225644703709,"start-est":2.5814969936379164,"status":"imp-start","target":false,"target-prog":"#f","time":11616.96142578125,"vars":["x","a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.0095) (6592 0.0095) ((6464 1.4759052466293212 (exp -1.0))))","end":0.0095,"end-est":0.01171875,"identifier":"#f","input":"(exp (- x 1.0))","link":"f58ee2b29b965dee0aea78e7e9dd82f30ade570d.1.6","name":"exp(x-1)","output":"(exp (+ x -1.0))","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(exp (- x 1.0))","start":0.0095,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2326.8076171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.009540241011860922) (6592 0.009540241011860922) ((6464 21.76225698229092 (exp -1.0))))","end":0.009540241011860922,"end-est":0.0078125,"identifier":"#f","input":"(exp (- x 1.0))","link":"c3c658795325ad56d8f39baa2d14a214c24831bf.1.6","name":"exp(x-1)","output":"(exp (+ x -1.0))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(exp (- x 1.0))","start":0.009540241011860922,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2519.72607421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19328 0.6619808068674209) (38848 0.024545128514024402) ((19584 0.03649118164281047 (+ (+ 1.0 (log (- E (exp x)))) -1.0)) (19328 0.6619808068674209 (log (- E (exp x)))) (12864 18.742001637658863 (log (expm1 1.0))) (6528 60.67697827469073 (log (- x)))))","end":0.024545128514024402,"end-est":0.033535009768442016,"identifier":"#f","input":"(log (- E (exp x)))","link":"4b23d6e1a57c3306381c00414784ff84ac471c0d.1.6","name":"log(E - exp(x))","output":"(log (/ (- (exp 2.0) (pow (exp x) 2.0)) (+ (exp x) E)))","pre":"(and (<= -1.79e+308 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(log (- E (exp x)))","start":0.6619808068674209,"start-est":0.642910009768442,"status":"ex-start","target":false,"target-prog":"#f","time":6062.70166015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 0.6619808068674209) (38848 0.024545128514024402) ((19584 0.03649118164281047 (+ (+ 1.0 (log (- E (exp x)))) -1.0)) (19328 0.6619808068674209 (log (- E (exp x)))) (12864 18.742001637658863 (log (expm1 1.0))) (6528 60.67697827469073 (log (- x)))))","end":0.024545128514024402,"end-est":0.033535009768442016,"identifier":"#f","input":"(log (- (exp 1.0) (exp x)))","link":"9eebf87168aca667e744078a8786ae72b0184a2e.1.6","name":"log(exp(1) - exp(x))","output":"(log (/ (- (exp 2.0) (pow (exp x) 2.0)) (+ (exp x) E)))","pre":"(and (<= -1.79e+308 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(log (- (exp 1.0) (exp x)))","start":0.6619808068674209,"start-est":0.642910009768442,"status":"ex-start","target":false,"target-prog":"#f","time":6125.9580078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 58.53352603869906) (26116 16.771762684155252) ((26692 30.578973398026232 (if (<= (- (exp a) (exp b)) 1.0) (log (+ (- a (expm1 b)) (* (* a a) (+ (* a 0.16666666666666666) 0.5)))) (+ (log (- (expm1 b))) (- (* a 0.5) (/ a b))))) (13572 26.542156781801992 (if (<= b -1.9299050857668608e-14) (+ (log (- (expm1 b))) (- (* a 0.5) (/ a b))) (log (- (expm1 a) b)))) (13376 30.314298313042826 (log (+ (- a (expm1 b)) (* a (* a 0.5))))) (13060 36.353629445627 (if (<= a 6.595572347355037e-229) (log (- (expm1 b))) (+ (* a 0.5) (log a)))) (12992 30.750227221089528 (log (- a (expm1 b)))) (6916 37.37495491112173 (if (<= a 6.595572347355037e-229) (- (log (- b)) (/ a b)) (+ (* a 0.5) (log a)))) (6852 37.3934358888118 (if (<= a 6.595572347355037e-229) (log (- b)) (+ (* a 0.5) (log a)))) (6660 37.73886088193975 (if (<= a 6.595572347355037e-229) (log (- b)) (log a))) (6464 47.32022928064588 (log a))))","end":16.771762684155252,"end-est":17.433383610289304,"identifier":"#f","input":"(log (- (exp a) (exp b)))","link":"66ebe2f58359440f38495300cd67f802ebd976d4.1.6","name":"log(exp(a) - exp(b))","output":"(if (<= (exp b) 1.0) (- (log (- (expm1 b))) (/ a (expm1 b))) (log (- (expm1 a) b)))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (- (exp a) (exp b)))","start":58.53352603869906,"start-est":57.61269202674367,"status":"imp-start","target":false,"target-prog":"#f","time":35803.1474609375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((32512 0) (32512 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (fmax a b) (log1p (exp (- (fmin a b) (fmax a b)))))","link":"63f8b26a2cc399436f2deabc09b2a8e45238bdd8.1.6","name":"max(a,b) - log1p(exp(min(a,b) - max(a,b)))","output":"(- (fmax a b) (log1p (exp (- (fmin a b) (fmax a b)))))","pre":"(and (and (<= 1.78e+308 a) (<= a 1.79e+308)) (and (<= 1.78e+308 b) (<= b 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- (fmax a b) (log1p (exp (- (fmin a b) (fmax a b)))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2515.34130859375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(log (- (exp a) (exp b)))","link":"0b58e73249a79f5456947e28b0ada4a5f53cb986.1.6","name":"log(exp(a) - exp(b))","output":"#f","pre":"(and (and (<= 1.78e+308 a) (<= a 1.79e+308)) (and (<= 1.78e+308 b) (<= b 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (- (exp a) (exp b)))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":3.831298828125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.010100919365257201) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(- (pow x 2.0) (pow y 2.0))","link":"4253c9f071c96b565f1887bdcbc76f34998f23c6.1.6","name":"x^2-y^2","output":"(* (+ x y) (- x y))","pre":"(and (and (<= -0.001 x) (<= x 0.001)) (and (<= -0.001 y) (<= y 0.001)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 2.0) (pow y 2.0))","start":0.010100919365257201,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2422.1240234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.009021240625180291) (448 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(- (pow x 2.0) (pow y 2.0))","link":"c83b1e26d36fe3a950e45872d59b48566164d82c.1.6","name":"x^2-y^2","output":"(* (+ x y) (- x y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 2.0) (pow y 2.0))","start":0.009021240625180291,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2521.484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.786917026818504) (13248 0.37244812031259017) ((26308 1.3496016929364028 (if (<= (- (sqrt (+ a x)) (sqrt x)) 5e-156) (* 0.5 (/ a (sqrt x))) (- (sqrt (+ a x)) (sqrt x)))) (7244 17.018381176476773 (if (<= a 1.6433304785770907e-168) (* 0.5 (/ a (sqrt x))) (if (<= a 1.8408689084386043e-155) (sqrt a) (if (<= a 9.13396019288623e-135) (/ 1.0 (/ (* (sqrt x) 2.0) a)) (sqrt a))))) (7116 17.015683056619192 (if (<= a 1.6433304785770907e-168) (* 0.5 (/ a (sqrt x))) (if (<= a 1.8408689084386043e-155) (sqrt a) (if (<= a 9.13396019288623e-135) (* 0.5 (/ a (sqrt x))) (sqrt a))))) (6464 32.00423845544091 (sqrt a))))","end":0.37244812031259017,"end-est":0.3515625,"identifier":"#f","input":"(- (sqrt (+ x a)) (sqrt x))","link":"a3d988ba3d9e55d63d301da060225f44a10d1dca.1.6","name":"sqrt(x+a) - sqrt(x)","output":"(/ a (+ (sqrt (+ a x)) (sqrt x)))","pre":"(and (and (<= 0.0 x) (<= x 1000.0)) (and (<= 0.0 a) (<= a 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x a)) (sqrt x))","start":28.786917026818504,"start-est":28.374393647923515,"status":"imp-start","target":false,"target-prog":"#f","time":5940.29150390625,"vars":["x","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((20224 57.920588736005996) (73476 0.5762942498083596) ((60804 0.5738980091831792 (if (<= (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)) 1e-8) (/ (fma n (* 2.0 (log a)) (* (* n n) (+ (* pi (* pi 0.5)) (* n (fma (pow (- (log a)) 3.0) -0.3333333333333333 (* (* pi pi) (* (log a) -0.5))))))) (+ (* a 2.0) -1.0)) (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)))) (40516 0.5788676148581017 (if (<= (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)) 1e-8) (/ (* n (+ (* 2.0 (log a)) (* n (* 0.5 (* pi pi))))) (+ (* a 2.0) -1.0)) (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)))) (20292 0.6237179664485878 (if (<= n 1.2662538518395437e-8) (/ (* n (+ (* 2.0 (log a)) (* n (* 0.5 (* pi pi))))) (+ (* a 2.0) -1.0)) (/ (- (pow a n) (/ (cos (* n pi)) (pow a n))) (+ (* a 2.0) -1.0)))) (7616 1.6016538194798495 (/ (* n (+ (* 2.0 (log a)) (* n (* 0.5 (* pi pi))))) (+ (* a 2.0) -1.0))) (7104 2.383404756683131 (* 2.0 (/ (* n (log a)) (+ (* a 2.0) -1.0)))) (6720 51.126638419703376 (* (log a) (/ n a)))))","end":0.5762942498083596,"end-est":0.35192483258171814,"identifier":"#f","input":"(/ (- (pow a n) (* (cos (* pi n)) (pow a (- n)))) (- (* 2.0 a) 1.0))","link":"b16b97bf11bc470fccb7d064571e3c95b767fc1d.1.6","name":"(a^n - cos(pi*n)*a^-n) / (2*a - 1)","output":"(if (<= (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)) 1e-8) (/ (fma 0.5 (* n (* n (* pi pi))) (fma (pow n 3.0) (fma (pow (log a) 3.0) 0.3333333333333333 (* (log a) (* pi (* pi -0.5)))) (* (log a) (+ n n)))) (+ (* a 2.0) -1.0)) (/ (- (pow a n) (* (cos (* n pi)) (pow a (- n)))) (+ (* a 2.0) -1.0)))","pre":"(and (and (and (<= 1.618 a) (<= a 1.619)) (and (<= 0.0 n) (<= n 1000.0))) (and (<= 3.1415 pi) (<= pi 3.1416)))","prec":"binary64","preprocess":"()","spec":"(/ (- (pow a n) (* (cos (* pi n)) (pow a (- n)))) (- (* 2.0 a) 1.0))","start":57.920588736005996,"start-est":57.697069571361595,"status":"imp-start","target":false,"target-prog":"#f","time":15739.856201171875,"vars":["a","n","pi"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 29.990299252792504) (19648 0.9646900158169659) ((19524 1.0296519882910098 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (+ (exp a) b)))) (19396 1.4475516772164152 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (exp b)))) (19396 1.4400867169031912 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (exp a)))) (13764 1.4968484001910995 (if (<= (exp a) 2e-6) (/ b (+ (exp a) 1.0)) (+ (* a (+ 0.5 (* b -0.25))) (+ (* b 0.5) (log 2.0))))) (13252 1.9388880914112163 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log (+ b 2.0)))) (13252 1.882351299869973 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (+ (* b 0.5) (log 2.0)))) (6592 32.75107545480455 (log (+ b 2.0))) (6464 33.072088710722184 (log 2.0))))","end":0.9646900158169659,"end-est":17.586289559208584,"identifier":"#f","input":"(log (+ (exp a) (exp b)))","link":"43c3b82ca46715b539467821ad2e4e4e1a097607.1.6","name":"log(exp(a) + exp(b))","output":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp a) (exp b)))","start":29.990299252792504,"start-est":31.535132445359395,"status":"imp-start","target":false,"target-prog":"#f","time":28527.199462890625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 0.04630676718957331) (19396 0.0580354580868862) ((19392 0.04630676718957331 (log (+ (exp a) (exp b)))) (13120 0.6549062341902447 (log (+ b (+ (exp a) 1.0)))) (12864 1.2737029703832599 (log1p (exp a))) (6720 1.8895929360177686 (+ (* a 0.5) (log 2.0))) (6464 2.53194323752195 (log 2.0))))","end":0.0580354580868862,"end-est":1.7089696434887862,"identifier":"#f","input":"(log (+ (exp a) (exp b)))","link":"4bbe42de3e5714d2a52de6206ee5b9f727253c8a.1.6","name":"log(exp(a) + exp(b))","output":"(if (<= (exp b) 1.0) (log1p (exp a)) (log1p (exp b)))","pre":"(and (and (<= -1.0 a) (<= a 1.0)) (and (<= -1.0 b) (<= b 1.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp a) (exp b)))","start":0.04630676718957331,"start-est":0.08660126953688405,"status":"ex-start","target":false,"target-prog":"#f","time":4746.034423828125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 0.39814624062518034) (19648 0.39814624062518034) ((13512 9.648974908297292 (if (<= b -5348718808601.45) (+ (/ b (+ (exp a) 1.0)) (log 2.0)) (if (<= b 6.507132295380951e-18) (+ (log1p (exp a)) (* b 0.5)) (+ (/ b (+ (exp a) 1.0)) (log 2.0))))) (13384 14.911786934794621 (if (<= b -2.502738935491109e+58) (+ (/ b (+ (exp a) 1.0)) (* a 0.5)) (if (<= b 17037085446895.768) (+ (log1p (exp a)) (* b 0.5)) (+ (/ b (+ (exp a) 1.0)) (* a 0.5))))) (7240 17.061461845250427 (if (<= b -2.502738935491109e+58) (+ (/ b (+ (exp a) 1.0)) (* a 0.5)) (if (<= b 17037085446895.768) (+ (log 2.0) (/ b 2.0)) (+ (/ b (+ (exp a) 1.0)) (* a 0.5))))) (7240 17.162993801945458 (if (<= b -2.502738935491109e+58) (+ (/ b (+ (exp a) 1.0)) (* a 0.5)) (if (<= b 17037085446895.768) (+ (* b 0.5) (+ (log 2.0) (* a 0.5))) (+ (/ b (+ (exp a) 1.0)) (* a 0.5))))) (6720 20.672367372301974 (+ (log 2.0) (/ b 2.0)))))","end":0.39814624062518034,"end-est":0.75390625,"identifier":"#f","input":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","link":"875580f4496624d91ad851f49a0b036be140cfa9.1.6","name":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","output":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","start":0.39814624062518034,"start-est":0.75390625,"status":"ex-start","target":false,"target-prog":"#f","time":9699.5849609375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 29.990299252792504) (19648 0.9646900158169659) ((19524 1.0296519882910098 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (+ (exp a) b)))) (19396 1.4475516772164152 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (exp b)))) (19396 1.4400867169031912 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log1p (exp a)))) (13764 1.4968484001910995 (if (<= (exp a) 2e-6) (/ b (+ (exp a) 1.0)) (+ (* a (+ 0.5 (* b -0.25))) (+ (* b 0.5) (log 2.0))))) (13252 1.9388880914112163 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (log (+ b 2.0)))) (13252 1.882351299869973 (if (<= (exp a) 0.0) (/ b (+ (exp a) 1.0)) (+ (* b 0.5) (log 2.0)))) (6592 32.75107545480455 (log (+ b 2.0))) (6464 33.072088710722184 (log 2.0))))","end":0.9646900158169659,"end-est":17.586289559208584,"identifier":"#f","input":"(log (+ (exp a) (exp b)))","link":"9bceae7876b323462dd0e3b5b78a1fa31105fd2d.1.6","name":"log(exp(a)+exp(b))","output":"(+ (log1p (exp a)) (/ b (+ (exp a) 1.0)))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp a) (exp b)))","start":29.990299252792504,"start-est":31.535132445359395,"status":"imp-start","target":false,"target-prog":"#f","time":30178.6806640625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((51584 1.9390120441006176) (96836 0.05951204410061618) ((58240 0.0973184247046742 (log (+ (log1p (exp (- (exp x)))) (log (* (/ 1.0 (+ 1.0 (exp (expm1 x)))) (exp (exp x))))))) (46212 0.6566643875608185 (if (<= x -1.6123734753242593e-15) (log (+ (log1p (exp (- (exp x)))) (- (+ (* -0.041666666666666664 (pow x 3.0)) (+ (* 0.125 (pow x 2.0)) (+ 1.0 (* x 0.5)))) (log 2.0)))) (log1p (- (+ -1.0 (+ 1.0 (log1p (exp -1.0)))) (log 2.0))))) (26048 1.655702444687139 (log1p (- (+ -1.0 (+ 1.0 (log1p (exp -1.0)))) (log 2.0)))) (25792 3.1490873966440125 (log1p (- (log1p (exp -1.0)) (log 2.0)))) (13120 55.17070905293486 (- (log 0.5) (log (/ -1.0 x)))) (12992 64.0 (+ (log -0.5) (log x)))))","end":0.05951204410061618,"end-est":0.06213629138909577,"identifier":"#f","input":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","link":"abe4a64f60a1e33281fe7cd0d993698bcf4f5f4c.1.6","name":"log(exp(x) + ((log1p(exp(-(exp(x))))) - (log1p(exp(expm1(x))))))","output":"(if (<= (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))) 0.6201145069582775) (log (+ (log1p (exp (- (exp x)))) (- (exp x) (log1p (exp (expm1 x)))))) (log1p (- (+ -1.0 (+ 1.0 (log1p (exp -1.0)))) (log 2.0))))","pre":"(and (<= -10.0 x) (<= x 0.0))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","start":1.9390120441006176,"start-est":1.929323791389096,"status":"imp-start","target":false,"target-prog":"#f","time":8768.081787109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((51584 1.7665719753296243) (45572 0.5223834767582323) ((64576 0.8300707650687532 (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (cbrt (pow (log1p (exp (expm1 x))) 3.0))))) (51968 0.8233742680947108 (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log (+ 1.0 (exp (+ (exp x) -1.0))))))) (51584 1.7665719753296243 (log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))) (45508 0.5411944789240536 (if (<= x -5.465819964124359) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (+ (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (- (* x -0.5) (log 2.0)))))) (26048 26.493829439977283 (log (- (+ 1.0 (log (+ 1.0 (exp -1.0)))) (log 2.0)))) (25792 27.252924394906724 (log1p (- (log1p (exp -1.0)) (log 2.0)))) (13120 59.02781566242894 (- (log 0.5) (log (/ -1.0 x)))) (12992 64.0 (+ (log -0.5) (log x)))))","end":0.5223834767582323,"end-est":0.7792119429493622,"identifier":"#f","input":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","link":"64878823742426501f128451883da0a8bb3ff08b.1.6","name":"log(exp(x) + ((log1p(exp(-(exp(x))))) - (log1p(exp(expm1(x))))))","output":"(if (<= x -5.465819964124359) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log (+ (exp x) 1.0)))))","pre":"(and (<= -1.79e+308 x) (<= x 0.0))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","start":1.7665719753296243,"start-est":1.7592399417499225,"status":"imp-start","target":false,"target-prog":"#f","time":8174.184326171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((51584 1.8886493905935227) (91140 0.4929782043559433) ((51712 0.6468365712699604 (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log1p (exp (expm1 x)))))) (45572 0.6324932391074427 (if (<= x -10.235654331879557) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log (+ (exp x) 1.0)))))) (45508 0.6492119275597499 (if (<= x -10.235654331879557) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (+ (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (- (* x -0.5) (log 2.0)))))) (26048 18.403967297369846 (log (- (+ 1.0 (log (+ 1.0 (exp -1.0)))) (log 2.0)))) (25792 19.399944522675984 (log1p (- (log1p (exp -1.0)) (log 2.0)))) (13248 62.5799729535402 (log (+ (exp x) (* x (* x -0.375))))) (13120 64.0 (+ (* 2.0 (log x)) (log -0.375)))))","end":0.4929782043559433,"end-est":0.5523205953384489,"identifier":"#f","input":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","link":"b33ce2cc62b444370054a3d896c10748462beb39.1.6","name":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","output":"(if (<= (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))) 0.5) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (+ (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (+ (* x -0.5) (- (* (pow x 2.0) -0.375) (log 2.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","start":1.8886493905935227,"start-est":1.847738361639394,"status":"imp-start","target":false,"target-prog":"#f","time":10864.11328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((52032 1.0393207197481982) (51584 0.7075615086746635) ((51584 0.8373025636856437 (log (- (+ (exp x) (log1p (exp (- (exp x))))) (log1p (exp (expm1 x)))))) (39488 46.929612194679095 (log (+ (- (+ (* 0.125 (pow x 2.0)) (+ (* x 0.5) 1.0)) (log 2.0)) (log (+ (exp (- (exp x))) 1.0))))) (32768 50.802842722030796 (log (+ (log (+ (exp (- (exp x))) 1.0)) (- (+ (* x 0.5) 1.0) (log 2.0))))) (25792 51.13942585884087 (log1p (- (log1p (exp -1.0)) (log 2.0))))))","end":0.7075615086746635,"end-est":0.6515390137479348,"identifier":"#f","input":"(log (+ (- (exp x) (log (+ 1.0 (exp (+ (- 1.0) (exp x)))))) (log (+ 1.0 (exp (- (exp x)))))))","link":"b02c82ca5ac9e1222a0cb8f2ae4abc817f49446a.1.6","name":"log(exp(x) - log(1 + exp(-1 + exp(x))) + log(1 + exp(-exp(x))))","output":"(log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))","pre":"(and (<= -1.5 x) (<= x -0.5))","prec":"binary64","preprocess":"()","spec":"(log (+ (- (exp x) (log (+ 1.0 (exp (+ (- 1.0) (exp x)))))) (log (+ 1.0 (exp (- (exp x)))))))","start":1.0393207197481982,"start-est":1.0617270625888846,"status":"apx-start","target":false,"target-prog":"#f","time":9318.301025390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((52032 1.775716830991203) (51972 0.5216352974715092) ((51968 0.8233742680947108 (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log (+ 1.0 (exp (+ (exp x) -1.0))))))) (51584 1.7665719753296243 (log (+ (exp x) (- (log1p (exp (- (exp x)))) (log1p (exp (expm1 x))))))) (45508 0.5411944789240536 (if (<= x -5.465819964124359) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (+ (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (- (* x -0.5) (log 2.0)))))) (26048 26.493829439977283 (log (- (+ 1.0 (log (+ 1.0 (exp -1.0)))) (log 2.0)))) (25792 27.252924394906724 (log1p (- (log1p (exp -1.0)) (log 2.0)))) (13120 59.02781566242894 (- (log 0.5) (log (/ -1.0 x)))) (12992 64.0 (+ (log -0.5) (log x)))))","end":0.5216352974715092,"end-est":0.7792119429493622,"identifier":"#f","input":"(log (+ (- (exp x) (log (+ 1.0 (exp (+ (- 1.0) (exp x)))))) (log (+ 1.0 (exp (- (exp x)))))))","link":"e3433ecd77ea3a1e9c0d9c6855c9ab82d840fd8c.1.6","name":"log(exp(x) - log(1 + exp(-1 + exp(x))) + log(1 + exp(-exp(x))))","output":"(if (<= (exp x) 0.005) (log (+ (exp x) (log (/ (+ 1.0 (exp (exp x))) (+ 1.0 (exp (expm1 x))))))) (log (- (+ (exp x) (log (+ (exp (- (exp x))) 1.0))) (log (+ (exp x) 1.0)))))","pre":"(and (<= -1.79e+308 x) (<= x 0.0))","prec":"binary64","preprocess":"()","spec":"(log (+ (- (exp x) (log (+ 1.0 (exp (+ (- 1.0) (exp x)))))) (log (+ 1.0 (exp (- (exp x)))))))","start":1.775716830991203,"start-est":1.7732437015183644,"status":"imp-start","target":false,"target-prog":"#f","time":8500.275146484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1024 0.22165150469462122) (1088 0.19521936093777043) ((832 0.23023402344426055 (* (* (* v v) (+ -18.0 (* v (- 8.0 v)))) 0.037037037037037035)) (576 0.7655332995497665 (* (* v v) (+ -0.6666666666666666 (* v 0.2962962962962963)))) (320 1.505795622682981 (* -0.6666666666666666 (* v v))) (320 1.4891223026458198 (* v (* v -0.6666666666666666)))))","end":0.19521936093777043,"end-est":0.18359375,"identifier":"#f","input":"(* (* (* (- (* (+ (- v) 8.0) v) 18.0) v) v) (/ 1.0 27.0))","link":"b4cc533375b87c3938f27e65c04f5cbf1b0929fc.1.6","name":"((-v + 8) * v - 18) * v * v * (1.0/27.0)","output":"(+ (* (* v (+ v -8.0)) (* v (* v -0.037037037037037035))) (* -0.6666666666666666 (* v v)))","pre":"(and (<= -1.0 v) (<= v 1.0))","prec":"binary64","preprocess":"()","spec":"(* (* (* (- (* (+ (- v) 8.0) v) 18.0) v) v) (/ 1.0 27.0))","start":0.22165150469462122,"start-est":0.25132753907376804,"status":"ex-start","target":false,"target-prog":"#f","time":6905.5009765625,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.15621936093777042) (6976 0.13484436093777044) ((448 0.1320212406251803 (* v (* v (+ v 1.5)))) (320 1.4773604422650057 (* v (* v 1.5)))))","end":0.13484436093777044,"end-est":0.1328125,"identifier":"#f","input":"(* (* v v) (+ (+ v 1.0) 0.5))","link":"cfabdd122b76193334fd8fc1fb38136a41121aa9.1.6","name":"v * v * (v + 1 + 0.5)","output":"(fma (* v v) v (* v (* v 1.5)))","pre":"(and (<= -1.0 v) (<= v 1.0))","prec":"binary64","preprocess":"()","spec":"(* (* v v) (+ (+ v 1.0) 0.5))","start":0.15621936093777042,"start-est":0.19921875,"status":"ex-start","target":false,"target-prog":"#f","time":5520.25390625,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.1572712406251803) (6976 0.12975) ((576 0.13432312031259017 (* v (* v (+ -0.75 (* v 0.25))))) (320 1.4269950882981106 (* v (* v -0.75)))))","end":0.12975,"end-est":0.12890625,"identifier":"#f","input":"(* (* (* 0.25 v) v) (- v 3.0))","link":"30cd87a037f3c37b3c44c038ba675af1be225bf4.1.6","name":"0.25*v*v*(v-3)","output":"(* v (fma v -0.75 (* v (* v 0.25))))","pre":"(and (<= -1.0 v) (<= v 1.0))","prec":"binary64","preprocess":"()","spec":"(* (* (* 0.25 v) v) (- v 3.0))","start":0.1572712406251803,"start-est":0.1953125,"status":"ex-start","target":false,"target-prog":"#f","time":7278.7900390625,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(pow (fma 0.003717126661090977 x 0.05213270142180095) 2.4)","link":"62efb8d7a9867d71efd1fc6bca56558332aec509.1.6","name":"pow(fma(0.003717126661090977,x,0.05213270142180095), 2.4)","output":"#f","pre":"(and (<= 11.0 x) (<= x 255.0))","prec":"binary32","preprocess":"()","spec":"(pow (fma 0.003717126661090977 x 0.05213270142180095) 2.4)","start":false,"start-est":false,"status":"timeout","target":false,"target-prog":"#f","time":150000,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.00175) (12992 0.00175) ((19592 1.3259810180871316 (if (<= (sin y) -2e-8) (- (sin y)) (if (<= (sin y) 1e-31) (- x y) (- (sin y))))) (6592 1.1642585594819446 (- x (sin y))) (192 2.157328473523921 (- x y)) (64 32.0885126255873 x)))","end":0.00175,"end-est":0.00390625,"identifier":"#f","input":"(- (sin x) (sin y))","link":"537490893257cdc0f3c81f288446356b364b981d.1.6","name":"sin(x)-sin(y)","output":"(- (sin x) (sin y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":0.00175,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":3994.742431640625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 46.060859836205964) (13572 0.5989465955079631) ((13380 0.7031753608859792 (if (<= x 0.01098996977725037) (* 0.5 (/ (sin x) x)) (* (sin x) (fma x 2.0 (/ -0.5 x))))) (6852 0.8487511747479465 (if (<= x 0.01098996977725037) (* 0.5 (/ (sin x) x)) (* 2.0 (* x (sin x))))) (6720 30.9327678908198 (* 0.5 (/ (sin x) x))) (320 61.28251739435924 (/ (/ 0.125 x) x))))","end":0.5989465955079631,"end-est":0.38178195220092326,"identifier":"#f","input":"(/ (sin x) (- x (sqrt (- (pow x 2.0) 1.0))))","link":"11f18c381c6b5456c31c88922028c59205a7367d.1.6","name":"sin(x)/(x-sqrt(x^2-1))","output":"(if (<= x -8.8e-104) (* (sin x) (+ (/ 0.125 (pow x 3.0)) (/ 0.5 x))) (* (sin x) (fma x 2.0 (/ -0.5 x))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ (sin x) (- x (sqrt (- (pow x 2.0) 1.0))))","start":46.060859836205964,"start-est":48.68237626155322,"status":"imp-start","target":false,"target-prog":"#f","time":12217.955810546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ x 255.0)","link":"dbf0257aca2844f5c5f5d2a968c35eb7c557f7e5.1.6","name":"x / 255","output":"(/ x 255.0)","pre":"(and (<= 0.0 x) (<= x 255.0))","prec":"binary64","preprocess":"()","spec":"(/ x 255.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1312.401123046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.0018509193652572005) (12992 0.0018509193652572005) ((19592 2.4124750473259096 (if (<= (sin y) -2e-7) (- (sin y)) (if (<= (sin y) 1e-26) (- x y) (- (sin y))))) (6724 1.5496352247036083 (if (<= x 9.516482010879737e-41) (- x (sin y)) (sin x))) (6596 3.529825671917653 (if (<= x 9.516482010879737e-41) (- x y) (sin x))) (192 4.374530261175848 (- x y)) (64 33.135056126836524 x)))","end":0.0018509193652572005,"end-est":0.0078125,"identifier":"#f","input":"(- (sin x) (sin y))","link":"4d17e70dea8c98787205b4138b23dd2d7108e99c.1.6","name":"sin(x)-sin(y)","output":"(- (sin x) (sin y))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":0.0018509193652572005,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4665.08154296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0) (12992 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (sin x) (sin y))","link":"f7b4d58804e772e68da699a1f8589ef8328e6de6.1.6","name":"sin(x)-sin(y)","output":"(- (sin x) (sin y))","pre":"(and (and (<= -1000000000.0 x) (<= x -1000000000.0)) (and (<= -1000000000.0 y) (<= y -1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":15216.7890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.009021240625180291) (448 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(- (pow x 2.0) (pow y 2.0))","link":"40c074b84eaa0cfb5724029847705ae4934f473b.1.6","name":"x^2 - y^2","output":"(* (+ x y) (- x y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 2.0) (pow y 2.0))","start":0.009021240625180291,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2410.518798828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.001459053167746437) (12992 0.001459053167746437) ())","end":0.001459053167746437,"end-est":0,"identifier":"#f","input":"(- (sin x) (sin y))","link":"6aa3861817343c0d50d419f26b46e5377175c842.1.6","name":"sin(x) - sin(y)","output":"(- (sin x) (sin y))","pre":"(and (and (<= -10.0 x) (<= x 10.0)) (and (<= -10.0 y) (<= y 10.0)))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sin y))","start":0.001459053167746437,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2921.963623046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 58.37740321179534) (6848 0.022136842188131015) ((832 0.6838905509462896 (* x (+ 0.5 (+ (* x (* x 0.0625)) (* x -0.125))))) (576 0.8483194281413569 (/ x (+ 1.0 (+ 1.0 (* x 0.5))))) (448 0.8460645893048231 (/ x (+ (* x 0.5) 2.0))) (192 1.490185754265906 (* x 0.5))))","end":0.022136842188131015,"end-est":0.01953125,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) 1.0)","link":"beb5f8b714302d9f75cfbbf9f81785ca8873f689.1.6","name":"sqrt(x + 1) - 1","output":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) 1.0)","start":58.37740321179534,"start-est":58.27907349450541,"status":"imp-start","target":false,"target-prog":"#f","time":5243.919921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.089) (6720 0.089) ((6592 64.0 (+ 1.0 (sqrt -1.0)))))","end":0.089,"end-est":0.09765625,"identifier":"#f","input":"(+ (sqrt (- x 1.0)) 1.0)","link":"f709efae7ee7679df54dfc2b43c76fc1eb44db61.1.6","name":"sqrt(x - 1) + 1","output":"(+ 1.0 (sqrt (+ x -1.0)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (- x 1.0)) 1.0)","start":0.089,"start-est":0.09765625,"status":"ex-start","target":false,"target-prog":"#f","time":4736.560546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(sqrt (/ (- (+ (- (+ (- (+ (* (* (- 1.0) x) x) (* 1022.0 x)) (* y y)) (* 1022.0 y)) (* z z)) (* 1022.0 z)) 261121.0) (/ (* 1022.0 1022.0) 2.0)))","link":"5ddb2c9edc27d899c4096ad4b5f957681259d909.1.6","name":"sqrt((-1*x*x + 1022*x - y*y + 1022*y - z*z + 1022*z - 261121)/(1022*1022 / 2))","output":"#f","pre":"(and (and (and (<= 0.0 x) (<= x 1022.0)) (and (<= 0.0 y) (<= y 1022.0))) (and (<= 0.0 z) (<= z 1022.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (- (+ (- (+ (- (+ (* (* (- 1.0) x) x) (* 1022.0 x)) (* y y)) (* 1022.0 y)) (* z z)) (* 1022.0 z)) 261121.0) (/ (* 1022.0 1022.0) 2.0)))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":727.5458984375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.02089340061561778) (6656 0.02089340061561778) ((6660 8.174547438079044 (if (<= a 265.0) (exp (- a)) (- b))) (324 47.76430152651179 (if (<= a 119.61303026125893) (- 1.0 b) (- b))) (128 50.94329626065533 (- b))))","end":0.02089340061561778,"end-est":0.0234375,"identifier":"#f","input":"(- (exp (- a)) b)","link":"11b1e7a9aae2e01cd355b23326e12e721f04960f.1.6","name":"exp(-a) - b","output":"(- (exp (- a)) b)","pre":"(and (and (<= 1.0 a) (<= a 1000.0)) (and (<= 0.0 b) (<= b 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (exp (- a)) b)","start":0.02089340061561778,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":2519.284423828125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 0.5282706504044659) (27072 0.36515993866110896) ((13632 0.5282706504044659 (- (/ (exp (* x (- a))) a) (/ (exp (* b (- x))) b))) (8064 1.10391214071939 (+ (/ 1.0 a) (+ (/ -1.0 b) (* (- a b) (+ (* x (* x 0.5)) (* (* -0.16666666666666666 (pow x 3.0)) (+ b a))))))) (1600 1.1037515179026027 (+ (* (- a b) (* (* x x) (+ 0.5 (* -0.16666666666666666 (* x (+ b a)))))) (+ (/ 1.0 a) (/ -1.0 b)))) (1088 1.2411492655334908 (+ (/ 1.0 a) (+ (/ -1.0 b) (* x (* (- a b) (* x 0.5)))))) (448 1.392950569969363 (+ (/ 1.0 a) (/ -1.0 b))) (448 1.2133637954705339 (/ (- b a) (* b a))) (324 52.57471589492352 (if (<= b 72.0) (/ -1.0 b) (/ 1.0 a))) (192 56.19359561116962 (/ 1.0 a))))","end":0.36515993866110896,"end-est":0.35832877900649757,"identifier":"#f","input":"(- (/ (exp (* (- a) x)) a) (/ (exp (* (- b) x)) b))","link":"16175bf518942f0b410f046d5ff8a2cdc5a258fe.1.6","name":"exp(-a*x)/a - exp(-b*x)/b","output":"(/ (- (* b (exp (* b x))) (* a (exp (* x a)))) (* a (* b (* (exp (* b x)) (exp (* x a))))))","pre":"(and (and (and (<= 1.0 a) (<= a 1000.0)) (and (<= 0.0 x) (<= x 1.0))) (and (<= 1.0 b) (<= b 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (/ (exp (* (- a) x)) a) (/ (exp (* (- b) x)) b))","start":0.5282706504044659,"start-est":0.5055575765844659,"status":"ex-start","target":false,"target-prog":"#f","time":6891.604736328125,"vars":["a","x","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((26304 0.31034269504834416) (26304 0.309699203273079) ((13316 34.34679514600329 (if (<= (- b) -16.0) (- (exp (- a)) (exp (- d))) (- (exp (- c)) (exp (- b))))) (13120 42.33351351744558 (- (exp (- c)) (exp (- d)))) (13120 42.23774000013267 (- (exp (- a)) (exp (- d)))) (6656 59.34117469722779 (- b (exp (- d))))))","end":0.309699203273079,"end-est":0.35513967524283696,"identifier":"#f","input":"(- (+ (- (exp (- a)) (exp (- b))) (exp (- c))) (exp (- d)))","link":"c650f509395cf406f8d4de107c8aa03b06b5c8b5.1.6","name":"exp(-a) - exp(-b) + exp(-c) - exp(-d)","output":"(+ (exp (- c)) (- (- (exp (- a)) (exp (- b))) (exp (- d))))","pre":"(and (and (and (and (<= 1.0 a) (<= a 1000.0)) (and (<= 1.0 b) (<= b 1000.0))) (and (<= 1.0 c) (<= c 1000.0))) (and (<= 1.0 d) (<= d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (+ (- (exp (- a)) (exp (- b))) (exp (- c))) (exp (- d)))","start":0.31034269504834416,"start-est":0.365237185011279,"status":"ex-start","target":false,"target-prog":"#f","time":10168.715087890625,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((26304 52.37957269082392) (46404 0.8838736092806112) ((39496 28.05950729248536 (if (<= (- (exp (- a)) (exp (- b))) -4e-16) (- (exp (- c)) (exp (- b))) (if (<= (- (exp (- a)) (exp (- b))) 0.0) (- (expm1 (- c)) (expm1 (- d))) (- (exp (- a)) (exp (- b)))))) (26564 1.765599194236428 (if (<= (- (exp (- a)) (exp (- b))) -4e-16) (- (- (expm1 (- b))) (+ c (expm1 (- d)))) (- (+ b (expm1 (- a))) (+ c (expm1 (- d)))))) (13444 10.267866081948863 (if (<= (- b) 9.955637309511669e-73) (- (expm1 (- a)) (+ c (expm1 (- d)))) (- (- (expm1 (- b))) (expm1 (- d))))) (13444 8.11140882974409 (if (<= a -1.919037813057409e-98) (- (expm1 (- a)) (+ c (expm1 (- d)))) (- (- (expm1 (- b))) (+ c (expm1 (- d)))))) (13380 7.9953072040353295 (if (<= a -1.1192084118522571e-105) (- (expm1 (- a)) (+ c (expm1 (- d)))) (- (+ b (expm1 (- c))) (expm1 (- d))))) (13316 22.47712610848068 (if (<= c 6.8365368206606226e-136) (- (- (expm1 (- b))) (expm1 (- d))) (- (expm1 (- c)) (expm1 (- d))))) (13252 30.134763797559796 (if (<= b -5.581579047131684e-18) (- (exp (- c)) (exp (- b))) (- (expm1 (- c)) (expm1 (- d))))) (13120 32.29806169902814 (- (expm1 (- c)) (expm1 (- d)))) (260 41.31177862469009 (if (<= d 2.771042223589718e-171) (- c) d)) (64 48.93944516656491 d)))","end":0.8838736092806112,"end-est":2.508574159335284,"identifier":"#f","input":"(- (+ (- (exp (- a)) (exp (- b))) (exp (- c))) (exp (- d)))","link":"dcceb3e41ab2538c78104275c414b3711ac2a9fa.1.6","name":"exp(-a) - exp(-b) + exp(-c) - exp(-d)","output":"(if (<= (- (+ (- (exp (- a)) (exp (- b))) (exp (- c))) (exp (- d))) -6e-7) (- (exp (- c)) (exp (- b))) (- (+ (expm1 (- a)) (fma b (* b -0.5) b)) (+ c (expm1 (- d)))))","pre":"(and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 c) (<= c 1000.0))) (and (<= -1000.0 d) (<= d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (+ (- (exp (- a)) (exp (- b))) (exp (- c))) (exp (- d)))","start":52.37957269082392,"start-est":53.20617131732782,"status":"imp-start","target":false,"target-prog":"#f","time":13167.18798828125,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.00625) (6656 0.00625) ((192 2.3875587769806557 (- 0.9999999999999999 a)) (64 3.136359761922164 0.9999999999999999)))","end":0.00625,"end-est":0.00390625,"identifier":"#f","input":"(- (exp (- a)) 1e-16)","link":"2b36ecf9ae5dda2c217b62b35c45621c125000c0.1.6","name":"exp(-a) - 1e-16","output":"(+ (exp (- a)) -1e-16)","pre":"(and (<= 0.0 a) (<= a 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (exp (- a)) 1e-16)","start":0.00625,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2604.898193359375,"vars":["a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.0010368275936114535) (13056 0.0010368275936114535) ())","end":0.0010368275936114535,"end-est":0,"identifier":"#f","input":"(exp (* (- a) (sqrt b)))","link":"194c65b6d64cf4fe02215049d6b062a83fa947a4.1.6","name":"exp(-a*sqrt(b))","output":"(exp (* (- a) (sqrt b)))","pre":"(and (and (<= 0.0 a) (<= a 1000.0)) (and (<= 0.0 b) (<= b 1000.0)))","prec":"binary64","preprocess":"()","spec":"(exp (* (- a) (sqrt b)))","start":0.0010368275936114535,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2269.689697265625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01275) (6720 0) ((576 0.01275 (+ (* t a) (* b (- 1.0 t)))) (324 11.871733508602212 (if (<= t 3.2183984988777918e-21) b (* t a))) (64 12.343390180489747 b)))","end":0,"end-est":0,"identifier":"#f","input":"(+ (* a t) (* b (- 1.0 t)))","link":"623a20d7aac36b07993690cce23285da9314047a.1.6","name":"a*t + b*(1-t)","output":"(fma t (- a b) b)","pre":"(and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= -1000.0 b) (<= b 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* a t) (* b (- 1.0 t)))","start":0.01275,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2986.100341796875,"vars":["a","t","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((14144 0.03389624062518029) (7680 0.03444812031259014) ((1216 0.513701724589578 (+ (* t (+ (* a -2.0) (* 2.0 b))) (+ a (* t (* t (+ a c)))))) (1088 0.7238076381005215 (+ (* t (+ (* a -2.0) (* 2.0 b))) (+ a (* t (* t c))))) (832 3.5968571803915967 (* (- 1.0 t) (+ a (* t (- (* 2.0 b) a))))) (708 13.964888479165548 (if (<= b 4.795528446412522e-39) (* (- 1.0 t) (- a (* a t))) (* t (* 2.0 b)))) (704 4.243305247873445 (+ a (* t (+ (* a -2.0) (* 2.0 b))))) (580 14.1508668311328 (if (<= b 4.795528446412522e-39) (* a (+ 1.0 (* t -2.0))) (* t (* 2.0 b)))) (452 14.36101808794506 (if (<= b 4.795528446412522e-39) (* a (- 1.0 t)) (* t (* 2.0 b)))) (320 13.648605095659287 (* a (- 1.0 t))) (64 13.664928658545149 a)))","end":0.03444812031259014,"end-est":0.01953125,"identifier":"#f","input":"(+ (+ (* a (pow (- 1.0 t) 2.0)) (* (* (* b (- 1.0 t)) t) 2.0)) (* c (pow t 2.0)))","link":"cc3bf6b4b684ac3ac6de0e60b6923152bca4fdfa.1.6","name":"a*(1-t)^2 + b*(1-t)*t*2 + c*t^2","output":"(+ (* a (pow (- 1.0 t) 2.0)) (* t (+ (* 2.0 (* (- 1.0 t) b)) (* t c))))","pre":"(and (and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* a (pow (- 1.0 t) 2.0)) (* (* (* b (- 1.0 t)) t) 2.0)) (* c (pow t 2.0)))","start":0.03389624062518029,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":8161.5478515625,"vars":["a","t","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.000125) (6720 0.000125) ((6464 0.1719112405937703 (log x))))","end":0.000125,"end-est":0,"identifier":"#f","input":"(log (/ x (- 1.0 x)))","link":"9b7c1d01868eb947ba015911175c9764a5823935.1.6","name":"log(x/(1-x))","output":"(log (/ x (- 1.0 x)))","pre":"(and (<= 0.0 x) (<= x 1e-9))","prec":"binary64","preprocess":"()","spec":"(log (/ x (- 1.0 x)))","start":0.000125,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2253.6728515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.0026981203125901448) (6720 0.0026981203125901448) ((6464 1.1161676284521687 (log x))))","end":0.0026981203125901448,"end-est":0.00390625,"identifier":"#f","input":"(log (/ x (- 1.0 x)))","link":"c0e439e7352c477bf6ee8b642ecdd66b0beb880f.1.6","name":"log(x/(1-x))","output":"(log (/ x (- 1.0 x)))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(log (/ x (- 1.0 x)))","start":0.0026981203125901448,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2637.078857421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.09624542917784136) (6976 0.10627844252575927) ((6720 0.09624542917784136 (log (/ x (- 1.0 x)))) (6592 20.479900650708693 (+ x (log x))) (6464 35.09613840415481 (log x))))","end":0.10627844252575927,"end-est":0.08301822434550879,"identifier":"#f","input":"(log (/ x (- 1.0 x)))","link":"083ed62eccd9c327c914af9247b7b822212313b9.1.6","name":"log(x/(1-x))","output":"(+ (+ 1.0 (log (/ x (- 1.0 x)))) -1.0)","pre":"(and (<= 1e-9 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(log (/ x (- 1.0 x)))","start":0.09624542917784136,"start-est":0.08756973638627305,"status":"ex-start","target":false,"target-prog":"#f","time":4499.248046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 19.244075564063678) (52164 13.60618464556257) ((26820 13.717084716066834 (if (<= x 560.0) (+ y (log1p (exp (- x y)))) (+ (/ x (* (exp y) (+ 1.0 (/ 1.0 (exp y))))) (+ y (log (+ 1.0 (/ 1.0 (exp y)))))))) (20228 14.253131889849431 (if (<= (exp x) 2e+239) (+ y (log1p (exp (- x y)))) (+ y (log1p (* (exp (- y)) (+ (+ x 1.0) (* x (* x 0.5)))))))) (19972 13.717084716066834 (if (<= x 560.0) (+ y (log1p (exp (- x y)))) (+ (log1p (exp (- y))) (+ y (/ x (+ 1.0 (exp y))))))) (13380 14.267501047644952 (if (<= x 560.0) (+ y (log1p (exp (- x y)))) (+ y (log1p (/ (+ x 1.0) (exp y)))))) (13252 14.331132731130714 (if (<= x 560.0) (+ y (log1p (exp (- x y)))) (+ y (log1p (/ 1.0 (exp y)))))) (13188 29.165986195975492 (if (<= y 0.24436755007788763) (log1p (exp x)) (+ y (log1p (exp (- y)))))) (12996 29.725009128221117 (if (<= y 5.437453307850531) (log1p (exp x)) y)) (6980 32.354135200447324 (if (<= y 5.437453307850531) (+ y (+ (* x 0.5) (log 2.0))) y)) (6724 33.81482334541813 (if (<= y 2.1525134623211377) (+ y (log 2.0)) y)) (64 36.90947616947925 y)))","end":13.60618464556257,"end-est":14.426968488617563,"identifier":"#f","input":"(+ (log1p (/ (exp x) (exp y))) y)","link":"9077e1ef87d40e0864f2976e2582f6594999dac4.1.6","name":"log1p(exp(x)/exp(y)) + y","output":"(if (<= x 714.0816897048019) (+ y (+ (log (hypot 1.0 (pow (exp (- y x)) -0.5))) (log (hypot 1.0 (pow (exp (- y x)) -0.5))))) (+ (/ x (* (exp y) (+ 1.0 (/ 1.0 (exp y))))) (+ y (log (+ 1.0 (/ 1.0 (exp y)))))))","pre":"(and (and (<= 1e-7 x) (<= x 10000000.0)) (and (<= 1e-7 y) (<= y 10000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (log1p (/ (exp x) (exp y))) y)","start":19.244075564063678,"start-est":20.609375,"status":"imp-start","target":false,"target-prog":"#f","time":9607.9150390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 32.59312368595079) (25924 26.992893705850165) ((19652 33.86418800709812 (if (<= (exp y) 2e+239) (log (+ x (+ (exp y) 1.0))) (+ (log 2.0) (* y 0.5)))) (19652 33.86412808580464 (if (<= (exp y) 2e+239) (log (+ (exp y) (+ x 1.0))) (+ (log 2.0) (* y 0.5)))) (13128 37.99539931816713 (if (<= y 0.006370147187603773) (+ (+ (log 2.0) (* y 0.5)) (* x (+ 0.5 (* y -0.25)))) (if (<= y 550.777234766748) (log1p (exp y)) (+ (log 2.0) (* y 0.5))))) (7364 47.47229192989666 (if (<= y 1.5513589605251585) (+ (+ (log 2.0) (* y 0.5)) (* x (+ 0.5 (* y -0.25)))) (+ (log 2.0) (* y 0.5)))) (6720 48.75047146857096 (+ (log 2.0) (* y 0.5))) (6464 52.68943217924637 (log 2.0))))","end":26.992893705850165,"end-est":32.26722112026582,"identifier":"#f","input":"(log (+ (exp x) (exp y)))","link":"ac17b738dfe275b668c262e17ed1538034216c23.1.6","name":"log(exp(x) + exp(y))","output":"(if (<= (exp y) 2e+239) (log (+ (exp y) (exp x))) (+ (log 2.0) (* y 0.5)))","pre":"(and (and (<= 1e-7 x) (<= x 10000000.0)) (and (<= 1e-7 y) (<= y 10000000.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp x) (exp y)))","start":32.59312368595079,"start-est":36.12013627930533,"status":"imp-start","target":false,"target-prog":"#f","time":7683.087890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 64.0) (174912 53.80466474001856) ((144256 53.804664740018566 (+ 0.01 (+ (/ (* deficit (* (+ (exp 0.01) -1.0) (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))))) (exp 0.01)) (* 0.5 (* (pow deficit 2.0) (- (/ (* (pow (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) 2.0) (fma (exp 0.005) (exp 0.005) -1.0)) (exp 0.01)) (/ (* (pow (+ (exp 0.01) -1.0) 2.0) (pow (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) 2.0)) (pow (exp 0.01) 2.0)))))))) (97728 53.804664740018566 (fma (* (pow (log (/ (expm1 1.01) (expm1 0.01))) 2.0) (- 1.0 (+ (exp -0.01) (/ (pow (expm1 0.01) 2.0) (exp 0.02))))) (* deficit (* deficit 0.5)) (fma (/ deficit (exp 0.01)) (* (expm1 0.01) (log (/ (expm1 1.01) (expm1 0.01)))) 0.01))) (97728 53.804664740018566 (fma (* (pow (log (/ (expm1 1.01) (expm1 0.01))) 2.0) (- (- 1.0 (exp -0.01)) (* (pow (expm1 0.01) 2.0) (exp -0.02)))) (* deficit (* deficit 0.5)) (fma (/ deficit (exp 0.01)) (* (expm1 0.01) (log (/ (expm1 1.01) (expm1 0.01)))) 0.01))) (77888 54.74137425887781 (+ 0.01 (/ (* deficit (* (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) (+ (log (sqrt (exp (expm1 0.01)))) (log (sqrt (exp (expm1 0.01))))))) (exp 0.01)))) (32576 54.74137425887781 (fma deficit (* (log (/ (expm1 1.01) (expm1 0.01))) (- 1.0 (exp -0.01))) 0.01)) (26176 54.74150909315148 (* deficit (* (log (/ (expm1 1.01) (expm1 0.01))) (- 1.0 (exp -0.01))))) (64 56.15790592401993 0.01)))","end":53.80466474001856,"end-est":53.802407238152604,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 0.01)) 1.0) (- (exp 0.01) 1.0))) deficit) (log (- (exp 0.01) 1.0)))))","link":"2d5b4a9f85e49d4a713eb9c977b6f0ddb16e66bb.1.6","name":"    log1p(exp(log((exp(1 + 0.01) - 1) / (exp(0.01) - 1))*deficit + log(exp(0.01) - 1)))","output":"(fma (* (pow (log (/ (expm1 1.01) (expm1 0.01))) 2.0) (- 1.0 (+ (exp -0.01) (/ (+ (log (* (cbrt (exp (pow (expm1 0.01) 2.0))) (cbrt (exp (pow (expm1 0.01) 2.0))))) (log (cbrt (exp (pow (expm1 0.01) 2.0))))) (exp 0.02))))) (* deficit (* deficit 0.5)) (fma (/ deficit (exp 0.01)) (* (expm1 0.01) (log (/ (expm1 1.01) (expm1 0.01)))) 0.01))","pre":"(and (<= 400.0 deficit) (<= deficit 500.0))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 0.01)) 1.0) (- (exp 0.01) 1.0))) deficit) (log (- (exp 0.01) 1.0)))))","start":64.0,"start-est":64.0,"status":"imp-start","target":false,"target-prog":"#f","time":10477.873046875,"vars":["deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 17.25598933398742) (117572 11.97017133147758) ((65412 12.20690312051756 (if (<= (* (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) deficit) 700.0) (log1p (/ (* (pow (/ (expm1 1.01) (expm1 0.01)) deficit) (expm1 0.03)) (+ (exp 0.02) (+ 1.0 (exp 0.01))))) (+ 0.01 (/ (* deficit (* (+ (exp 0.01) -1.0) (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))))) (exp 0.01))))) (39172 12.844761895511445 (if (<= deficit 122.94538693555954) (log1p (* (/ (pow (/ (expm1 1.01) (expm1 0.01)) deficit) (+ 1.0 (exp 0.01))) (expm1 0.02))) (+ 0.01 (/ (* deficit (* (+ (exp 0.01) -1.0) (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))))) (exp 0.01))))) (33220 12.814159826753151 (if (<= deficit 122.94538693555954) (log1p (* (expm1 0.01) (pow (/ (expm1 0.01) (expm1 1.01)) (- deficit)))) (+ 0.01 (/ (* deficit (* (+ (exp 0.01) -1.0) (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))))) (exp 0.01))))) (32964 12.925565015218574 (if (<= deficit 122.94538693555954) (log1p (* (expm1 0.01) (pow (/ (expm1 0.01) (expm1 1.01)) (- deficit)))) (log1p (* (expm1 0.01) (+ 1.0 (* (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) deficit)))))) (32580 13.136896407275126 (if (<= deficit 122.94538693555954) (log1p (* (expm1 0.01) (pow (/ (expm1 0.01) (expm1 1.01)) (- deficit)))) 0.01)) (32516 13.141840016652829 (if (<= deficit 122.94538693555954) (log1p (* (expm1 0.01) (pow (/ (expm1 1.01) (expm1 0.01)) deficit))) 0.01)) (64 55.103546414719276 0.01)))","end":11.97017133147758,"end-est":11.437654375321843,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 0.01)) 1.0) (- (exp 0.01) 1.0))) deficit) (log (- (exp 0.01) 1.0)))))","link":"eafac48c03b3e728a8a2cfcc0999f736a70b39f6.1.6","name":"log1p(exp(log((exp(1 + 0.01) - 1) / (exp(0.01) - 1))*deficit + log(exp(0.01) - 1)))","output":"(if (<= (* (log (/ (+ (exp 1.01) -1.0) (+ (exp 0.01) -1.0))) deficit) 700.0) (log1p (/ (* (pow (/ (expm1 1.01) (expm1 0.01)) deficit) (expm1 0.03)) (+ (exp 0.02) (+ 1.0 (exp 0.01))))) (fma (* deficit deficit) (* 0.5 (* (pow (log (/ (expm1 1.01) (expm1 0.01))) 2.0) (- (- 1.0 (exp -0.01)) (/ (pow (expm1 0.01) 2.0) (exp 0.02))))) (fma (/ deficit (exp 0.01)) (* (expm1 0.01) (log (/ (expm1 1.01) (expm1 0.01)))) 0.01)))","pre":"(and (<= 0.1 deficit) (<= deficit 1000.0))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 0.01)) 1.0) (- (exp 0.01) 1.0))) deficit) (log (- (exp 0.01) 1.0)))))","start":17.25598933398742,"start-est":16.680883432053463,"status":"imp-start","target":false,"target-prog":"#f","time":12437.343017578125,"vars":["deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 16.65850609070166) (131268 11.411816633571688) ((78852 11.446424250528327 (if (<= (exp (+ (* (log (/ (+ (exp (+ 1.0 tolerance)) -1.0) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0)))) 4e+301) (log1p (* (expm1 tolerance) (pow (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)) deficit))) (* tolerance (+ 1.0 (* deficit (fma deficit (* 0.5 (pow (log (/ (expm1 1.0) tolerance)) 2.0)) (log (/ (expm1 1.0) tolerance)))))))) (39300 11.408361448715835 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)) deficit))) (log1p (* (expm1 tolerance) (* (pow (expm1 (+ 1.0 tolerance)) deficit) (- 1.0 (* deficit (log (expm1 tolerance))))))))) (32644 11.629732044421417 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)) deficit))) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (32580 46.252863517422355 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit))) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (26180 52.63544289284943 (if (<= deficit 1.9606995802153961) (* tolerance (pow (pow (cbrt (/ (expm1 1.0) tolerance)) 3.0) deficit)) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (26180 52.63544289284941 (if (<= deficit 1.9606995802153961) (pow (cbrt (* tolerance (pow (/ (expm1 1.0) tolerance) deficit))) 3.0) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (26052 50.77085792892235 (if (<= deficit 155.0) (log1p (* (expm1 tolerance) (pow (expm1 tolerance) (- deficit)))) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (13572 52.63544289284943 (if (<= deficit 1.9606995802153961) (* tolerance (pow (/ (expm1 1.0) tolerance) deficit)) (* tolerance (+ 1.0 (* deficit (log (/ (+ E -1.0) tolerance))))))) (13316 53.37539364716883 (if (<= deficit 2.6) (* tolerance (pow (/ (expm1 1.0) tolerance) deficit)) tolerance)) (64 55.0995917729786 tolerance)))","end":11.411816633571688,"end-est":11.474814767816337,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","link":"b372f02eea75b1d1a48650f7f46a0acf2dd64cc9.1.6","name":"log1p(exp(log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)))","output":"(if (<= (+ (* (log (/ (+ (exp (+ 1.0 tolerance)) -1.0) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 700.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)) deficit))) (+ tolerance (fma (* deficit (* deficit 0.5)) (* (pow (log (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance))) 2.0) (- (/ (expm1 tolerance) (exp tolerance)) (/ (pow (expm1 tolerance) 2.0) (exp (+ tolerance tolerance))))) (/ (* (expm1 tolerance) (log (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)))) (/ (exp tolerance) deficit)))))","pre":"(and (and (<= 0.01 tolerance) (<= tolerance 0.01)) (and (<= 0.1 deficit) (<= deficit 1000.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","start":16.65850609070166,"start-est":16.751072849725823,"status":"imp-start","target":false,"target-prog":"#f","time":12213.244384765625,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 15.11847840277609) (131268 9.769178554574895) ((72452 9.770504047235773 (if (<= (+ (* (log (/ (+ (exp (+ 1.0 tolerance)) -1.0) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 700.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 tolerance) (expm1 (+ 1.0 tolerance))) (- deficit)))) (* tolerance (+ 1.0 (* deficit (fma deficit (* 0.5 (pow (log (/ (expm1 1.0) tolerance)) 2.0)) (log (/ (expm1 1.0) tolerance)))))))) (39300 9.748679839632668 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 tolerance) (expm1 (+ 1.0 tolerance))) (- deficit)))) (log1p (* (expm1 tolerance) (* (pow (expm1 (+ 1.0 tolerance)) deficit) (- 1.0 (* deficit (log (expm1 tolerance))))))))) (32708 9.935448780911784 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 tolerance) (expm1 (+ 1.0 tolerance))) (- deficit)))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (32644 9.938267390289484 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)) deficit))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (32580 45.329344681054245 (if (<= deficit 140.0) (log1p (* (expm1 tolerance) (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (32452 50.02439709046457 (if (<= deficit 0.88) (log (pow (exp tolerance) (pow (/ (expm1 1.0) tolerance) deficit))) (log1p (* (expm1 tolerance) (pow (expm1 tolerance) (- deficit)))))) (26180 50.513656605792164 (if (<= deficit 1.9593340554187806) (cbrt (pow (* tolerance (pow (/ (expm1 1.0) tolerance) deficit)) 3.0)) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (26180 50.513656605792185 (if (<= deficit 1.9593340554187806) (pow (cbrt (* tolerance (pow (/ (expm1 1.0) tolerance) deficit))) 3.0) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (26180 50.024397090472235 (if (<= deficit 0.88) (pow (cbrt (* tolerance (pow (/ (expm1 1.0) tolerance) deficit))) 3.0) (log1p (* (expm1 tolerance) (pow (expm1 tolerance) (- deficit)))))) (26116 50.51365660579221 (if (<= deficit 1.9593340554187806) (* tolerance (pow (exp deficit) (log (/ (expm1 1.0) tolerance)))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (19844 50.51365660579225 (if (<= deficit 1.9593340554187806) (* (pow (expm1 1.0) deficit) (* tolerance (pow tolerance (- deficit)))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (13572 51.11680258177 (if (<= deficit 2.5938453540029855) (* tolerance (+ -1.0 (+ 1.0 (pow (/ (expm1 1.0) tolerance) deficit)))) tolerance)) (13572 50.51365660579225 (if (<= deficit 1.9593340554187806) (* tolerance (+ -1.0 (+ 1.0 (pow (/ (expm1 1.0) tolerance) deficit)))) (* tolerance (+ 1.0 (* deficit (log (/ (+ -1.0 E) tolerance))))))) (13316 51.116802581769996 (if (<= deficit 2.5938453540029855) (* tolerance (pow (/ (expm1 1.0) tolerance) deficit)) tolerance)) (64 54.08545492401056 tolerance)))","end":9.769178554574895,"end-est":6.086848875976593,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","link":"9efddf88c372b3ee26727d3c7059b65b79effdf6.1.6","name":"    log1p(exp(log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)))","output":"(if (<= (+ (* (log (/ (+ (exp (+ 1.0 tolerance)) -1.0) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 700.0) (log1p (* (expm1 tolerance) (pow (/ (expm1 tolerance) (expm1 (+ 1.0 tolerance))) (- deficit)))) (+ tolerance (fma 0.5 (* deficit (* deficit (* (pow (log (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance))) 2.0) (- (/ (expm1 tolerance) (exp tolerance)) (/ (pow (expm1 tolerance) 2.0) (exp (+ tolerance tolerance))))))) (* (log (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance))) (/ (expm1 tolerance) (/ (exp tolerance) deficit))))))","pre":"(and (and (<= 0.01 tolerance) (<= tolerance 0.01)) (and (<= 0.01 deficit) (<= deficit 1000.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","start":15.11847840277609,"start-est":11.118161570773758,"status":"imp-start","target":false,"target-prog":"#f","time":14127.67236328125,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 9.46652871188887) (32512 8.460148684376259) ((32516 48.98246545040402 (if (<= deficit 0.458) (* (pow (+ -1.0 E) deficit) (* tolerance (exp (* (log tolerance) (- deficit))))) (log1p (* tolerance (pow (/ (exp (log (expm1 1.0))) tolerance) deficit))))) (32448 49.080658762801924 (log1p (* (expm1 tolerance) (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit)))) (32384 49.54785940721408 (log1p (* (expm1 tolerance) (pow (/ (expm1 1.0) (expm1 tolerance)) deficit)))) (26052 50.191984187747366 (if (<= deficit 0.9045313803203086) (* tolerance (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit)) (log1p (* (expm1 tolerance) (pow (expm1 tolerance) (- deficit)))))) (19840 50.93824953193386 (+ tolerance (* (- (log (+ -1.0 E)) (log tolerance)) (* tolerance deficit)))) (19780 51.288894735623266 (if (<= deficit 2.5938453540029855) (* tolerance (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit)) tolerance)) (19776 50.93824953193386 (+ tolerance (* tolerance (* deficit (- (log (expm1 1.0)) (log tolerance)))))) (12992 53.452712729778426 (log1p (- (exp tolerance) 1.0))) (64 53.452712729778426 tolerance)))","end":8.460148684376259,"end-est":4.295253759768443,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","link":"3ddeb9edf3b900b1dfdae5ecfb6b69d493c00dff.1.6","name":"    log1p(exp(log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)))","output":"(log1p (* (expm1 tolerance) (pow (/ (expm1 (+ tolerance 1.0)) (expm1 tolerance)) deficit)))","pre":"(and (and (<= 0.1 tolerance) (<= tolerance 0.1)) (and (<= 0.01 deficit) (<= deficit 1000.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","start":9.46652871188887,"start-est":5.431585273267262,"status":"imp-start","target":false,"target-prog":"#f","time":11750.089599609375,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 8.13703544713033) (32512 0.04681372187554086) ((26112 1.1888094418777455 (log1p (* (expm1 tolerance) (pow (* (/ 1.0 tolerance) (expm1 1.0)) deficit)))) (25984 1.1888094418777448 (log1p (* (expm1 tolerance) (pow (/ (expm1 1.0) tolerance) deficit)))) (19648 1.341493023230429 (* tolerance (pow (* (expm1 1.0) (pow tolerance -1.0)) deficit))) (64 1.9073711858469706 tolerance)))","end":0.04681372187554086,"end-est":0.05078125,"identifier":"#f","input":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","link":"4d7ceb7c90025c4a1668b3450fce5f05766fc568.1.6","name":"log1p(exp(log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)))","output":"(log1p (* (expm1 tolerance) (pow (/ (expm1 (+ tolerance 1.0)) (expm1 tolerance)) deficit)))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 deficit) (<= deficit 100.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))))","start":8.13703544713033,"start-est":8.016982494738526,"status":"imp-start","target":false,"target-prog":"#f","time":21663.11181640625,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 8.318614879643778) (38976 0.2584416138763566) ((32640 0.26043599348258517 (log1p (* (expm1 tolerance) (pow (+ (exp (+ tolerance 1.0)) -1.0) (/ deficit (expm1 tolerance)))))) (32640 0.2597670156520164 (log1p (* (expm1 tolerance) (pow (expm1 (+ tolerance 1.0)) (* deficit (/ 1.0 (expm1 tolerance))))))) (32512 0.25929664555167886 (log1p (* (expm1 tolerance) (pow (expm1 (+ tolerance 1.0)) (/ deficit (expm1 tolerance)))))) (26624 0.40682146751807025 (log1p (* (expm1 tolerance) (pow (expm1 (+ tolerance 1.0)) (* deficit (+ (+ (* tolerance 0.08333333333333333) (/ 1.0 tolerance)) -0.5)))))) (26368 0.966361770884995 (log1p (* (expm1 tolerance) (pow (expm1 (+ tolerance 1.0)) (* deficit (+ (/ 1.0 tolerance) -0.5)))))) (26112 1.5202257053276511 (log1p (* (expm1 tolerance) (pow (expm1 (+ tolerance 1.0)) (/ deficit tolerance))))) (25984 1.6378976003178778 (log1p (* (expm1 tolerance) (pow (expm1 1.0) (/ deficit tolerance))))) (64 2.1617875815914434 tolerance)))","end":0.2584416138763566,"end-est":0.0390625,"identifier":"#f","input":"(log1p (exp (+ (* (/ (log (- (exp (+ 1.0 tolerance)) 1.0)) (- (exp tolerance) 1.0)) deficit) (log (- (exp tolerance) 1.0)))))","link":"45e3b2e6ea17fd39352832b0d7ccf8c0ef9dbc27.1.6","name":"    log1p(exp((log(exp(1 + tolerance) - 1) / (exp(tolerance) - 1)) * deficit + log(exp(tolerance) - 1)))","output":"(log1p (* (expm1 tolerance) (exp (/ (* (log (expm1 (+ tolerance 1.0))) deficit) (expm1 tolerance)))))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 deficit) (<= deficit 20.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (exp (+ (* (/ (log (- (exp (+ 1.0 tolerance)) 1.0)) (- (exp tolerance) 1.0)) deficit) (log (- (exp tolerance) 1.0)))))","start":8.318614879643778,"start-est":8.017695002535111,"status":"imp-start","target":false,"target-prog":"#f","time":8508.0966796875,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((45760 53.35888392778139) (143556 1.322777076402215) ((91268 1.2823946827496915 (if (<= (+ (* (exp (/ (log (+ (exp (+ 1.0 tolerance)) -1.0)) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 2e+74) (log1p (fma (pow (sqrt (expm1 (+ 1.0 tolerance))) (* 2.0 (/ 1.0 (expm1 tolerance)))) deficit (log (expm1 tolerance)))) (+ (/ (log (expm1 (+ 1.0 tolerance))) (expm1 tolerance)) (log deficit)))) (84740 1.2544339397913593 (if (<= (+ (* (exp (/ (log (+ (exp (+ 1.0 tolerance)) -1.0)) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 2e+283) (log1p (fma (pow (expm1 (+ 1.0 tolerance)) (/ 1.0 (expm1 tolerance))) deficit (log (expm1 tolerance)))) (+ (log deficit) (/ (log1p (+ -1.0 (expm1 (+ 1.0 tolerance)))) (expm1 tolerance))))) (39172 1.5836089446665238 (if (<= tolerance 0.0007357375775681975) (+ (log deficit) (/ (log1p (+ -1.0 (expm1 (+ 1.0 tolerance)))) (expm1 tolerance))) (log1p (+ (log (expm1 tolerance)) (* deficit (pow (expm1 (+ 1.0 tolerance)) (/ 1.0 (expm1 tolerance)))))))) (26048 2.091436760419759 (+ (/ (log (expm1 (+ 1.0 tolerance))) (expm1 tolerance)) (log deficit))) (19584 41.54802077122951 (+ (log deficit) (/ (log (+ E -1.0)) tolerance))) (12992 48.622055435863714 (/ (log (expm1 1.0)) tolerance)) (12864 64.0 (log1p (log tolerance)))))","end":1.322777076402215,"end-est":1.248417115696796,"identifier":"#f","input":"(log1p (+ (* (exp (/ (log (- (exp (+ 1.0 tolerance)) 1.0)) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0))))","link":"50e7fbabae588cef17d8b0a493ec9dacfbd26c63.1.6","name":"log1p(exp(log(exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1))","output":"(if (<= (+ (* (exp (/ (log (+ (exp (+ 1.0 tolerance)) -1.0)) (+ (exp tolerance) -1.0))) deficit) (log (+ (exp tolerance) -1.0))) 2e+283) (log1p (fma (exp (/ (log (fma E (exp tolerance) -1.0)) (expm1 tolerance))) deficit (log (expm1 tolerance)))) (/ (+ (pow (/ (log (expm1 (+ 1.0 tolerance))) (expm1 tolerance)) 3.0) (pow (log deficit) 3.0)) (+ (pow (log deficit) 2.0) (- (pow (/ (log (expm1 (+ 1.0 tolerance))) (expm1 tolerance)) 2.0) (* (/ (log (expm1 (+ 1.0 tolerance))) (expm1 tolerance)) (log deficit))))))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 deficit) (<= deficit 20.0)))","prec":"binary64","preprocess":"()","spec":"(log1p (+ (* (exp (/ (log (- (exp (+ 1.0 tolerance)) 1.0)) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0))))","start":53.35888392778139,"start-est":53.186579464560545,"status":"imp-start","target":false,"target-prog":"#f","time":11370.335693359375,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03418176718957333) (13120 0.03418176718957333) ((6848 0.7473203289894604 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 2.8571270520142407 1.0)))","end":0.03418176718957333,"end-est":0.0390625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"9910a3bd05d47c75fc5e80438a6b6251bf54520f.1.6","name":"sqrt(x+ 1) -sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03418176718957333,"start-est":0.0390625,"status":"ex-start","target":false,"target-prog":"#f","time":4305.366455078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((45888 8.129531074218365) (32512 0.025698120312590146) ((20288 1.1003752299312541 (- tolerance (* (* tolerance (+ deficit (* tolerance (* deficit -0.5)))) (log (/ (expm1 tolerance) (expm1 (+ tolerance 1.0))))))) (13184 1.2087856097815184 (/ tolerance (pow (/ tolerance (expm1 1.0)) deficit))) (64 1.7773368524719382 tolerance)))","end":0.025698120312590146,"end-est":0.02734375,"identifier":"#f","input":"(log (+ (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))) 1.0))","link":"1353935bd9adef37b553f8579062de8b4b5f1882.1.6","name":"log(exp(log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)) + 1)","output":"(log1p (/ (expm1 tolerance) (pow (/ (expm1 tolerance) (expm1 (+ tolerance 1.0))) deficit)))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 deficit) (<= deficit 20.0)))","prec":"binary64","preprocess":"()","spec":"(log (+ (exp (+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))) 1.0))","start":8.129531074218365,"start-est":8.028785853189179,"status":"imp-start","target":false,"target-prog":"#f","time":9360.096435546875,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((32960 5.543541933162652) (32576 0.06020772226222149) ((27200 0.1811403280102377 (+ (log (expm1 tolerance)) (* deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))))) (26304 0.9701550209386754 (+ (log (expm1 tolerance)) (* deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) tolerance))))) (26048 1.0172751028667768 (+ (log (expm1 tolerance)) (* deficit (log (/ (expm1 1.0) tolerance))))) (21696 8.667873146803306 (+ (* deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (log (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (20544 9.304131972848696 (+ (* deficit (log (/ (expm1 1.0) tolerance))) (log (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (19648 38.872503247552444 (+ (* deficit (log (/ (expm1 1.0) tolerance))) (log tolerance)))))","end":0.06020772226222149,"end-est":0.0546875,"identifier":"#f","input":"(+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))","link":"8b3744de7996cf9e33a58c2f11b2dfb96b567bd8.1.6","name":"log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*deficit + log(exp(tolerance) - 1)","output":"(+ (* (log (/ (expm1 (+ tolerance 1.0)) (expm1 tolerance))) deficit) (log (expm1 tolerance)))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 deficit) (<= deficit 20.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) deficit) (log (- (exp tolerance) 1.0)))","start":5.543541933162652,"start-est":5.46276812898828,"status":"imp-start","target":false,"target-prog":"#f","time":15827.522705078125,"vars":["tolerance","deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((32960 5.543541933162652) (32576 0.06020772226222149) ((27200 0.1811403280102377 (+ (log (expm1 tolerance)) (* humidity_deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))))) (26304 0.9701550209386754 (+ (log (expm1 tolerance)) (* humidity_deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) tolerance))))) (26048 1.0172751028667768 (+ (log (expm1 tolerance)) (* humidity_deficit (log (/ (expm1 1.0) tolerance))))) (21696 8.667873146803306 (+ (* humidity_deficit (log (/ (+ (exp (+ tolerance 1.0)) -1.0) (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (log (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (20544 9.304131972848696 (+ (* humidity_deficit (log (/ (expm1 1.0) tolerance))) (log (+ tolerance (* (* tolerance tolerance) (+ 0.5 (* tolerance (+ (* tolerance 0.041666666666666664) 0.16666666666666666)))))))) (19648 38.872503247552444 (+ (* humidity_deficit (log (/ (expm1 1.0) tolerance))) (log tolerance)))))","end":0.06020772226222149,"end-est":0.0546875,"identifier":"#f","input":"(+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) humidity_deficit) (log (- (exp tolerance) 1.0)))","link":"48e15d66cf220ee5d39385e830ed3746a731f3e5.1.6","name":"log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))*humidity_deficit +  log(exp(tolerance) - 1)","output":"(+ (* (log (/ (expm1 (+ tolerance 1.0)) (expm1 tolerance))) humidity_deficit) (log (expm1 tolerance)))","pre":"(and (and (<= 1e-5 tolerance) (<= tolerance 0.1)) (and (<= 0.0 humidity_deficit) (<= humidity_deficit 20.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0))) humidity_deficit) (log (- (exp tolerance) 1.0)))","start":5.543541933162652,"start-est":5.46276812898828,"status":"imp-start","target":false,"target-prog":"#f","time":8578.385498046875,"vars":["tolerance","humidity_deficit"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 5.442152664441638) (19648 0.115625) ((19584 0.1045 (- (log (/ (expm1 tolerance) (expm1 (+ 1.0 tolerance)))))) (19520 0.108125 (log (/ (expm1 (+ 1.0 tolerance)) (expm1 tolerance)))) (13632 7.197333211367098 (log (* (expm1 (+ 1.0 tolerance)) (+ (+ (* tolerance 0.08333333333333333) (/ 1.0 tolerance)) -0.5)))) (13376 26.148981828546695 (log (* (expm1 (+ 1.0 tolerance)) (+ (/ 1.0 tolerance) -0.5)))) (13184 38.703628686919025 (- (log (/ tolerance (expm1 (+ 1.0 tolerance)))))) (13120 38.7036286869188 (log (/ (expm1 (+ 1.0 tolerance)) tolerance))) (13056 39.81055334056788 (- (log (/ tolerance (expm1 1.0))))) (12992 39.810553340568156 (log (/ (expm1 1.0) tolerance)))))","end":0.115625,"end-est":0.08984375,"identifier":"#f","input":"(log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0)))","link":"c5fbd9409b392b0d2f0aee09871edb1c3e09e469.1.6","name":"log((exp(1 + tolerance) - 1) / (exp(tolerance) - 1))","output":"(log (* (/ 1.0 (expm1 tolerance)) (expm1 (+ 1.0 tolerance))))","pre":"(and (<= 1e-5 tolerance) (<= tolerance 0.1))","prec":"binary64","preprocess":"()","spec":"(log (/ (- (exp (+ 1.0 tolerance)) 1.0) (- (exp tolerance) 1.0)))","start":5.442152664441638,"start-est":5.554704721153626,"status":"imp-start","target":false,"target-prog":"#f","time":6026.154052734375,"vars":["tolerance"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.012698120312590145) (7616 0.01325) ((7232 0.012698120312590145 (* 611.21 (exp (* (- 18.678 (/ temperature 234.5)) (/ temperature (+ temperature 257.14)))))) (6976 0.32070747524743776 (* 611.21 (exp (* temperature (+ 0.07263747374970833 (* temperature -0.00029906613546629135)))))) (704 0.3932201725307834 (+ (* temperature 44.396750330559236) (+ 611.21 (* (* temperature temperature) 1.4296416806958236)))) (320 0.6252494233727086 (+ 611.21 (* temperature 44.396750330559236))) (64 1.3274407520094116 611.21)))","end":0.01325,"end-est":0.0234375,"identifier":"#f","input":"(* 611.21 (exp (* (- 18.678 (/ temperature 234.5)) (/ temperature (+ 257.14 temperature)))))","link":"1b1a1d8be382e77b479351bb7821074b866d5f17.1.6","name":"611.21 * exp(((18.678 - temperature / 234.5) * (temperature / (257.14 + temperature))))","output":"(* 611.21 (exp (* (- 18.678 (/ temperature 234.5)) (* (/ temperature (- 66120.97959999999 (* temperature temperature))) (- 257.14 temperature)))))","pre":"(and (<= -10.0 temperature) (<= temperature 40.0))","prec":"binary64","preprocess":"()","spec":"(* 611.21 (exp (* (- 18.678 (/ temperature 234.5)) (/ temperature (+ 257.14 temperature)))))","start":0.012698120312590145,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":5228.73779296875,"vars":["temperature"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.155875) (13184 0.01225) ((6912 1.0276220005947176 (+ (pow x -0.5) (+ 1.0 (* x 0.5)))) (6656 1.3875285927542158 (+ 1.0 (pow x -0.5))) (320 59.48952089508532 (+ 1.0 (* x 0.5))) (64 59.50340333425866 1.0)))","end":0.01225,"end-est":0.01171875,"identifier":"#f","input":"(+ (sqrt (+ x 1.0)) (sqrt (/ 1.0 x)))","link":"e65491a70c8ff3dcafd0279a6236a66e60f51fa2.1.6","name":"sqrt(x+1) + sqrt(1/x)","output":"(+ (sqrt (+ x 1.0)) (pow x -0.5))","pre":"(and (<= -1000000000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (+ x 1.0)) (sqrt (/ 1.0 x)))","start":0.155875,"start-est":0.14453125,"status":"ex-start","target":false,"target-prog":"#f","time":4445.05908203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sqrt x)","link":"1ebb076011b7cb844d96f93f999bc2340a900911.1.6","name":"sqrt(x)","output":"(sqrt x)","pre":"(and (<= 1.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(sqrt x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1285.50341796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.01675) (13056 0.01675) ((960 0.7964436807554853 (+ (* (* x (* x -0.020833333333333332)) (* x x)) (* (* x x) 0.25))) (320 1.0536339418224296 (* x (* x 0.25)))))","end":0.01675,"end-est":0.015625,"identifier":"#f","input":"(pow (sin (/ x 2.0)) 2.0)","link":"7acc6b9f1f2ff50c0e7d60b06eeffda4f1dab410.1.6","name":"sin(x/2)^2","output":"(pow (sin (/ x 2.0)) 2.0)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(pow (sin (/ x 2.0)) 2.0)","start":0.01675,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":5413.073486328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.011448120312590146) (6784 0.006573120312590144) ((916 15.111696430032335 (if (<= d 9.580838827093351e-129) (* a b) (if (<= d 3.75795376259592e-117) (* d (- c)) (if (<= d 3.9439508893004044e-101) (* a b) (if (<= d 7.522181023938109e-84) (* d (- c)) (if (<= d 2.478102292507533e-76) (* a b) (* d (- c)))))))) (448 0.011448120312590146 (- (* a b) (* c d))) (192 23.215575600473493 (* a b))))","end":0.006573120312590144,"end-est":0.00390625,"identifier":"#f","input":"(- (* a b) (* c d))","link":"c8780cbf220bad6d84f25a59a53ee1496c2b62c0.1.6","name":"a*b-c*d","output":"(fma c (- d) (* a b))","pre":"(and (and (and (and (<= 0.0 a) (<= a 1.0)) (and (<= 0.0 b) (<= b 1.0))) (and (<= 0.0 c) (<= c 1.0))) (and (<= 0.0 d) (<= d 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (* a b) (* c d))","start":0.011448120312590146,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":3723.226318359375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 29.089221911685442) (13248 0.01275) ((1088 0.7964436807554853 (* 0.5 (+ (* (* x x) (* x (* x -0.041666666666666664))) (* 0.5 (* x x))))) (832 0.8022047866272997 (* 0.5 (* x (* x (+ 0.5 (* x (* x -0.041666666666666664))))))) (320 1.0536339418224296 (* x (* x 0.25)))))","end":0.01275,"end-est":0.00390625,"identifier":"#f","input":"(* (/ 1.0 2.0) (- 1.0 (cos x)))","link":"7f533da823ffe06a66aaec9b3d9da48ad8af6814.1.6","name":"1/2 (1 - cos(x))","output":"(* (sin x) (* (tan (/ x 2.0)) 0.5))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (- 1.0 (cos x)))","start":29.089221911685442,"start-est":30.065450859795455,"status":"imp-start","target":false,"target-prog":"#f","time":10616.8310546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.4654607313005003) (448 0.3356629703154748) ((516 50.382638235189546 (if (<= x 0.048) (/ (- y) (* h d)) (/ (/ x d) h))) (448 0.34791052656439303 (/ (/ (- x y) d) h)) (320 55.16359984044583 (/ (/ x d) h))))","end":0.3356629703154748,"end-est":0.31640625,"identifier":"#f","input":"(/ (- (/ x d) (/ y d)) h)","link":"b6a60b054212a97bfdeaeebab8325ac6c626fc77.1.6","name":"(x/d - y/d)/h","output":"(/ (/ (- x y) h) d)","pre":"(and (and (and (and (<= 0.0001 x) (<= x 10.0)) (and (<= 0.0001 d) (<= d 1.0))) (and (<= 0.0001 y) (<= y 10.0))) (and (<= 0.0001 h) (<= h 0.1)))","prec":"binary64","preprocess":"()","spec":"(/ (- (/ x d) (/ y d)) h)","start":0.4654607313005003,"start-est":0.43956260433157485,"status":"ex-start","target":false,"target-prog":"#f","time":6193.6435546875,"vars":["x","d","y","h"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.254375) (320 0.260875) ((320 0.256125 (/ x (* h d)))))","end":0.260875,"end-est":0.28125,"identifier":"#f","input":"(/ (/ x d) h)","link":"5bbffbb34cc0156b3f108154083c72a4a0213d58.1.6","name":"(x/d) / h","output":"(/ (/ x h) d)","pre":"(and (and (and (<= 0.0001 x) (<= x 1.0)) (and (<= 0.0001 d) (<= d 1.0))) (and (<= 0.001 h) (<= h 0.01)))","prec":"binary64","preprocess":"()","spec":"(/ (/ x d) h)","start":0.254375,"start-est":0.26171875,"status":"ex-start","target":false,"target-prog":"#f","time":3550.04296875,"vars":["x","d","h"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.6829234679301018) (19904 0.5514821484803218) ((13504 0.5625932391083872 (/ (+ x (- 1.0 x)) (+ (sqrt x) (sqrt (+ x 1.0))))) (13120 0.6829234679301018 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 26.090321047126956 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (6848 26.679874595005657 (+ (* x 0.5) (- 1.0 (sqrt x)))) (6848 26.676800269516175 (+ 1.0 (- (* x 0.5) (sqrt x)))) (6848 26.68743533905934 (- (+ 1.0 (* x 0.5)) (sqrt x))) (64 46.99536436069706 1.0)))","end":0.5514821484803218,"end-est":0.5062676269897464,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"24989c84c9dbf4785179070b877e75b848b62771.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (exp (* (log1p x) 0.5)) (sqrt x)))","pre":"(and (<= 1e-8 x) (<= x 10.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.6829234679301018,"start-est":0.6704335340653761,"status":"ex-start","target":false,"target-prog":"#f","time":4944.693359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.026274959043104545) (13248 0.01414624062518029) ((6976 0.022524959043104545 (+ (* a2 b2) (fma a3 b3 (* a1 b1)))) (1644 30.580742763123354 (if (<= b1 -3.9051289414490135e-128) (* a1 b1) (if (<= b1 -2.6516075145045055e-234) (* a3 b3) (if (<= b1 -3.565504585512968e-285) (* a2 b2) (if (<= b1 1.0439488802069849e-285) (* a3 b3) (if (<= b1 4.377838190219483e-215) (* a2 b2) (if (<= b1 3.7579911273868207e-196) (* a3 b3) (if (<= b1 1.187129585538344e-163) (* a2 b2) (if (<= b1 1.6074020999116723e-82) (* a3 b3) (if (<= b1 1.6050320026483795e-66) (* a1 b1) (if (<= b1 4.5176145059163775e-60) (* a3 b3) (if (<= b1 9.955760451146154e-43) (* a2 b2) (* a1 b1))))))))))))) (968 10.891772027900368 (if (<= (* a3 b3) -4.50855364555302e-236) (* a3 b3) (if (<= (* a3 b3) 2.055456786274578e-198) (+ (* a2 b2) (* a1 b1)) (* a3 b3)))) (968 7.263901591361795 (if (<= (* a1 b1) -5.264963204472222e-291) (+ (* a2 b2) (* a1 b1)) (if (<= (* a1 b1) 3.3741524866113716e-238) (+ (* a2 b2) (* a3 b3)) (+ (* a2 b2) (* a1 b1))))) (968 6.686203475734334 (if (<= (* a3 b3) -3.560962785669186e-291) (+ (* a1 b1) (* a3 b3)) (if (<= (* a3 b3) 1.7302150274082178e-282) (+ (* a2 b2) (* a1 b1)) (+ (* a1 b1) (* a3 b3))))) (712 25.064276215193065 (if (<= (* a1 b1) -8.966091972535341e-278) (* a1 b1) (if (<= (* a1 b1) 1.1033854478009372e-246) (* a2 b2) (* a1 b1)))) (704 0.026274959043104545 (+ (* a2 b2) (+ (* a1 b1) (* a3 b3)))) (192 36.28241091365359 (* a2 b2))))","end":0.01414624062518029,"end-est":0,"identifier":"#f","input":"(+ (+ (* a1 b1) (* a2 b2)) (* a3 b3))","link":"8a482ec98e59633c11b939cbc6dab3c354167398.1.6","name":"a1 * b1 + a2 * b2 + a3 * b3","output":"(fma a3 b3 (fma a1 b1 (* a2 b2)))","pre":"(and (and (and (and (and (and (<= -1.0 a1) (<= a1 1.0)) (and (<= -1.0 b1) (<= b1 1.0))) (and (<= -1.0 a2) (<= a2 1.0))) (and (<= -1.0 b2) (<= b2 1.0))) (and (<= -1.0 a3) (<= a3 1.0))) (and (<= -1.0 b3) (<= b3 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* a1 b1) (* a2 b2)) (* a3 b3))","start":0.026274959043104545,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":7817.825439453125,"vars":["a1","b1","a2","b2","a3","b3"]},{"bits":128,"conversions":[],"cost-accuracy":"((1728 2.763983127621002) (1728 0.3508843792532099) ((2012 25.056441229175373 (if (<= low -2.4962143510939283e-90) (* (+ 3.0 (* -2.0 (/ (- low x) low))) (+ 1.0 (* -2.0 (/ x low)))) (if (<= low -7e-179) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (if (<= low 1.4e-255) (/ (/ (* x (+ 3.0 (* -2.0 (/ x high)))) high) (/ (- high low) (- x low))) (if (<= low 1e-192) (/ (* 3.0 (/ (- x low) high)) (/ (- high low) (- x low))) (if (<= low 2.4615535377403005e-158) (/ (+ 3.0 (/ (* (- x low) -2.0) (- high low))) (* (/ high x) (/ high x))) (if (<= low 3.368040219905428e-107) (* (+ 3.0 (* -2.0 (/ (- low x) low))) (+ 1.0 (* -2.0 (/ x low)))) (if (<= low 1.2041791694429167e-89) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (* (+ 3.0 (* -2.0 (/ (- low x) low))) (+ 1.0 (* -2.0 (/ x low)))))))))))) (2000 19.122066646168644 (if (<= x -5.8e-114) (* (/ (/ x (/ (- high low) x)) (- high low)) (+ 3.0 (/ (* (- x low) -2.0) (- high low)))) (if (<= x 6.225202841841098e-175) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (if (<= x 3.866398624406457e-145) (* (/ (/ x (/ (- high low) x)) (- high low)) (+ 3.0 (/ (* (- x low) -2.0) (- high low)))) (if (<= x 3e-114) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (* (/ (/ x (/ (- high low) x)) (- high low)) (+ 3.0 (/ (* (- x low) -2.0) (- high low))))))))) (1876 26.333164247796194 (if (<= high -1.2405244295599376e-122) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (if (<= high 1.9222618837023177e-130) (/ (* (- x low) (/ (- x low) (- high low))) (- high low)) (if (<= high 8.154318524768434e-107) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (if (<= high 7.331951576347377e-103) (+ (+ 1.0 (/ (* -2.0 (- high x)) low)) (/ (- x high) (/ low -2.0))) (if (<= high 8.469769209249287e-69) (/ (/ (* x (+ 3.0 (* -2.0 (/ x high)))) high) (/ (- high low) (- x low))) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))))))))) (1868 17.514691863506894 (if (<= low -7.05610456224033e-154) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (if (<= low 1e-200) (* (/ (* (- x low) (/ (- x low) (- high low))) (- high low)) (+ 3.0 (/ -2.0 (/ high x)))) (if (<= low 2.4615535377403005e-158) (* (/ (/ x (/ (- high low) x)) (- high low)) (+ 3.0 (/ (* (- x low) -2.0) (- high low)))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))))))) (1864 10.854353513813065 (if (<= low -1.129950211541822e-97) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (if (<= low 4.3423315783412367e-94) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (/ x (- high low))))) (/ (- high low) (- x low))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low)))))) (1864 10.480516005086008 (if (<= low -1.129950211541822e-97) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (if (<= low 2.4615535377403005e-158) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (/ x (- high low))))) (/ (- high low) (- x low))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (* (/ (- x low) (- high low)) (/ (- x low) (- high low))))))) (1864 10.510555640700291 (if (<= low -2.4962143510939283e-90) (/ (/ (* (- x low) (+ (* 2.0 (/ (- low x) low)) -3.0)) low) (/ (- high low) (- x low))) (if (<= low 2.4615535377403005e-158) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (/ x (- high low))))) (/ (- high low) (- x low))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (* (/ (- x low) (- high low)) (/ (- x low) (- high low))))))) (1864 10.376836210482322 (if (<= low -2.4962143510939283e-90) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (- 1.0 (/ x low))))) (/ (- high low) (- x low))) (if (<= low 2.4615535377403005e-158) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (/ x (- high low))))) (/ (- high low) (- x low))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (* (/ (- x low) (- high low)) (/ (- x low) (- high low))))))) (1864 10.374386832195492 (if (<= low -2.4962143510939283e-90) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (- 1.0 (/ x low))))) (/ (- high low) (- x low))) (if (<= low 2.4615535377403005e-158) (/ (* (/ (- x low) (- high low)) (+ 3.0 (* -2.0 (/ x (- high low))))) (/ (- high low) (- x low))) (* (/ (* (- x low) (/ (- x low) (- high low))) (- high low)) (+ 3.0 (/ (* low 2.0) (- high low))))))) (1748 26.49423475780998 (if (<= high -1.2405244295599376e-122) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (if (<= high 1.9222618837023177e-130) (* (+ 3.0 (* -2.0 (/ (- low x) low))) (+ 1.0 (* -2.0 (/ x low)))) (if (<= high 2.092018833407553e-106) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))) (if (<= high 5.648843025306922e-101) 1.0 (if (<= high 8.469769209249287e-69) (* (/ x (/ (* high high) x)) (+ 3.0 (/ (* x -2.0) high))) (* (- x low) (* 3.0 (/ (- x low) (* (- high low) (- high low))))))))))) (1728 0.6181569613509841 (/ (+ 3.0 (/ (* (- x low) -2.0) (- high low))) (* (/ (- high low) (- x low)) (/ (- high low) (- x low))))) (1620 27.050195350848174 (if (<= high -1.2405244295599376e-122) (/ (* 3.0 (/ (- x low) high)) (/ (- high low) (- x low))) (if (<= high 1.9222618837023177e-130) (+ 3.0 (/ (* (- x low) -2.0) (- high low))) (if (<= high 2.092018833407553e-106) (* (- x low) (* 3.0 (/ (- x low) (* high high)))) (if (<= high 5.648843025306922e-101) 1.0 (if (<= high 8.469769209249287e-69) (* (/ x (/ (* high high) x)) (+ 3.0 (/ (* x -2.0) high))) (* (- x low) (* 3.0 (/ (- x low) (* high high)))))))))) (1620 27.02989276829477 (if (<= high -1.2405244295599376e-122) (/ (* 3.0 (/ (- x low) high)) (/ (- high low) (- x low))) (if (<= high 1.9222618837023177e-130) (* (+ 3.0 (* -2.0 (/ (- low x) low))) (+ 1.0 (* -2.0 (/ x low)))) (if (<= high 2.092018833407553e-106) (* (- x low) (* 3.0 (/ (- x low) (* high high)))) (if (<= high 5.648843025306922e-101) 1.0 (if (<= high 8.469769209249287e-69) (* (/ x (/ (* high high) x)) (+ 3.0 (/ (* x -2.0) high))) (* (- x low) (* 3.0 (/ (- x low) (* high high)))))))))) (1608 18.732157673116593 (if (<= low -5e-190) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low))) (if (<= low 1.85e-213) (/ (/ (* x (+ 3.0 (* -2.0 (/ x high)))) high) (/ (- high low) (- x low))) (* (+ 3.0 (/ (* low 2.0) (- high low))) (/ (/ low (/ (- high low) low)) (- high low)))))) (1096 26.796392993125373 (if (<= high -1.2405244295599376e-122) (* (- x low) (* 3.0 (/ (- x low) (* high high)))) (if (<= high 1.9222618837023177e-130) 1.0 (* (- x low) (* 3.0 (/ (- x low) (* high high))))))) (1096 26.848086854743197 (if (<= high -1.2405244295599376e-122) (* (- x low) (* 3.0 (/ (- x low) (* high high)))) (if (<= high 1.9222618837023177e-130) (+ 3.0 (/ (* (- x low) -2.0) (- high low))) (* (- x low) (* 3.0 (/ (- x low) (* high high))))))) (1096 26.891102750499 (if (<= high -1.2405244295599376e-122) (/ (* 3.0 (/ (- x low) high)) (/ (- high low) (- x low))) (if (<= high 1.9222618837023177e-130) (+ 3.0 (/ (* (- x low) -2.0) (- high low))) (* (- x low) (* 3.0 (/ (- x low) (* high high))))))) (840 35.24097885629917 (if (<= high -2.9931535916851763e-44) (/ (* x (* x 3.0)) (* high high)) (if (<= high 9.939760240160738e-57) 1.0 (/ (* x (* x 3.0)) (* high high))))) (64 39.471346750106655 1.0)))","end":0.3508843792532099,"end-est":0.3282013672213043,"identifier":"#f","input":"(* (/ (* (/ (- x low) (- high low)) (- x low)) (- high low)) (- 3.0 (/ (* 2.0 (- x low)) (- high low))))","link":"e8619bc38c968b627d8198732198d145b2913806.1.6","name":"(x - low) / (high - low) * (x - low) / (high - low) * (3.0 - 2.0 * (x - low) / (high - low))","output":"(/ (* (/ (- x low) (- high low)) (+ 3.0 (/ (* (- x low) -2.0) (- high low)))) (/ (- high low) (- x low)))","pre":"(and (and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 low) (<= low 1000.0))) (and (<= -1000.0 high) (<= high 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ (* (/ (- x low) (- high low)) (- x low)) (- high low)) (- 3.0 (/ (* 2.0 (- x low)) (- high low))))","start":2.763983127621002,"start-est":2.044666647519589,"status":"imp-start","target":false,"target-prog":"#f","time":35997.572265625,"vars":["x","low","high"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.014875) (6720 0.000375) ((584 11.665417619860307 (if (<= t 5.056748673378815e-30) y (if (<= t 1.0668444624730014e-9) (* t x) (- y (* t y))))) (452 1.1537840515122686 (if (<= t 1.0668444624730014e-9) (+ y (* t x)) (- y (* t y)))) (448 0.008790241011860921 (+ y (* t (- x y)))) (324 11.571085954541172 (if (<= t 5.056748673378815e-30) y (* t x))) (64 11.865743074627218 y)))","end":0.000375,"end-est":0,"identifier":"#f","input":"(+ (* t x) (* (- 1.0 t) y))","link":"8f0e60e2f063b65f2515fe0e585da38d3a5f3b8c.1.6","name":"t * x + (1 - t) * y","output":"(fma t (- x y) y)","pre":"(and (and (and (<= 0.0 t) (<= t 1.0)) (and (<= -1000000000.0 x) (<= x 1000000000.0))) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* t x) (* (- 1.0 t) y))","start":0.014875,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":3602.906005859375,"vars":["t","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.03504024101186092) (448 0.03504024101186092) ((584 17.515367975789733 (if (<= x -1.6179844211282602e-150) (+ x (/ x t)) (if (<= x 1.1529828377494938e-101) (/ (- y) t) (+ x (/ x t))))) (520 18.098266936906032 (if (<= x -1.6179844211282602e-150) (/ x t) (if (<= x 1.1529828377494938e-101) (/ (- y) t) (/ x t)))) (192 32.09174807935823 (/ x t)) (64 61.77344518861538 x)))","end":0.03504024101186092,"end-est":0.01171875,"identifier":"#f","input":"(+ x (/ (- x y) t))","link":"2ea283129b392e7d44e5f1bec15ed04543f919f7.1.6","name":"x + (x - y) / t","output":"(+ x (/ (- x y) t))","pre":"(and (and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0))) (and (<= -1000.0 t) (<= t 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- x y) t))","start":0.03504024101186092,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":4253.06689453125,"vars":["x","y","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((26112 7.1219222809458875) (6528 1.0595463788133141) ((972 13.572695786670506 (if (<= x -7.41918973052697e-144) (- (/ (* z z) (/ x -0.5)) x) (if (<= x -2.2005558476012688e-172) z (if (<= x -7.1775883380989205e-186) (- (/ (* z z) (/ x -0.5)) x) z)))) (524 13.75190672366313 (if (<= x -7.41918973052697e-144) (- x) (if (<= x -2.2005558476012688e-172) z (if (<= x -7.1775883380989205e-186) (- x) z)))) (64 30.971383797348118 z)))","end":1.0595463788133141,"end-est":22.27256560638602,"identifier":"#f","input":"(sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0)))","link":"c15fcc346c0a94c19a758343fe0a04fec5e0e989.1.6","name":"sqrt(x^2 + y^2 + z^2)","output":"(hypot z x)","pre":"(and (and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0))) (and (<= -1.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0)))","start":7.1219222809458875,"start-est":7.990651379077787,"status":"imp-start","target":false,"target-prog":"#f","time":6020.14794921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.0055) (6720 0.0055) ())","end":0.0055,"end-est":0.00390625,"identifier":"#f","input":"(* 2.0 (atan (/ y x)))","link":"051d962d47c946c5cc412b8e0a6f2352f1927759.1.6","name":"2*atan(y/x)","output":"(* 2.0 (atan (/ y x)))","pre":"(and (and (<= 0.0 y) (<= y 1.0)) (and (<= -1.0 x) (<= x 1.0)))","prec":"binary64","preprocess":"()","spec":"(* 2.0 (atan (/ y x)))","start":0.0055,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2355.310546875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19264 2.8428987807271064) (58304 2.877551000221485) ((32192 2.8511450927729687 (log1p (log1p (expm1 (+ (sin (exp x)) -1.0))))) (19392 2.844840912647653 (log1p (+ (sin (exp x)) -1.0))) (19264 2.8428987807271064 (log (sin (exp x)))) (12992 51.45393975292924 (log (sin (+ x 1.0)))) (12864 52.776412008048 (log (sin 1.0)))))","end":2.877551000221485,"end-est":2.9918832653740113,"identifier":"#f","input":"(log (sin (exp x)))","link":"a491e1e75c1ddd84d971563e5c05740b01eb9354.1.6","name":"log(sin(exp(x)))","output":"(log1p (/ (+ (pow (sin (exp x)) 3.0) -1.0) (+ (pow (sin (exp x)) 2.0) (+ (sin (exp x)) 1.0))))","pre":"(and (<= 0.1 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(log (sin (exp x)))","start":2.8428987807271064,"start-est":3.056322262363534,"status":"apx-start","target":false,"target-prog":"#f","time":5701.407958984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((32768 6.991976576311383) (13184 0.37158963469992917) ((6916 6.765925327182472 (if (<= x -2.3800940929407374e-190) (* 2.0 (atan (/ (- x) r))) (* 2.0 (atan (/ z r))))) (6720 21.736821859046838 (* 2.0 (atan (/ z r))))))","end":0.37158963469992917,"end-est":11.16413691935536,"identifier":"#f","input":"(* 2.0 (atan (/ (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))) r)))","link":"b15fd6091ac4f74dca23478b4607bf77b5e88d6e.1.6","name":"2*atan(sqrt(x^2 + y^2 + z^2)/r)","output":"(* 2.0 (atan (/ (hypot z x) r)))","pre":"(and (and (and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0))) (and (<= -1.0 z) (<= z 1.0))) (and (<= -1.0 r) (<= r 1.0)))","prec":"binary64","preprocess":"()","spec":"(* 2.0 (atan (/ (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))) r)))","start":6.991976576311383,"start-est":6.50162532552665,"status":"imp-start","target":false,"target-prog":"#f","time":7839.1865234375,"vars":["x","y","z","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((26240 7.301846285242301) (19584 0.19285620312590143) ((13248 0.24784436093777043 (* z (/ 1.0 (hypot x (hypot y z))))) (7364 11.436411124387183 (if (<= y 8.942483571354269e-163) (/ z (hypot z x)) (/ z (sqrt (+ (+ (* z z) (* y y)) (* x x)))))) (6920 8.567409797956286 (if (<= z -2.5390993365317127e-139) (/ z (hypot y z)) (if (<= z 2.75e-146) (/ z (hypot y x)) (/ z (hypot y z))))) (6788 16.31456293147331 (if (<= x -6.417076561979798e-98) (/ z (- x)) (/ z (hypot y z)))) (6788 14.69842002636614 (if (<= y 4.018831988191732e-156) (/ z (hypot z x)) (/ z (hypot y z)))) (652 36.667303731161404 (if (<= z -2.0031003901072066e-149) -1.0 (if (<= z -3.13799371532462e-275) (/ z y) (if (<= z 2.75e-146) (/ z (- x)) 1.0)))) (456 36.831628997772796 (if (<= z -2.0031003901072066e-149) -1.0 (if (<= z 3.13216059574209e-123) (/ z y) 1.0))) (196 40.456337600718555 (if (<= z -3.96934513301373e-307) -1.0 1.0)) (64 51.5648038602799 -1.0)))","end":0.19285620312590143,"end-est":0.19140625,"identifier":"#f","input":"(/ z (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","link":"98cf00380678d305e94aa9594a9cdce2ed0de6ae.1.6","name":"z/sqrt(x^2+y^2+z^2)","output":"(pow (/ (hypot z (hypot y x)) z) -1.0)","pre":"(and (and (and (<= -1.0 z) (<= z 1.0)) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ z (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","start":7.301846285242301,"start-est":6.267482715604326,"status":"imp-start","target":false,"target-prog":"#f","time":8836.026123046875,"vars":["z","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((26240 7.301846285242301) (19584 0.19273120312590142) ((13248 0.24796936093777044 (* y (/ 1.0 (hypot y (hypot z x))))) (7364 11.436411124387183 (if (<= z 8.942483571354269e-163) (/ y (hypot y x)) (/ y (sqrt (+ (+ (* y y) (* z z)) (* x x)))))) (6920 8.567409797956286 (if (<= y -2.5390993365317127e-139) (/ y (hypot z y)) (if (<= y 2.75e-146) (/ y (hypot z x)) (/ y (hypot z y))))) (6788 16.31456293147331 (if (<= x -6.417076561979798e-98) (/ y (- x)) (/ y (hypot z y)))) (6788 14.69842002636614 (if (<= z 4.018831988191732e-156) (/ y (hypot y x)) (/ y (hypot z y)))) (652 36.667303731161404 (if (<= y -2.0031003901072066e-149) -1.0 (if (<= y -3.13799371532462e-275) (/ y z) (if (<= y 2.75e-146) (/ y (- x)) 1.0)))) (456 36.831628997772796 (if (<= y -2.0031003901072066e-149) -1.0 (if (<= y 3.13216059574209e-123) (/ y z) 1.0))) (196 40.456337600718555 (if (<= y -3.96934513301373e-307) -1.0 1.0)) (64 51.5648038602799 -1.0)))","end":0.19273120312590142,"end-est":0.19140625,"identifier":"#f","input":"(/ y (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","link":"ef5bd400e6f500c45971b1697f4666d1660c7ef8.1.6","name":"y/sqrt(x^2+y^2+z^2)","output":"(pow (/ (hypot x (hypot y z)) y) -1.0)","pre":"(and (and (and (<= -1.0 y) (<= y 1.0)) (and (<= -1.0 x) (<= x 1.0))) (and (<= -1.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ y (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","start":7.301846285242301,"start-est":6.267482715604326,"status":"imp-start","target":false,"target-prog":"#f","time":8784.04296875,"vars":["y","x","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((26240 7.301846285242301) (19584 0.19273120312590142) ((13248 0.24784436093777043 (* x (/ 1.0 (hypot y (hypot z x))))) (7364 11.436411124387183 (if (<= z 8.942483571354269e-163) (/ x (hypot x y)) (/ x (sqrt (+ (+ (* y y) (* z z)) (* x x)))))) (6920 12.559432657415382 (if (<= x -1.6176036200966128e-125) -1.0 (if (<= x 1.4016285756095442e-121) (/ x (hypot z y)) 1.0))) (6920 8.567409797956286 (if (<= x -2.5390993365317127e-139) (/ x (hypot z x)) (if (<= x 2.75e-146) (/ x (hypot z y)) (/ x (hypot z x))))) (6788 14.69842002636614 (if (<= z 4.018831988191732e-156) (/ x (hypot x y)) (/ x (hypot z x)))) (652 36.667303731161404 (if (<= x -2.0031003901072066e-149) -1.0 (if (<= x -3.13799371532462e-275) (/ x z) (if (<= x 2.75e-146) (/ (- x) y) 1.0)))) (456 36.831628997772796 (if (<= x -2.0031003901072066e-149) -1.0 (if (<= x 3.13216059574209e-123) (/ x z) 1.0))) (196 40.456337600718555 (if (<= x -3.96934513301373e-307) -1.0 1.0)) (64 51.67694970795153 1.0)))","end":0.19273120312590142,"end-est":0.19140625,"identifier":"#f","input":"(/ x (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","link":"c81ce367a98b5a666a196c0fbc7793a3e49baada.1.6","name":"x/sqrt(x^2+y^2+z^2)","output":"(pow (/ (hypot y (hypot z x)) x) -1.0)","pre":"(and (and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0))) (and (<= -1.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ x (sqrt (+ (+ (pow x 2.0) (pow y 2.0)) (pow z 2.0))))","start":7.301846285242301,"start-est":6.267482715604326,"status":"imp-start","target":false,"target-prog":"#f","time":7784.40380859375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 14.590552957032262) (6656 0.015) ((588 36.90579623740515 (if (<= y 9.796168341956753e-213) (/ -1.0 x) (if (<= y 7.182266872583909e-135) (/ 1.0 y) (if (<= y 2.569270826257024e-128) (/ -1.0 x) (/ 1.0 y))))) (192 46.78321950698511 (/ -1.0 x))))","end":0.015,"end-est":0.015625,"identifier":"#f","input":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","link":"c05906b367e1a064590634e54954e3e1fee8e1bd.1.6","name":"1/sqrt(x*x+y*y)","output":"(/ 1.0 (hypot x y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","start":14.590552957032262,"start-est":14.388653584666265,"status":"imp-start","target":false,"target-prog":"#f","time":4342.77880859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 0.01) (19392 0.01) ())","end":0.01,"end-est":0.0078125,"identifier":"#f","input":"(/ (asin (sqrt x)) (sqrt x))","link":"7990a6a0d401dde7d556428347146790d0b35065.1.6","name":"asin(sqrt(x))/sqrt(x)","output":"(/ (asin (sqrt x)) (sqrt x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (asin (sqrt x)) (sqrt x))","start":0.01,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2876.38720703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19584 0) (13248 0) ((13184 0.21718713779365806 (acos (+ x (* 0.5 (pow x 3.0))))) (6464 0.39334052257192176 (acos x))))","end":0,"end-est":0,"identifier":"#f","input":"(acos (/ x (sqrt (- 1.0 (pow x 2.0)))))","link":"837d4c944f51c3465898802c0e1b2e0772c14c7e.1.6","name":"acos(x/sqrt(1-x^2))","output":"(acos (/ x (sqrt (- 1.0 (* x x)))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(acos (/ x (sqrt (- 1.0 (pow x 2.0)))))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2994.986328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1600 0.057969360937770435) (7616 0.04584436093777043) ((1480 3.1352007531919965 (if (<= B -2.955068047895561e-13) (* (- 1.0 t) (+ (* 2.0 (* t B)) (* (- 1.0 t) A))) (if (<= B 1.3479372316912636e+76) (+ (* t (* t C)) (* (- 1.0 t) (+ (* t B) (* (- 1.0 t) A)))) (* (- 1.0 t) (+ A (* t (- (* 2.0 B) A))))))) (1472 0.1015424812503606 (+ (+ (* t (* t C)) (* (- 1.0 t) A)) (* (+ B (- B A)) (* t (- 1.0 t))))) (1096 7.39851769460328 (if (<= A -2.3614118367417497e-266) (+ A (* t (+ (* 2.0 B) (* A -2.0)))) (if (<= A 1.3601746658968e-191) (* t (+ (* t C) (* 2.0 (- B (* t B))))) (+ A (* t (+ (* 2.0 B) (* A -2.0))))))) (1096 3.9754503855827763 (if (<= B -2.955068047895561e-13) (+ A (* t (+ (* 2.0 B) (* A -2.0)))) (if (<= B 1.3479372316912636e+76) (+ A (* t (+ (* t C) (* (- 1.0 t) B)))) (+ A (* t (+ (* 2.0 B) (* A -2.0))))))) (1096 3.5854005295115545 (if (<= B -1.3538660630010247e-73) (* (- 1.0 t) (+ A (* t (- (* 2.0 B) A)))) (if (<= B 1.3479372316912636e+76) (+ A (* t (+ (* t C) (* (- 1.0 t) B)))) (* (- 1.0 t) (+ A (* t (- (* 2.0 B) A))))))) (1096 3.5539736498241448 (if (<= B -1.3538660630010247e-73) (* (- 1.0 t) (+ (* 2.0 (* t B)) (* (- 1.0 t) A))) (if (<= B 1.3479372316912636e+76) (+ A (* t (+ (* t C) (* (- 1.0 t) B)))) (* (- 1.0 t) (+ A (* t (- (* 2.0 B) A))))))) (848 20.823029680286943 (if (<= B -4.4972071425522356e+201) (* B (* t 2.0)) (if (<= B 2.1607513810995955e+82) A (if (<= B 3.8594159225092943e+192) (* B (* t 2.0)) (if (<= B 2.4605076106288752e+262) A (* B (* t 2.0))))))) (840 16.995278656148884 (if (<= A -2.106237677281813e+50) A (if (<= A 1.207189449812924e-139) (* t (+ (* t C) (* 2.0 B))) A))) (840 14.013463804181386 (if (<= A -5.660748069686691e-141) (+ A (* t (* (- 1.0 t) B))) (if (<= A 1.207189449812924e-139) (* t (+ (* t C) (* 2.0 B))) (+ A (* t (* (- 1.0 t) B)))))) (704 7.557594919722952 (+ A (* t (+ (* 2.0 B) (* A -2.0))))) (64 22.16721833512242 A)))","end":0.04584436093777043,"end-est":0.04296875,"identifier":"#f","input":"(+ (* (- 1.0 t) (+ (* (- 1.0 t) A) (* t B))) (* t (+ (* (- 1.0 t) B) (* t C))))","link":"8beb7f0bd1a8d7118c9139668ab7c6cd511680ab.1.6","name":"(1-t)((1-t)A+t*B)+t*((1-t)*B + t*C)","output":"(fma t (* t C) (* (- 1.0 t) (+ (* 2.0 (* t B)) (* (- 1.0 t) A))))","pre":"(and (and (and (and (<= 0.0 t) (<= t 1.0)) (and (<= -1.79e+308 A) (<= A 1.79e+308))) (and (<= -1.79e+308 B) (<= B 1.79e+308))) (and (<= -1.79e+308 C) (<= C 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (* (- 1.0 t) (+ (* (- 1.0 t) A) (* t B))) (* t (+ (* (- 1.0 t) B) (* t C))))","start":0.057969360937770435,"start-est":0.05078125,"status":"ex-start","target":false,"target-prog":"#f","time":11212.093017578125,"vars":["t","A","B","C"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.085450897438) (13248 0.1667548875021635) ((26308 0.3428734331332031 (if (<= (- (sqrt (+ 1.0 x)) (sqrt x)) 4e-5) (* 0.5 (sqrt (/ 1.0 x))) (- (sqrt (+ 1.0 x)) (sqrt x)))) (6980 0.9731833408189547 (if (<= x 0.0007865835300043417) (+ 1.0 (- (* x 0.5) (sqrt x))) (* 0.5 (sqrt (/ 1.0 x))))) (6852 2.052130272641022 (if (<= x 0.0007865835300043417) 1.0 (* 0.5 (sqrt (/ 1.0 x))))) (64 31.34149409361164 1.0)))","end":0.1667548875021635,"end-est":0.170253759768442,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"e36763fd39018ad131d21dc0a26a6cda130a3b4c.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":30.085450897438,"start-est":29.69289157287601,"status":"imp-start","target":false,"target-prog":"#f","time":5755.8330078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.1667548875021635) (13248 0.1667548875021635) ((7108 0.999141926014769 (if (<= x 0.0007865835300043417) (/ 1.0 (+ (sqrt x) (+ 1.0 (* x 0.5)))) (* 0.5 (sqrt (/ 1.0 x))))) (6852 1.3182150412323934 (if (<= x 0.0007865835300043417) (/ 1.0 (+ 1.0 (sqrt x))) (* 0.5 (sqrt (/ 1.0 x))))) (6720 26.775270039171982 (/ 1.0 (+ 1.0 (sqrt x)))) (64 31.34149409361164 1.0)))","end":0.1667548875021635,"end-est":0.170253759768442,"identifier":"#f","input":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","link":"281271a29a698d7edd98efef06318f4702fe3ee7.1.6","name":"1/(sqrt(x+1) + sqrt(x))","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","start":0.1667548875021635,"start-est":0.170253759768442,"status":"ex-start","target":false,"target-prog":"#f","time":5525.6455078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 29.597713391648874) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ 1.0 x) x)","link":"6cfc73c04e7e24c266789bce8197252cbbabb54b.1.6","name":"(1 + x) - x","output":"1.0","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (+ 1.0 x) x)","start":29.597713391648874,"start-est":31.487565452605107,"status":"imp-start","target":false,"target-prog":"#f","time":1967.38134765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.935007467067572) (13376 0.9368512721420554) ((6528 3.5800709321357314 (pow 2.0 0.3333333333333333)) (6464 4.477765805288774 (cbrt 2.0)) (64 61.9980116963296 0.0)))","end":0.9368512721420554,"end-est":1.1797718348327177,"identifier":"#f","input":"(- (pow (+ (* x x) 2.0) (/ 1.0 3.0)) (pow (* x x) (/ 1.0 3.0)))","link":"042d3d524ed5724ab649f9f9bd95649062bfb259.1.6","name":"(x*x+2)^(1/3)-(x*x)^(1/3)","output":"(- (pow (+ (* x x) 2.0) 0.3333333333333333) (pow x 0.6666666666666666))","pre":"(and (<= 0.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ (* x x) 2.0) (/ 1.0 3.0)) (pow (* x x) (/ 1.0 3.0)))","start":0.935007467067572,"start-est":1.1797718348327177,"status":"ex-start","target":false,"target-prog":"#f","time":5649.59521484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26432 0.015740601562950724) (19776 0.015740601562950724) ((19712 0.02382841483991778 (+ (cbrt (fma x x 1.0)) (- 0.0 (pow x 0.6666666666666666)))) (13440 0.3052298954317444 (+ (fma x (* x 0.3333333333333333) 1.0) (- 0.0 (pow x 0.6666666666666666)))) (13440 0.30142605113345994 (+ (* x (* x 0.3333333333333333)) (- 1.0 (pow (cbrt x) 2.0)))) (6720 0.6945010972069005 (+ 1.0 (- (pow x 0.6666666666666666)))) (64 2.1078391359039643 1.0)))","end":0.015740601562950724,"end-est":0.015625,"identifier":"#f","input":"(- (pow (+ (pow x 2.0) 1.0) (/ 1.0 3.0)) (pow (pow x 2.0) (/ 1.0 3.0)))","link":"c2e991859bbd79a452edb9a8927e13b9a32050b8.1.6","name":"(x^2+1)^(1/3)-(x^2)^(1/3)","output":"(+ (pow (fma x x 1.0) 0.3333333333333333) (- 0.0 (pow x 0.6666666666666666)))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ (pow x 2.0) 1.0) (/ 1.0 3.0)) (pow (pow x 2.0) (/ 1.0 3.0)))","start":0.015740601562950724,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":6286.071044921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.196) (320 0.005875) ((64 41.063650526246235 x)))","end":0.005875,"end-est":0.0078125,"identifier":"#f","input":"(* x (- 1.0 y))","link":"a9614f864fcd936057ccda5e64c0b1a42c1799fa.1.6","name":"x*(1-y)","output":"(- x (* x y))","pre":"(and (and (<= -10.0 x) (<= x 10.0)) (and (<= 1e-6 y) (<= y 0.1)))","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 y))","start":0.196,"start-est":0.203125,"status":"ex-start","target":false,"target-prog":"#f","time":2080.330322265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.018125) (320 0.0027406015629507226) ())","end":0.0027406015629507226,"end-est":0,"identifier":"#f","input":"(/ (- x y) x)","link":"88e2d2b32c209a0484f157d91cbe7f62ec900ba7.1.6","name":"(x-y)/x","output":"(- 1.0 (/ y x))","pre":"(and (and (<= -10.0 x) (<= x 10.0)) (and (<= 1e-6 y) (<= y 0.1)))","prec":"binary64","preprocess":"()","spec":"(/ (- x y) x)","start":0.018125,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2206.1103515625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 10.501248347299924) (448 0.247922368752524) ((320 10.501373347299925 (/ a (* x x))) (320 0.180625 (/ (/ a x) x))))","end":0.247922368752524,"end-est":0.21875,"identifier":"#f","input":"(/ a (pow x 2.0))","link":"b66172169c4b5b8ec2c99e6dd386d3b35834ef70.1.6","name":"a/x^2","output":"(/ (/ 1.0 x) (/ x a))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ a (pow x 2.0))","start":10.501248347299924,"start-est":9.819446803091985,"status":"imp-start","target":false,"target-prog":"#f","time":5611.1630859375,"vars":["a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.6034351058829813) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ a (pow x 2.0))","link":"f1538504bba36d0bebd83542667a64c2e3fe38ad.1.6","name":"a/x^2","output":"(/ (/ a x) x)","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= 1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ a (pow x 2.0))","start":0.6034351058829813,"start-est":0.4342133319745968,"status":"ex-start","target":false,"target-prog":"#f","time":2246.6806640625,"vars":["a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 6.329414387984055) (6912 0.1695069349947643) ((704 0.47570745259090963 (/ 1.0 (* (/ x (/ a x)) (* x x)))) (704 0.192052281949694 (* (/ (/ 1.0 x) x) (/ a (* x x))))))","end":0.1695069349947643,"end-est":0.15529252930532605,"identifier":"#f","input":"(/ a (pow x 4.0))","link":"db043eb41e2602607f077993bb4e548a137a378b.1.6","name":"a/x^4","output":"(/ (pow x -2.0) (/ x (/ a x)))","pre":"(and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ a (pow x 4.0))","start":6.329414387984055,"start-est":7.548282125821585,"status":"imp-start","target":false,"target-prog":"#f","time":5701.804931640625,"vars":["a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.000625) (6656 0.000625) ())","end":0.000625,"end-est":0,"identifier":"#f","input":"(pow (- x 2.0) 9.0)","link":"d942c9453e824de72e3df71e151fe8f2a31fda47.1.6","name":"(x-2)^9","output":"(pow (+ x -2.0) 9.0)","pre":"(and (<= 1.94 x) (<= x 2.07))","prec":"binary64","preprocess":"()","spec":"(pow (- x 2.0) 9.0)","start":0.000625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2224.7080078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((2240 0.0860143804849488) (15168 0.08465556303414902) ((2240 0.0860143804849488 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (+ (* x (+ 2016.0 (* x (+ (* x (+ 144.0 (* x (+ x -18.0)))) -672.0)))) -4032.0)))) -4608.0)))) -512.0)) (2112 0.755774897256317 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (+ (* (+ (* x (+ 144.0 (* x (+ x -18.0)))) -672.0) (* x x)) -4032.0)))) -4608.0)))) -512.0)) (1856 6.174672845057451 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (+ (* x (+ 2016.0 (* x (+ (* x 144.0) -672.0)))) -4032.0)))) -4608.0)))) -512.0)) (1728 6.322208798333512 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (+ (* (* x x) (+ (* x 144.0) -672.0)) -4032.0)))) -4608.0)))) -512.0)) (1344 6.3670055549430815 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (+ -4032.0 (* x 2016.0))))) -4608.0)))) -512.0)) (1216 6.528759166587792 (+ (* x (+ 2304.0 (* x (+ (* x (+ 5376.0 (* x (* x 2016.0)))) -4608.0)))) -512.0)) (832 6.593908475956394 (+ (* x (+ 2304.0 (* x (+ -4608.0 (* x 5376.0))))) -512.0)) (320 6.994137773164893 (+ (* x 2304.0) -512.0)) (64 7.734705184738954 -512.0)))","end":0.08465556303414902,"end-est":0.06935502930532605,"identifier":"#f","input":"(- (* x (+ (* x (- (* x (+ (* x (- (* x (+ (* x (- (* x (+ (* x (- x 18.0)) 144.0)) 672.0)) 2016.0)) 4032.0)) 5376.0)) 4608.0)) 2304.0)) 512.0)","link":"28ad21e866a8bd9fc110d0c5678b7c796322c49c.1.6","name":"x*(x*(x*(x*(x*(x*(x*(x*(x - 18) + 144) - 672) + 2016) - 4032) + 5376) - 4608) + 2304) - 512","output":"(+ (* x (+ (* x (+ (* x (+ (* x (+ (* x (+ (* x (+ (+ (* x 144.0) (+ (* -18.0 (pow x 2.0)) (pow x 3.0))) -672.0)) 2016.0)) -4032.0)) 5376.0)) -4608.0)) 2304.0)) -512.0)","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (* x (+ (* x (- (* x (+ (* x (- (* x (+ (* x (- (* x (+ (* x (- x 18.0)) 144.0)) 672.0)) 2016.0)) 4032.0)) 5376.0)) 4608.0)) 2304.0)) 512.0)","start":0.0860143804849488,"start-est":0.08335878907376808,"status":"ex-start","target":false,"target-prog":"#f","time":8798.04443359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.07781286357862634) (6656 0.07781286357862634) ((6792 2.40861074411232 (if (<= x -14.644727040263147) (pow x 9.0) (if (<= x 5.3989353237297396e-8) (+ (+ (* -4608.0 (* x x)) (* x 2304.0)) -512.0) (pow x 9.0)))) (320 6.994137773164893 (+ (* x 2304.0) -512.0)) (64 7.734705184738954 -512.0)))","end":0.07781286357862634,"end-est":0.03278248993272953,"identifier":"#f","input":"(pow (- x 2.0) 9.0)","link":"ae205403fdbb64434e4fc950baf0f667e22ba3d3.1.6","name":"(x-2)^9","output":"(pow (+ x -2.0) 9.0)","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(pow (- x 2.0) 9.0)","start":0.07781286357862634,"start-est":0.03278248993272953,"status":"ex-start","target":false,"target-prog":"#f","time":4373.94384765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03200488750216349) (13120 0.03200488750216349) ((6848 0.6645821777985905 (+ (+ (sqrt x) (* x -0.5)) -1.0)) (6592 1.3935469025799763 (+ (sqrt x) -1.0)) (64 2.763851777179533 -1.0)))","end":0.03200488750216349,"end-est":0.025722509768442016,"identifier":"#f","input":"(- (sqrt x) (sqrt (+ x 1.0)))","link":"9d5cb8b1e5fbf09f2b4ae1086f5e83ff6eb0c07a.1.6","name":"sqrt(x) - sqrt(x+1)","output":"(- (sqrt x) (sqrt (+ x 1.0)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt x) (sqrt (+ x 1.0)))","start":0.03200488750216349,"start-est":0.025722509768442016,"status":"ex-start","target":false,"target-prog":"#f","time":4108.17138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.25377124062518025) (13056 0.015198120312590145) ((6912 0.2572406015629507 (* (cos x) (/ -1.0 (- (* y y))))) (6720 0.25377124062518025 (/ (cos x) (* y y))) (1344 1.968368293774519 (+ (/ 1.0 (* y y)) (* (* x (/ x (* y y))) (+ -0.5 (* x (* x 0.041666666666666664)))))) (320 2.3956448352057453 (/ (/ 1.0 y) y)) (320 2.3832800908282836 (/ 1.0 (* y y)))))","end":0.015198120312590145,"end-est":0.01171875,"identifier":"#f","input":"(/ (cos x) (* y y))","link":"a6a52f770743a724de629077c474a6cea51ecabe.1.6","name":"cos(x)/(y*y)","output":"(* (cos x) (pow y -2.0))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (cos x) (* y y))","start":0.25377124062518025,"start-est":0.26171875,"status":"ex-start","target":false,"target-prog":"#f","time":5567.081298828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03543648163704121) (13120 0.01666240100229841) ((6592 1.9419773843193486 (- 2.0 (sqrt x))) (64 4.4882918992043175 2.0)))","end":0.01666240100229841,"end-est":0.00390625,"identifier":"#f","input":"(+ (- 1.0 (sqrt x)) (cos x))","link":"ec922cfd6a7a7ca52faf9a27cec5932e44c63b41.1.6","name":"1 - sqrt(x) + cos(x)","output":"(- (+ (cos x) 1.0) (sqrt x))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(+ (- 1.0 (sqrt x)) (cos x))","start":0.03543648163704121,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3286.011474609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((54016 0.0450158193054026) (47616 0.04409880453297577) ())","end":0.04409880453297577,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (+ (- (+ (- (+ (- (+ (- 512.0) (* 2304.0 x)) (* 4608.0 (pow x 2.0))) (* 5376.0 (pow x 3.0))) (* 4032.0 (pow x 4.0))) (* 2016.0 (pow x 5.0))) (* 672.0 (pow x 6.0))) (* 144.0 (pow x 7.0))) (* 18.0 (pow x 8.0))) (pow x 9.0))","link":"bca8c53b17d65a511f64499cd536583a6e1693b4.1.6","name":"- 512 + 2304*x - 4608*x^2 + 5376*x^3 - 4032*x^4 + 2016*x^5 - 672*x^6 + 144*x^7 - 18*x^8 + x^9","output":"(+ (+ (+ (+ (+ (+ (+ (+ (+ -512.0 (* 2304.0 x)) (* x (* x -4608.0))) (* 5376.0 (pow x 3.0))) (* (pow x 4.0) -4032.0)) (* 2016.0 (pow x 5.0))) (* (pow x 6.0) -672.0)) (* 144.0 (pow x 7.0))) (* (pow x 8.0) -18.0)) (pow x 9.0))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (- (+ (- (+ (- (+ (- 512.0) (* 2304.0 x)) (* 4608.0 (pow x 2.0))) (* 5376.0 (pow x 3.0))) (* 4032.0 (pow x 4.0))) (* 2016.0 (pow x 5.0))) (* 672.0 (pow x 6.0))) (* 144.0 (pow x 7.0))) (* 18.0 (pow x 8.0))) (pow x 9.0))","start":0.0450158193054026,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":6752.458251953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.012133345241548361) (6720 0.0022259193652572006) ())","end":0.0022259193652572006,"end-est":0,"identifier":"#f","input":"(+ (- (pow x 2.0) (* 2.0 x)) 1.0)","link":"a97a5ca21804203e8aeae166ed4c90c5ceff49f1.1.6","name":"x^2-2*x+1","output":"(fma x (+ x -2.0) 1.0)","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(+ (- (pow x 2.0) (* 2.0 x)) 1.0)","start":0.012133345241548361,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1994.01806640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.031507549496407) (13248 0.1706817671895733) ((13120 30.031507549496407 (- (sqrt (+ 1.0 x)) (sqrt x))) (64 31.29056001129189 1.0)))","end":0.1706817671895733,"end-est":0.1171875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"5b79df46e780576ae0e722150f0c428bf9e86b70.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= 0.0 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":30.031507549496407,"start-est":30.227819832850194,"status":"imp-start","target":false,"target-prog":"#f","time":5711.269287109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03200488750216349) (13120 0.03200488750216349) ((7232 0.6989838110059358 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (6848 0.6726413737022738 (+ (* x 0.5) (- 1.0 (sqrt x)))) (64 2.763851777179533 1.0)))","end":0.03200488750216349,"end-est":0.025722509768442016,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"7d2e75d277736308a220911196d8a4c6a2031c1b.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03200488750216349,"start-est":0.025722509768442016,"status":"ex-start","target":false,"target-prog":"#f","time":4487.0947265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 19.893910805006698) (65864 0.6746559784940873) ((58952 0.7730106154510525 (if (<= (- (- (exp x) (sin x)) (cos x)) -0.1) (- (- (exp x) (cos x)) (sin x)) (if (<= (- (- (exp x) (sin x)) (cos x)) 4e-10) (* x (fma x (* x 0.3333333333333333) x)) (- (+ (- (+ (exp x) 1.0) (cos x)) -1.0) (sin x))))) (58696 0.7293662848084642 (if (<= (- (- (exp x) (sin x)) (cos x)) -0.1) (- (- (exp x) (cos x)) (sin x)) (if (<= (- (- (exp x) (sin x)) (cos x)) 4e-10) (* x (fma x (* x 0.3333333333333333) x)) (- (- (exp x) (cos x)) (sin x))))) (6980 19.26089379617531 (if (<= x -15590.342084766586) (- 1.0 (cos x)) (* x (fma x (* x 0.3333333333333333) x)))) (6724 19.887113648520092 (if (<= x -15590.342084766586) (- 1.0 (cos x)) (* x x))) (192 22.047142044312206 (* x x)) (64 60.79669057985835 x)))","end":0.6746559784940873,"end-est":0.16550623963390113,"identifier":"#f","input":"(- (- (exp x) (sin x)) (cos x))","link":"02f2caaf233f74e9ab9a1f2c352fb44116fc13e9.1.6","name":"exp(x)-sin(x)-cos(x)","output":"(if (<= (- (- (exp x) (sin x)) (cos x)) -0.1) (- (- (exp x) (cos x)) (sin x)) (if (<= (- (- (exp x) (sin x)) (cos x)) 0.005) (+ (* 0.002777777777777778 (pow x 6.0)) (+ (* 0.3333333333333333 (pow x 3.0)) (+ (* 0.0003968253968253968 (pow x 7.0)) (pow x 2.0)))) (- (+ (- (+ (exp x) 1.0) (cos x)) -1.0) (sin x))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (- (exp x) (sin x)) (cos x))","start":19.893910805006698,"start-est":18.24597598167486,"status":"imp-start","target":false,"target-prog":"#f","time":16401.5283203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 40.0507549569203) (6848 0.00825) ((64 21.06051124210681 1.0)))","end":0.00825,"end-est":0.01171875,"identifier":"#f","input":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","link":"9f6b3d3ee2c4ad1d431b7461875c0bb25a7bad72.1.6","name":"(exp(2*x)-1)/(2*x)","output":"(/ (/ (expm1 (+ x x)) 2.0) x)","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","start":40.0507549569203,"start-est":39.6580835538682,"status":"imp-start","target":false,"target-prog":"#f","time":5060.55078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 59.4848310602626) (6848 0.013875) ((192 1.1407404607974951 (+ x 1.0)) (64 1.8064703415860455 1.0)))","end":0.013875,"end-est":0.03515625,"identifier":"#f","input":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","link":"cb0dea4a7398cd7f2c41e7ff58cd933c0a678773.1.6","name":"(exp(2*x)-1)/(2*x)","output":"(/ (/ (expm1 (+ x x)) 2.0) x)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ (- (exp (* 2.0 x)) 1.0) (* 2.0 x))","start":59.4848310602626,"start-est":58.1905190615833,"status":"imp-start","target":false,"target-prog":"#f","time":5314.138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.00875) (704 0.006875) ((576 0.01225 (* (+ 1.0 x) (+ 1.0 (* x x)))) (320 0.3199749142776493 (/ 1.0 (- 1.0 x))) (192 0.6949362835114369 (+ 1.0 x)) (64 1.3930518300124766 1.0)))","end":0.006875,"end-est":0.0078125,"identifier":"#f","input":"(+ (+ (+ 1.0 x) (pow x 2.0)) (pow x 3.0))","link":"560316c07d17e1881f2b44c2b5f404ecb5515550.1.6","name":"1+x+x^2+x^3","output":"(+ (+ 1.0 x) (* (+ 1.0 x) (* x x)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ 1.0 x) (pow x 2.0)) (pow x 3.0))","start":0.00875,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":5028.759521484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 58.59470207813339) (33280 0.13849622530386171) ((26560 0.2143059102488585 (/ (- (- (* 0.3333333333333333 (pow x 4.0)) x) (pow x 2.0)) (+ (cos x) (sqrt (+ x 1.0))))) (7360 0.2544737790393283 (fma x -0.5 (* (* x x) (+ (* x (+ -0.0625 (* x 0.08072916666666667))) -0.375)))) (7232 0.26698808074861713 (* x (+ -0.5 (* x (+ -0.375 (* x (fma x 0.08072916666666667 -0.0625))))))) (7104 0.38616182900029644 (+ (* x (* x (fma x -0.0625 -0.375))) (* x -0.5))) (704 0.39682754009584764 (* x (+ -0.5 (* x (+ -0.375 (* x -0.0625)))))) (448 0.6225876073129457 (* x (+ -0.5 (* x -0.375)))) (192 1.376223145731129 (* x -0.5))))","end":0.13849622530386171,"end-est":0.3122466571101218,"identifier":"#f","input":"(- (cos x) (sqrt (+ x 1.0)))","link":"536263012cb72245be460d7e2c6488afdafa622d.1.6","name":"cos(x) - sqrt(x+1)","output":"(/ (- (- (+ (* -0.044444444444444446 (pow x 6.0)) (* 0.3333333333333333 (pow x 4.0))) x) (pow x 2.0)) (+ (cos x) (sqrt (+ x 1.0))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (cos x) (sqrt (+ x 1.0)))","start":58.59470207813339,"start-est":58.06207576394494,"status":"imp-start","target":false,"target-prog":"#f","time":8276.556640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.026936481637041213) (12992 0.026936481637041213) ())","end":0.026936481637041213,"end-est":0.0078125,"identifier":"#f","input":"(- (sin x) (sqrt x))","link":"4366a24a6f7888cd392212610d089a9dae605f72.1.6","name":"sin(x) - sqrt(x)","output":"(- (sin x) (sqrt x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sin x) (sqrt x))","start":0.026936481637041213,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3473.960693359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.00075) (6656 0.00075) ())","end":0.00075,"end-est":0,"identifier":"#f","input":"(pow (- x 2.0) 3.0)","link":"bd774c3db560f01b81c8758f864bbca6967069c0.1.6","name":"(x-2)^3","output":"(pow (+ x -2.0) 3.0)","pre":"(and (<= 1.9 x) (<= x 2.1))","prec":"binary64","preprocess":"()","spec":"(pow (- x 2.0) 3.0)","start":0.00075,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1848.516357421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13696 17.014387271595588) (72128 15.0309223886822) ((32512 14.977221237696094 (cbrt (pow (fma x (fma x x (fma x -6.0 12.0)) -8.0) 3.0))) (19648 14.977326685523009 (fma x (fma x x (fma x -6.0 12.0)) -8.0)) (13376 15.350902289105132 (+ (* x (fma x x (fma x -6.0 12.0))) -8.0)) (13248 15.664194344331667 (fma x (fma x (+ x -6.0) 12.0) -8.0)) (7296 16.325263955599578 (+ (+ (+ -8.0 (* x 12.0)) (* x (* x -6.0))) (pow x 3.0))) (7104 16.367487869738714 (+ (fma 12.0 x -8.0) (* (+ x -6.0) (* x x)))) (6980 56.07539182224339 (if (<= x 2.0) -8.0 (* x (fma x (+ x -6.0) 12.0)))) (6980 56.0658781329313 (if (<= x 2.0) (fma x (+ 12.0 (* x -6.0)) -8.0) (* x (fma x (+ x -6.0) 12.0)))) (6976 16.322338897487345 (fma x (+ 12.0 (* x (+ x -6.0))) -8.0)) (6660 56.07787112723605 (if (<= x 2.0) -8.0 (pow x 3.0))) (452 56.10458848688264 (if (<= x 2.0) -8.0 (+ -8.0 (* x 12.0)))) (324 56.11797707998366 (if (<= x 2.0) -8.0 (* x 12.0))) (64 58.36857185552833 -8.0)))","end":15.0309223886822,"end-est":14.811435841899831,"identifier":"#f","input":"(+ (- (+ (- 8.0) (* 12.0 x)) (* 6.0 (pow x 2.0))) (pow x 3.0))","link":"207241cc51fa6d75341539a3bfc8d11dea9b1e84.1.6","name":"- 8 + 12*x - 6*x^2 + x^3","output":"(cbrt (+ (* (* x (fma x x (fma x -6.0 12.0))) (pow (fma x (fma x x (fma x -6.0 12.0)) -8.0) 2.0)) (* -8.0 (pow (fma x (fma x x (fma x -6.0 12.0)) -8.0) 2.0))))","pre":"(and (<= 1.9 x) (<= x 2.1))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (- 8.0) (* 12.0 x)) (* 6.0 (pow x 2.0))) (pow x 3.0))","start":17.014387271595588,"start-est":16.7912530887074,"status":"imp-start","target":false,"target-prog":"#f","time":7610.4853515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((33792 37.08052967141333) (65216 35.842098102300106) ((52352 36.090890427512704 (fma (* x (fma x -160.0 240.0)) x (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (fma 60.0 (pow x 4.0) (fma x -192.0 64.0))))) (46080 36.18210639044157 (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (+ (fma 60.0 (pow x 4.0) (fma x -192.0 64.0)) (* (fma x -160.0 240.0) (* x x))))) (46080 36.127529597838254 (fma (* x (fma x -160.0 240.0)) x (+ (fma 60.0 (pow x 4.0) (fma x -192.0 64.0)) (+ (pow x 6.0) (* (pow x 5.0) -12.0))))) (46080 36.13243467230333 (fma (* x (fma x -160.0 240.0)) x (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (+ 64.0 (fma 60.0 (pow x 4.0) (* x -192.0)))))) (39936 36.36825253065951 (fma 1.0 (* (fma x -160.0 240.0) (* x x)) (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (+ 64.0 (+ (* x -192.0) (* 60.0 (pow x 4.0))))))) (39808 36.303408327592855 (fma (* x (fma x -160.0 240.0)) x (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (+ 64.0 (+ (* x -192.0) (* 60.0 (pow x 4.0))))))) (33728 37.029548511995294 (+ (pow x 6.0) (+ (+ (* 60.0 (pow x 4.0)) (+ (* -160.0 (pow x 3.0)) (fma 240.0 (* x x) (- 64.0 (* x 192.0))))) (* (pow x 5.0) -12.0)))) (33536 36.74276408420062 (+ (+ 64.0 (+ (* x -192.0) (* 60.0 (pow x 4.0)))) (fma x (* x (+ 240.0 (* x -160.0))) (fma (pow x 5.0) -12.0 (pow x 6.0))))) (27456 37.24146857877204 (+ (pow x 6.0) (+ (+ (* 60.0 (pow x 4.0)) (+ (* 240.0 (* x x)) (+ (* -160.0 (pow x 3.0)) (- 64.0 (* x 192.0))))) (* (pow x 5.0) -12.0)))) (27456 37.07994122079605 (+ (pow x 6.0) (+ (+ (* 60.0 (pow x 4.0)) (+ (- 64.0 (* x 192.0)) (+ (* -160.0 (pow x 3.0)) (* 240.0 (* x x))))) (* (pow x 5.0) -12.0)))) (6528 57.06641870117298 (pow x 6.0)) (64 57.07285456851399 64.0)))","end":35.842098102300106,"end-est":35.49923091602006,"identifier":"#f","input":"(+ (- (+ (- (+ (- 64.0 (* 192.0 x)) (* 240.0 (pow x 2.0))) (* 160.0 (pow x 3.0))) (* 60.0 (pow x 4.0))) (* 12.0 (pow x 5.0))) (pow x 6.0))","link":"34c7fee46192ba8b2624bad6773302642c25ec44.1.6","name":"64 - 192*x + 240*x^2 - 160*x^3 + 60*x^4 - 12*x^5 + x^6","output":"(sqrt (pow (fma x (* x (fma x -160.0 240.0)) (+ (fma (pow x 5.0) -12.0 (pow x 6.0)) (fma 60.0 (pow x 4.0) (fma x -192.0 64.0)))) 2.0))","pre":"(and (<= 1.9 x) (<= x 2.1))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (- (+ (- 64.0 (* 192.0 x)) (* 240.0 (pow x 2.0))) (* 160.0 (pow x 3.0))) (* 60.0 (pow x 4.0))) (* 12.0 (pow x 5.0))) (pow x 6.0))","start":37.08052967141333,"start-est":36.773680325539566,"status":"imp-start","target":false,"target-prog":"#f","time":12175.69970703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.0006981203125901445) (448 0.0016962319510413684) ((320 0.7018500429056739 (+ 1.0 (* x -2.0))) (64 1.4484068326794692 1.0)))","end":0.0016962319510413684,"end-est":0,"identifier":"#f","input":"(+ (- (pow x 2.0) (* 2.0 x)) 1.0)","link":"a644b8a34f61a4115cd9d05c1061d0d08b6f323e.1.6","name":"x^2-2*x+1","output":"(+ (* x (+ x -2.0)) 1.0)","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(+ (- (pow x 2.0) (* 2.0 x)) 1.0)","start":0.0006981203125901445,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3593.62548828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((47104 0.027469360937770436) (34432 0.027469360937770436) ())","end":0.027469360937770436,"end-est":0.03125,"identifier":"#f","input":"(+ (+ (+ (* 333.75 (pow y 6.0)) (* (pow x 2.0) (- (- (- (* (* 11.0 (pow x 2.0)) (pow y 2.0)) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))","link":"05b5a375637e59d74239593022fb5494d1c9bc9e.1.6","name":"333.75*y^6 + x^2 (11* x^2 *y^2 - y^6 - 121 *y^4 - 2) + 5.5* y^8 + x/(2y)","output":"(+ (+ (+ (* 333.75 (pow y 6.0)) (* (pow x 2.0) (+ (+ (- (* 11.0 (* y (* y (* x x)))) (pow y 6.0)) (* (pow y 4.0) -121.0)) -2.0))) (* 5.5 (pow y 8.0))) (/ x (* y 2.0)))","pre":"(and (and (<= -1000.0 y) (<= y 1000.0)) (and (<= -1000.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* 333.75 (pow y 6.0)) (* (pow x 2.0) (- (- (- (* (* 11.0 (pow x 2.0)) (pow y 2.0)) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))","start":0.027469360937770436,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":8682.568603515625,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.02325244375108174) (13248 0.02325244375108174) ((13248 0.016375 (+ (cos x) (+ (exp x) (* x -2.0)))) (6912 0.25156549348269563 (+ (* 0.16666666666666666 (pow x 3.0)) (- 2.0 x))) (192 0.3697059795574829 (- 2.0 x)) (64 1.3439057253311948 2.0)))","end":0.02325244375108174,"end-est":0.015625,"identifier":"#f","input":"(- (+ (exp x) (cos x)) (* 2.0 x))","link":"c8971c1b19580243a43625182d1e48d646110f70.1.6","name":"exp(x) + cos(x) -2*x","output":"(+ (+ (exp x) (cos x)) (* x -2.0))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (+ (exp x) (cos x)) (* 2.0 x))","start":0.02325244375108174,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":4682.0810546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.001875) (13120 0.001875) ())","end":0.001875,"end-est":0,"identifier":"#f","input":"(- (pow x 4.0) (pow y 4.0))","link":"b94b466bd3760cc0a6739e9d86bee2f754ceb943.1.6","name":"x^4-y^4","output":"(- (pow x 4.0) (pow y 4.0))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 4.0) (pow y 4.0))","start":0.001875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2425.915771484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 59.400334865946576) (6976 0) ((6592 0.05979536091327132 (fma x x x)) (64 0.6730286417281539 x)))","end":0,"end-est":0,"identifier":"#f","input":"(- (exp x) (cos x))","link":"990fb9b73c51af3758a82990ce819564f6375c90.1.6","name":"exp(x)-cos(x)","output":"(+ x (* x (* x (fma x 0.16666666666666666 1.0))))","pre":"(and (<= -1e-5 x) (<= x 1e-5))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (cos x))","start":59.400334865946576,"start-est":59.0266234067319,"status":"imp-start","target":false,"target-prog":"#f","time":6475.552734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 58.74919741596758) (20096 0.06874677585046145) ((13312 0.11453623451619015 (fma x x (+ x (* 0.16666666666666666 (pow x 3.0))))) (13248 0.12109906998432371 (* x (fma (fma x 0.16666666666666666 1.0) x 1.0))) (6592 0.4570156016163695 (fma x x x)) (64 1.2311488400435038 x)))","end":0.06874677585046145,"end-est":0.1810382721106443,"identifier":"#f","input":"(- (exp x) (cos x))","link":"780a92d6afdf916c43dd7fd5e6cde4193ef19283.1.6","name":"exp(x) - cos(x)","output":"(+ (* 0.16666666666666666 (pow x 3.0)) (+ (pow x 2.0) (+ x (* 0.008333333333333333 (pow x 5.0)))))","pre":"(and (<= -0.1 x) (<= x 0.1))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (cos x))","start":58.74919741596758,"start-est":58.28666145083115,"status":"imp-start","target":false,"target-prog":"#f","time":8236.755615234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 58.55076549772606) (12992 0.021448120312590146) ((6720 0.7092165682046527 (fma 1.5 (* x x) x)) (448 0.7092165682046527 (+ x (* x (* x 1.5)))) (64 1.429045376673476 x)))","end":0.021448120312590146,"end-est":0.015625,"identifier":"#f","input":"(- (exp (* 2.0 x)) (exp x))","link":"154527eea7cab6b447e6bf52d7ebaca5136dec0e.1.6","name":"exp(2*x)-exp(x)","output":"(* (exp x) (expm1 x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (exp (* 2.0 x)) (exp x))","start":58.55076549772606,"start-est":58.06369442825047,"status":"imp-start","target":false,"target-prog":"#f","time":24543.63623046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 58.70839673975063) (6592 0.004625) ((192 0.45636747413727574 (* 2.0 x))))","end":0.004625,"end-est":0.0078125,"identifier":"#f","input":"(- (exp x) (exp (- x)))","link":"de47316cefaaf3ced95fd961ed98dece9ed7f6ba.1.6","name":"exp(x)-exp(-x)","output":"(* 2.0 (sinh x))","pre":"(and (<= -0.1 x) (<= x 0.1))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (exp (- x)))","start":58.70839673975063,"start-est":58.236742010106745,"status":"imp-start","target":false,"target-prog":"#f","time":5989.409423828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 15.878182497584383) (320 0.029375) ((720 18.50436753749535 (if (<= b -1.598154353210837e-154) (/ -1.0 b) (if (<= b 2.0666405257979577e-187) (/ 1.0 a) (if (<= b 2.518346186660727e-153) (/ -1.0 b) (if (<= b 1.3801732630379562e-99) (/ 1.0 a) (/ -1.0 b)))))) (192 32.309264379579055 (/ 1.0 a))))","end":0.029375,"end-est":0.02734375,"identifier":"#f","input":"(/ (+ a b) (- (pow a 2.0) (pow b 2.0)))","link":"a5e7f1b458242e0e934a7e405018a3a5ff2565fc.1.6","name":"(a+ b)/(a^2-b^2)","output":"(/ 1.0 (- a b))","pre":"(and (and (<= -1.0 a) (<= a 1.0)) (and (<= -1.0 b) (<= b 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ a b) (- (pow a 2.0) (pow b 2.0)))","start":15.878182497584383,"start-est":15.851456527022638,"status":"imp-start","target":false,"target-prog":"#f","time":4821.670166015625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 58.48751493300108) (19968 0.43380907987416834) ((6976 0.5558816806485968 (* x (+ 3.0 (* x (fma x 1.5 1.5))))) (6848 0.7470152839388966 (fma 3.0 x (* 1.5 (* x x)))) (6720 0.8326006057196604 (* x (fma x 1.5 3.0))) (832 1.2085499194466258 (+ (* x 3.0) (+ (+ (* 1.5 (* x x)) 1.0) -1.0))) (192 1.4980555901610968 (* x 3.0))))","end":0.43380907987416834,"end-est":0.6606635408534881,"identifier":"#f","input":"(- (exp (* 2.0 x)) (exp (- x)))","link":"547a046316129c277ed40be74054399f34042528.1.6","name":"exp(2*x)-exp(-x)","output":"(fma x (fma x 1.5 3.0) (* (pow x 3.0) (+ 1.5 (* x 0.625))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (exp (* 2.0 x)) (exp (- x)))","start":58.48751493300108,"start-est":58.01752243144274,"status":"imp-start","target":false,"target-prog":"#f","time":7995.017578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 58.52184649823954) (6592 0.0075) ((704 0.22396174912342173 (+ (* x (* 0.3333333333333333 (* x x))) (* 2.0 x))) (192 0.626805059370874 (* 2.0 x))))","end":0.0075,"end-est":0.01171875,"identifier":"#f","input":"(- (exp x) (exp (- x)))","link":"71d7917e595a0394cd1c833893c0436a0ae34962.1.6","name":"exp(x)-exp(-x)","output":"(* 2.0 (sinh x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (exp (- x)))","start":58.52184649823954,"start-est":58.067558770490116,"status":"imp-start","target":false,"target-prog":"#f","time":5912.536376953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13312 32.66483471518043) (86548 6.252623142136773) ((73168 8.375788540763777 (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -5e-167) (- b (sqrt (- (* b b) (* b a)))) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -2e-309) (- b (- (* a 0.5) b)) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 0.0) (* a 0.5) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 2e-251) (* (sqrt b) (- (sqrt b) (sqrt (- b a)))) (fma a 0.5 (* (* a (/ a b)) (+ 0.125 (/ a (/ b 0.0625)))))))))) (66768 8.38156685531339 (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -5e-167) (- b (sqrt (- (* b b) (* b a)))) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -2e-309) (- b (- (* a 0.5) b)) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 0.0) (* a 0.5) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 2e-251) (- b (* (sqrt b) (sqrt (- b a)))) (fma a 0.5 (* (* a (/ a b)) (+ 0.125 (/ a (/ b 0.0625)))))))))) (8020 19.871303747438034 (if (<= b -2.4e-159) (- b (sqrt (* b (- b a)))) (if (<= b -3.2e-252) (- (* b 2.0) (* a 0.5)) (if (<= b 2.65e-275) (- b (sqrt (* b (- b a)))) (if (<= b 4e-227) (fma a 0.5 (* (* a (/ a b)) (+ 0.125 (/ a (/ b 0.0625))))) (if (<= b 5.7e-146) (- b (sqrt (* b (- b a)))) (fma a 0.5 (* (* a (/ a b)) (+ 0.125 (/ a (/ b 0.0625))))))))))) (7636 20.068683613083394 (if (<= b -2.4e-159) (- b (sqrt (* b (- b a)))) (if (<= b -3.2e-252) (- (* b 2.0) (* a 0.5)) (if (<= b 2.65e-275) (- b (sqrt (* b (- b a)))) (if (<= b 4e-227) (fma 0.5 a (* (* a (/ a b)) 0.125)) (if (<= b 5.7e-146) (- b (sqrt (* b (- b a)))) (fma 0.5 a (* (* a (/ a b)) 0.125)))))))) (7508 20.07085542210594 (if (<= b -2.4e-159) (- b (sqrt (* b (- b a)))) (if (<= b -3.2e-252) (- (* b 2.0) (* a 0.5)) (if (<= b 2.65e-275) (- b (sqrt (* b (- b a)))) (if (<= b 4e-227) (* a (+ 0.5 (/ 0.125 (/ b a)))) (if (<= b 5.7e-146) (- b (sqrt (* b (- b a)))) (* a (+ 0.5 (/ 0.125 (/ b a)))))))))) (7312 22.7686309516423 (if (<= b -3.2e-252) (- (* b 2.0) (* a 0.5)) (if (<= b 2.65e-275) (- b (sqrt (* b (- a)))) (if (<= b 4e-227) (* a (+ 0.5 (/ 0.125 (/ b a)))) (if (<= b 5.7e-146) (- b (sqrt (* b (- a)))) (* a (+ 0.5 (/ 0.125 (/ b a))))))))) (580 20.70032275503406 (if (<= b 0.0) (- (* b 2.0) (* a 0.5)) (* a 0.5))) (324 21.152458397053405 (if (<= b 0.0) (* b 2.0) (* a 0.5))) (192 40.871752599213096 (* b 2.0)) (64 60.653131976350615 0.0) (64 57.618514415733365 b)))","end":6.252623142136773,"end-est":3.9788153586028714,"identifier":"#f","input":"(- b (sqrt (- (pow b 2.0) (* a b))))","link":"737556d40acf4734d8ff8ff644177463fb7668d6.1.6","name":"b-sqrt(b^2-a*b)","output":"(if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -5e-167) (- b (sqrt (- (* b b) (* b a)))) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -4e-251) (- b (- (* a 0.5) b)) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) -2e-309) (- b (exp (* 0.5 (- (log (- b)) (log (/ 1.0 a)))))) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 0.0) (* a 0.5) (if (<= (- b (sqrt (- (pow b 2.0) (* b a)))) 2e-251) (* (sqrt b) (- (sqrt b) (sqrt (- b a)))) (fma a 0.5 (* (* a (/ a b)) (+ 0.125 (/ a (/ b 0.0625))))))))))","pre":"(and (and (<= -1.0 b) (<= b 1.0)) (and (<= -1.0 a) (<= a 1.0)))","prec":"binary64","preprocess":"()","spec":"(- b (sqrt (- (pow b 2.0) (* a b))))","start":32.66483471518043,"start-est":36.80181656713347,"status":"imp-start","target":false,"target-prog":"#f","time":11378.067626953125,"vars":["b","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.02452124062518029) (576 0.02452124062518029) ((516 2.7536055032182305 (if (<= min -1.8897828440964781e-180) (- (* r min) max) (/ (- max) (- 1.0 r)))) (448 2.6471969174463625 (- (* r (- min max)) max)) (320 12.39831031430405 (* max (- -1.0 r))) (320 2.9657625993253243 (- (* r min) max)) (128 61.37445372668988 (- min)) (128 12.706256410784281 (- max))))","end":0.02452124062518029,"end-est":0.015625,"identifier":"#f","input":"(/ (- (* r min) max) (- 1.0 r))","link":"585a0c51abafae5735d83c4bbbc718ca23312d8f.1.6","name":"(r * min - max) / (1 - r)","output":"(/ (- (* r min) max) (- 1.0 r))","pre":"(and (and (and (<= -1000000000.0 r) (<= r 1000000000.0)) (and (<= -1000000000.0 min) (<= min 0.0))) (and (<= 0.0 max) (<= max 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (* r min) max) (- 1.0 r))","start":0.02452124062518029,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3811.6611328125,"vars":["r","min","max"]},{"bits":128,"conversions":[],"cost-accuracy":"((512 0.10949060156295072) (6656 0.084875) ((512 0.10949060156295072 (/ (* (- x) (* x x)) 6.0)) (448 20.823379043652672 (* (* x x) (* x 0.16666666666666666)))))","end":0.084875,"end-est":0.07421875,"identifier":"#f","input":"(/ (* (* (- x) x) x) 6.0)","link":"7d3c3fb13dc9f2a5b9ebd292c6b48c8ad6e9cdbe.1.6","name":"(-x * x * x) / 6.0","output":"(/ (pow x 3.0) -6.0)","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* (* (- x) x) x) 6.0)","start":0.10949060156295072,"start-est":0.10775375976844202,"status":"ex-start","target":false,"target-prog":"#f","time":5219.5361328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.007625) (13184 0.000375) ((576 0.004875 (* x (+ 0.954929658551372 (* x (* x -0.12900613773279798))))) (192 0.6150075272822945 (* x 0.954929658551372))))","end":0.000375,"end-est":0,"identifier":"#f","input":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","link":"648f4394d7514642ecaf96ab2ef95cae82dae37f.1.6","name":"(0.954929658551372 * x) - (0.12900613773279798 * ((x * x) * x))","output":"(fma x 0.954929658551372 (* (pow x 3.0) -0.12900613773279798))","pre":"(and (<= -2.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","start":0.007625,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3838.903564453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.063375) (320 0.063375) ((64 47.793362584507044 1.0)))","end":0.063375,"end-est":0.06640625,"identifier":"#f","input":"(/ x (+ x 1.0))","link":"867fdf0661559dad9de79c1b1a104822ab947474.1.6","name":"x / ( x + 1)","output":"(/ x (+ x 1.0))","pre":"(and (<= 1.0 x) (<= x 999.0))","prec":"binary64","preprocess":"()","spec":"(/ x (+ x 1.0))","start":0.063375,"start-est":0.06640625,"status":"ex-start","target":false,"target-prog":"#f","time":3249.76416015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.338) (12928 0.272375) ((320 0.338 (/ 1.0 (+ x 1.0))) (192 51.60468495995068 (/ 1.0 x)) (64 52.44605089138719 1.0)))","end":0.272375,"end-est":0.296875,"identifier":"#f","input":"(/ 1.0 (+ x 1.0))","link":"463756ab053b32e4da17281f4d5b462c908b252e.1.6","name":"1.0 / (x + 1.0)","output":"(exp (- (log1p x)))","pre":"(and (<= 1.00001 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ x 1.0))","start":0.338,"start-est":0.34375,"status":"ex-start","target":false,"target-prog":"#f","time":2920.924072265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.7878683661784979) (6848 0.2945) ((832 0.35624304531403256 (/ (+ x -1.0) (+ (+ x -1.0) (* x (+ x -1.0))))) (320 0.338 (/ 1.0 (+ x 1.0))) (192 51.60468495995068 (/ 1.0 x)) (64 52.44605089138719 1.0)))","end":0.2945,"end-est":0.2578125,"identifier":"#f","input":"(/ (- x 1.0) (- (* x x) 1.0))","link":"7b748467a796b952dd87aff017a12c56141c4e02.1.6","name":"(x - 1) / (x * x - 1)","output":"(/ (+ x -1.0) (fma x x -1.0))","pre":"(and (<= 1.00001 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(/ (- x 1.0) (- (* x x) 1.0))","start":0.7878683661784979,"start-est":0.7962182976749517,"status":"ex-start","target":false,"target-prog":"#f","time":5257.60107421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.05083771853980772) (13504 0.06316541406655646) ((13120 0.05083771853980772 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 1.0683827163527382 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (6848 1.057857866110738 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.1299394119824195 1.0)))","end":0.06316541406655646,"end-est":0.046875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"2a0f180f21f82fe15f3cb3ee5defe225dac767fb.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 0.0 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.05083771853980772,"start-est":0.05403472661783102,"status":"ex-start","target":false,"target-prog":"#f","time":3481.153564453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 2.9614381067474644) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (sin x))","link":"01435b813b3719c2ad31229dfdb893c1ddf97c94.1.6","name":"(1.0 - cos(x)) / sin(x)","output":"(tan (/ x 2.0))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (sin x))","start":2.9614381067474644,"start-est":2.884336067728578,"status":"imp-start","target":false,"target-prog":"#f","time":2835.747314453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.4659384958272113) (39232 0.4358234624866384) ((32960 0.449189494439838 (+ (/ -1.0 (tan x)) (* (/ 1.0 (+ (tan x) (tan 1.0))) (- 1.0 (* (tan x) (tan 1.0)))))) (32832 0.4377091597227135 (+ (/ -1.0 (tan x)) (/ (- 1.0 (* (tan x) (tan 1.0))) (+ (tan x) (tan 1.0))))) (26304 0.4772768346774274 (fma (/ 1.0 (sin (+ 1.0 x))) (cos (+ 1.0 x)) (/ -1.0 (tan x)))) (13376 0.4659384958272113 (+ (/ -1.0 (tan x)) (/ 1.0 (tan (+ 1.0 x))))) (7364 44.450514442217006 (if (<= x 3.15) (+ (/ 1.0 (tan (+ 1.0 x))) (+ (* x 0.3333333333333333) (/ -1.0 x))) (/ -1.0 x))) (192 52.15083944807226 (/ -1.0 x))))","end":0.4358234624866384,"end-est":0.43750635976818997,"identifier":"#f","input":"(- (/ 1.0 (tan (+ x 1.0))) (/ 1.0 (tan x)))","link":"666c5ca11420ab4817ce811192ae82ef8c9d3230.1.6","name":"1.0 / tan(x + 1) - 1.0 / tan(x)","output":"(fma (/ 1.0 (+ (tan x) (tan 1.0))) (- 1.0 (* (tan x) (tan 1.0))) (/ -1.0 (tan x)))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (tan (+ x 1.0))) (/ 1.0 (tan x)))","start":0.4659384958272113,"start-est":0.5085003318085093,"status":"ex-start","target":false,"target-prog":"#f","time":7199.310546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 1.9391956931047978) (20416 0.4647351531460954) ((14144 0.5572560363691667 (/ 1.0 (/ (+ (pow x -0.5) (pow (+ 1.0 x) -0.5)) (/ (/ (+ 1.0 (- x x)) x) (+ 1.0 x))))) (13888 1.38167646242605 (/ (- (/ 1.0 x) (/ 1.0 (+ 1.0 x))) (+ (pow x -0.5) (pow (+ 1.0 x) -0.5)))) (13248 1.6697465101954732 (- (pow x -0.5) (pow (+ 1.0 x) -0.5))) (7684 41.38406052085737 (if (<= x 0.5381243414999063) (+ (/ 1.0 (sqrt x)) (/ -1.0 (+ 1.0 (* x 0.5)))) (/ 1.0 (* (pow (/ -1.0 (/ -1.0 x)) -0.5) (+ (* x (* x 2.0)) (* x 1.5)))))) (7620 44.19130791690957 (if (<= x 1.2) (+ (/ 1.0 (sqrt x)) (/ -1.0 (+ 1.0 (* x 0.5)))) (/ 1.0 (/ (* 2.0 (sqrt (/ 1.0 x))) (- (/ 1.0 x) (/ 1.0 (+ 1.0 x))))))) (7236 44.95262460486113 (if (<= x 1.66) (+ (/ 1.0 (sqrt x)) (/ -1.0 (+ 1.0 (* x 0.5)))) (/ 1.0 (* 2.0 (pow x 1.5))))) (7108 45.88554580996753 (if (<= x 0.9893102950539306) (+ (/ 1.0 (sqrt x)) (+ -1.0 (* x 0.5))) (/ 1.0 (* 2.0 (pow x 1.5))))) (6916 47.810267855635296 (if (<= x 0.68) (+ (/ 1.0 (sqrt x)) -1.0) (/ 1.0 (* 2.0 (pow x 1.5))))) (6788 50.557256110000715 (if (<= x 0.805) (+ (pow x -0.5) -1.0) (pow x -0.5))) (6720 50.97848660567163 (/ 1.0 (+ x (sqrt x)))) (6528 52.54480606175025 (pow x -0.5)) (64 61.99484920426251 0.0)))","end":0.4647351531460954,"end-est":0.5003700683790941,"identifier":"#f","input":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","link":"abac124d48073113c0572b60cda0c4b88f5c5353.1.6","name":"1.0/sqrt(x) - 1.0 / sqrt(x+1)","output":"(/ 1.0 (* (/ (+ (pow x -0.5) (pow (+ 1.0 x) -0.5)) (+ 1.0 (- x x))) (fma x x x)))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","start":1.9391956931047978,"start-est":1.7949278325950284,"status":"imp-start","target":false,"target-prog":"#f","time":7702.916748046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 1.2794705364506398) (448 0.35103345938058894) ((580 45.722863578203 (if (<= x 0.9893102950539306) (+ 1.0 (- (/ -1.0 x) x)) (/ -1.0 (* x x)))) (452 49.72984359833409 (if (<= x 0.5381243414999063) (- 1.0 (/ 1.0 x)) (/ -1.0 x))) (452 47.443707531949435 (if (<= x 0.75) (- 1.0 (/ 1.0 x)) (/ -1.0 (* x x)))) (192 51.32609884281798 (/ -1.0 x))))","end":0.35103345938058894,"end-est":0.3326950195368841,"identifier":"#f","input":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","link":"1632188e02a3ad788ef2780e44f3dda9a54e3937.1.6","name":"1.0/(x+1) - (1.0/x)","output":"(/ 1.0 (* x (- -1.0 x)))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","start":1.2794705364506398,"start-est":1.178096366175328,"status":"apx-start","target":false,"target-prog":"#f","time":5217.53955078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 2.5835379563004315) (14400 0.5787791432074245) ((1856 0.6054257603998832 (/ (- (* (- 1.0 x) (+ 1.0 (* x 0.5))) (* (+ x 1.0) (* x -0.5))) (* (- 1.0 x) (* (+ x 1.0) (* x -0.5))))) (1344 2.463593526823355 (+ (/ (+ (+ x 1.0) (* x -0.5)) (* (+ x 1.0) (* x -0.5))) (/ 1.0 (+ -1.0 x)))) (1216 2.4933418362068305 (+ (/ 1.0 (+ -1.0 x)) (/ (+ 1.0 (* x 0.5)) (* (+ x 1.0) (* x -0.5))))) (960 2.704263673968897 (+ (/ -2.0 x) (+ (/ 1.0 (+ x 1.0)) (/ -1.0 (- 1.0 x))))) (960 2.5767302602526407 (+ (/ 1.0 (+ x 1.0)) (+ (/ -2.0 x) (/ -1.0 (- 1.0 x))))) (960 2.5835379563004315 (+ (/ 1.0 (+ -1.0 x)) (+ (/ 1.0 (+ x 1.0)) (/ -2.0 x)))) (708 45.7838833806416 (if (<= x 0.6251675903529563) (- (* x -2.0) (* 2.0 (/ 1.0 x))) (+ (/ 1.0 (+ -1.0 x)) (/ -1.0 x)))) (576 50.9500395497849 (- (* x -2.0) (* 2.0 (/ 1.0 x)))) (192 54.3438307029827 (/ -2.0 x))))","end":0.5787791432074245,"end-est":0.48477491418878915,"identifier":"#f","input":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","link":"3001cd5924ff7fd69ec2e213fd451c7010ff2997.1.6","name":"((1.0 / (x + 1.0)) - (2.0 / x)) + (1.0 / (x - 1.0))","output":"(/ (fma -1.0 (* x (+ x 1.0)) (* (- 1.0 x) (fma (+ x 1.0) -2.0 x))) (* (* x (+ x 1.0)) (- 1.0 x)))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","start":2.5835379563004315,"start-est":2.7916929335885263,"status":"imp-start","target":false,"target-prog":"#f","time":6349.5009765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 2.7091326282709525) (33216 0.6330817699672452) ((33216 0.6760580007671498 (/ (- (+ x 1.0) x) (+ (pow (pow (+ x 1.0) 2.0) 0.3333333333333333) (* (cbrt x) (+ (cbrt (+ x 1.0)) (cbrt x)))))) (26752 0.6721169411898569 (/ (- (+ x 1.0) x) (+ (* (cbrt x) (+ (cbrt (+ x 1.0)) (cbrt x))) (pow (+ x 1.0) 0.6666666666666666)))) (13376 1.993622507215186 (+ (pow (+ x 1.0) 0.3333333333333333) (- 0.0 (pow x 0.3333333333333333)))) (13248 2.5231874549160755 (+ (pow (+ x 1.0) 0.3333333333333333) (- (cbrt x)))) (13120 2.7091326282709525 (- (cbrt (+ x 1.0)) (cbrt x))) (64 52.87072323549456 1.0)))","end":0.6330817699672452,"end-est":0.5861236340651239,"identifier":"#f","input":"(- (cbrt (+ x 1.0)) (cbrt x))","link":"a7a56915081061e90f4179bf2ff3a46847fed975.1.6","name":"cbrt(x + 1) - cbrt(x)","output":"(/ (- (+ x 1.0) x) (+ (cbrt (pow (+ x 1.0) 2.0)) (* (pow x 0.3333333333333333) (+ (cbrt (+ x 1.0)) (cbrt x)))))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (cbrt (+ x 1.0)) (cbrt x))","start":2.7091326282709525,"start-est":2.532500681451009,"status":"imp-start","target":false,"target-prog":"#f","time":4649.383056640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 1.8939449698008126) (19776 0.8702182189003029) ((13504 0.8993789169082166 (+ (log1p x) (- -1.0 (* x (log (/ x (+ x 1.0))))))) (7876 32.01139661014777 (if (<= x 0.7688423742998766) (+ (- (+ x (* (* x x) (+ 0.5 (* x (+ (* x 0.08333333333333333) -0.16666666666666666))))) (* x (log x))) -1.0) (log1p (+ x (+ (/ (/ 0.020833333333333332 x) x) (+ -0.5 (/ -0.041666666666666664 x))))))) (7492 34.03310118410719 (if (<= x 0.7044364260157084) (+ (* x (+ (* x (+ 0.5 (* x -0.16666666666666666))) (- 1.0 (log x)))) -1.0) (log1p (+ x (+ (/ (/ 0.020833333333333332 x) x) (+ -0.5 (/ -0.041666666666666664 x))))))) (7364 36.180893889878305 (if (<= x 0.5381243414999063) (+ (* x (+ (- 1.0 (log x)) (* x 0.5))) -1.0) (log1p (+ x (+ (/ (/ 0.020833333333333332 x) x) (+ -0.5 (/ -0.041666666666666664 x))))))) (7236 38.261486015281584 (if (<= x 0.5) (+ (* x (+ (- 1.0 (log x)) (* x 0.5))) -1.0) (log1p (+ x (+ -0.5 (/ -0.041666666666666664 x)))))) (6980 42.985562116811145 (if (<= x 0.16999781028506122) (+ x -1.0) (log1p (+ x (+ -0.5 (/ -0.041666666666666664 x)))))) (6980 40.549862664045186 (if (<= x 0.39) (+ (* x (- 1.0 (log x))) -1.0) (log1p (+ x (+ -0.5 (/ -0.041666666666666664 x)))))) (6596 49.67405319216871 (if (<= x 2.332803562319732) (+ x -1.0) (log x))) (6592 45.44312086654446 (log1p (+ x -0.5))) (192 52.47935023002872 (+ x -1.0)) (64 57.833398832885436 -1.0)))","end":0.8702182189003029,"end-est":0.8509143629939687,"identifier":"#f","input":"(- (- (* (+ x 1.0) (log (+ x 1.0))) (* x (log x))) 1.0)","link":"7df6e3d0d57b5b1d357d46329eb59c1fbbaf58b3.1.6","name":"(((x + 1.0) * log(x + 1.0)) - (x * log(x))) - 1.0","output":"(- (log1p x) (fma x (log (/ x (+ x 1.0))) 1.0))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (- (* (+ x 1.0) (log (+ x 1.0))) (* x (log x))) 1.0)","start":1.8939449698008126,"start-est":1.9240914245266882,"status":"imp-start","target":false,"target-prog":"#f","time":8721.633056640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1472 0.4363712421996704) (7104 0.08975) ((1088 0.40807838438203176 (+ (+ (* (+ x -0.0427) (/ (/ 401000.0 x) x)) (* 35000000.0 (+ x -0.0427))) -4.1419509000000004e-18)) (1088 0.29094812031259015 (+ (+ (* (+ x -0.0427) (/ (/ 401000.0 x) x)) (+ -1494500.0 (* x 35000000.0))) -4.1419509000000004e-18)) (832 0.4360975578234083 (+ (* (+ x -0.0427) (+ 35000000.0 (/ 401000.0 (* x x)))) -4.1419509000000004e-18)) (704 47.893744997899546 (+ -1494500.0 (+ (* x 35000000.0) (* 401000.0 (/ 1.0 x))))) (192 47.87127216111137 (* x 35000000.0))))","end":0.08975,"end-est":0.1015625,"identifier":"#f","input":"(- (* (+ 35000000.0 (* (* 0.401 (/ 1000.0 x)) (/ 1000.0 x))) (- x (* 1000.0 4.27e-5))) (* (* 1.3806503e-23 1000.0) 300.0))","link":"f2f2738676eab1bdc0e8a36e87e05d745ecbbdc7.1.6","name":"((35000000.0 + ((0.401 * (1000.0 / x)) * (1000.0 / x))) * (x - (1000.0 * 4.27e-5))) - ((1.3806503e-23 * 1000.0) * 300.0)","output":"(fma x 35000000.0 (+ -1494500.0 (/ (+ 401000.0 (/ -17122.7 x)) x)))","pre":"(and (<= 0.1 x) (<= x 0.5))","prec":"binary64","preprocess":"()","spec":"(- (* (+ 35000000.0 (* (* 0.401 (/ 1000.0 x)) (/ 1000.0 x))) (- x (* 1000.0 4.27e-5))) (* (* 1.3806503e-23 1000.0) 300.0))","start":0.4363712421996704,"start-est":0.46226503907376815,"status":"ex-start","target":false,"target-prog":"#f","time":6186.492431640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((2368 0.003) (2368 0.003) ())","end":0.003,"end-est":0.00390625,"identifier":"#f","input":"(- (+ (- x (/ (* (* x x) x) 6.0)) (/ (* (* (* (* x x) x) x) x) 120.0)) (/ (* (* (* (* (* (* x x) x) x) x) x) x) 5040.0))","link":"052518705fa9ea6ab4350136ab5d0ed6c34018fb.1.6","name":"x - (x * x * x) / 6.0 + (x * x * x * x * x) / 120.0 - (x * x * x * x * x * x * x) / 5040.0","output":"(- (+ (- x (/ (* x (* x x)) 6.0)) (/ (* x (* x (* x (* x x)))) 120.0)) (/ (* x (* x (* x (* x (* x (* x x)))))) 5040.0))","pre":"(and (<= -1.57079632679 x) (<= x 1.57079632679))","prec":"binary64","preprocess":"()","spec":"(- (+ (- x (/ (* (* x x) x) 6.0)) (/ (* (* (* (* x x) x) x) x) 120.0)) (/ (* (* (* (* (* (* x x) x) x) x) x) x) 5040.0))","start":0.003,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4691.02392578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 1.1496116190619197) (12864 0.26184722451112336) ((6720 43.45861647353709 (+ (* x 0.5) (log x))) (6464 49.67248712008246 (log x))))","end":0.26184722451112336,"end-est":0.2759338203955934,"identifier":"#f","input":"(log (- (exp x) 1.0))","link":"bbf9fea0ffa03ef9e78a9dc0ad18aa5d82a6e5e0.1.6","name":"log(exp(x) - 1.0)","output":"(log (expm1 x))","pre":"(and (<= 0.01 x) (<= x 8.0))","prec":"binary64","preprocess":"()","spec":"(log (- (exp x) 1.0))","start":1.1496116190619197,"start-est":1.0945236393951883,"status":"apx-start","target":false,"target-prog":"#f","time":5077.481689453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.5631533875310124) (704 0.368872932816196) ((576 49.17803423156855 (* x (* x (+ 4.0 (* x -7.207207207207206))))) (320 50.6302153059873 (* 4.0 (* x x))) (192 53.05524200660139 (* x 2.22))))","end":0.368872932816196,"end-est":0.32650375976844204,"identifier":"#f","input":"(/ (* (* 4.0 x) x) (+ (+ 1.0 (/ x 1.11)) (/ x 1.11)))","link":"48afd587bbc517a16900272dbc357f32ad58c07d.1.6","name":"(4.0 * x * x) / (1 + x / 1.11 + x / 1.11)","output":"(/ (* x (* 4.0 x)) (+ 1.0 (* x 1.8018018018018016)))","pre":"(and (<= 0.1 x) (<= x 0.3))","prec":"binary64","preprocess":"()","spec":"(/ (* (* 4.0 x) x) (+ (+ 1.0 (/ x 1.11)) (/ x 1.11)))","start":0.5631533875310124,"start-est":0.5919114258319566,"status":"ex-start","target":false,"target-prog":"#f","time":5052.983154296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.323125) (576 0.323125) ((576 0.37417236875252413 (* x (/ 4.0 (+ 1.0 (* x 0.9009009009009008))))) (448 47.18649442926726 (* x (+ 4.0 (* x -3.603603603603603)))) (192 49.78811524501717 (* 4.0 x)) (64 53.53862440571808 4.44)))","end":0.323125,"end-est":0.31640625,"identifier":"#f","input":"(/ (* 4.0 x) (+ (/ x 1.11) 1.0))","link":"85481dd91057e742adf1256a7427fb37a0deab08.1.6","name":"(4.0 * x) / (x / 1.11 + 1.0)","output":"(/ (* 4.0 x) (+ (/ x 1.11) 1.0))","pre":"(and (<= 0.1 x) (<= x 0.3))","prec":"binary64","preprocess":"()","spec":"(/ (* 4.0 x) (+ (/ x 1.11) 1.0))","start":0.323125,"start-est":0.31640625,"status":"ex-start","target":false,"target-prog":"#f","time":4191.397705078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 2.7334998861127886) (39940 0.8171970676352043) ((26560 2.7145045065877302 (/ (+ (exp x) (/ 1.0 (+ (exp x) -2.0))) (* (exp x) (/ 1.0 (+ (exp x) -2.0))))) (13184 2.941235422121969 (+ (exp x) (+ (exp (- x)) -2.0))) (13184 2.7334998861127886 (+ (exp (- x)) (+ (exp x) -2.0))) (6724 35.972762180755154 (if (<= x 1.65) (* x x) (+ (exp x) -1.0))) (6720 3.1540464648948574 (+ -2.0 (* 2.0 (cosh x)))) (192 48.42155525216456 (* x x))))","end":0.8171970676352043,"end-est":0.8520737288809435,"identifier":"#f","input":"(+ (- (exp x) 2.0) (exp (- x)))","link":"5ffd3edecfd1be899e0be848fee0f1beb79139ba.1.6","name":"exp(x) - 2.0 + exp(-x)","output":"(if (<= (+ (exp (- x)) (+ (exp x) -2.0)) 0.016) (pow (+ (* 3.1001984126984127e-6 (pow x 7.0)) (+ (* 0.041666666666666664 (pow x 3.0)) (+ x (* 0.0005208333333333333 (pow x 5.0))))) 2.0) (/ (+ (exp x) (/ 1.0 (+ (exp x) -2.0))) (* (exp x) (/ 1.0 (+ (exp x) -2.0)))))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(+ (- (exp x) 2.0) (exp (- x)))","start":2.7334998861127886,"start-est":2.6491448352069975,"status":"imp-start","target":false,"target-prog":"#f","time":5705.3837890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 3.937558018443932) (33540 2.0475753365444413) ((13248 3.937558018443932 (/ (- x (sin x)) (- x (tan x)))) (7108 41.11530720718167 (if (<= x 2.4572663452409365) (+ (+ 1.0 (fma 0.225 (* x x) -0.5)) -1.0) 1.0)) (580 41.11530720788225 (if (<= x 2.4572663452409365) (+ -0.5 (* 0.225 (* x x))) 1.0)) (196 47.029143464172776 (if (<= x 1.4819054532378897) -0.5 1.0)) (64 56.58616801411834 1.0)))","end":2.0475753365444413,"end-est":1.613481449155412,"identifier":"#f","input":"(/ (- x (sin x)) (- x (tan x)))","link":"a9f4c650663400ace82d139300d8513cc4a7ad05.1.6","name":"(x - sin(x)) / (x - tan(x))","output":"(if (<= (/ (- x (sin x)) (- x (tan x))) -0.4985) (+ (+ (* 0.225 (pow x 2.0)) (+ (* -0.009642857142857142 (pow x 4.0)) (* 0.00024107142857142857 (pow x 6.0)))) -0.5) (/ (- x (sin x)) (- x (tan x))))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (- x (tan x)))","start":3.937558018443932,"start-est":3.930906343812278,"status":"imp-start","target":false,"target-prog":"#f","time":10225.98828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 1.012624220104354) (13056 0.200875) ((12992 0.2539885343791464 (/ (exp x) (expm1 x))) (7428 33.004893787842285 (if (<= x 7.367314382866553) (+ 0.5 (+ (* x 0.08333333333333333) (+ (/ 1.0 x) (* -0.001388888888888889 (pow x 3.0))))) (+ 0.5 (/ 1.0 x)))) (6848 39.607276813866015 (+ 0.5 (fma x 0.08333333333333333 (/ 1.0 x)))) (6848 39.60727681526329 (+ (/ 1.0 x) (fma x 0.08333333333333333 0.5))) (576 39.607276813866086 (+ 0.5 (+ (* x 0.08333333333333333) (/ 1.0 x)))) (320 46.58091182613583 (+ 0.5 (/ 1.0 x))) (192 50.80282618736926 (/ 1.0 x))))","end":0.200875,"end-est":0.1953125,"identifier":"#f","input":"(/ (exp x) (- (exp x) 1.0))","link":"8a584cc0b86f66ecf7c6b16d9c31c8e037bcf8fd.1.6","name":"exp(x) / (exp(x) - 1.0)","output":"(pow (- (expm1 (- x))) -1.0)","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(/ (exp x) (- (exp x) 1.0))","start":1.012624220104354,"start-est":0.9579892819095251,"status":"apx-start","target":false,"target-prog":"#f","time":4478.481201171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 3.2027736938289957) (13376 0.5420432535500856) ((6848 3.2027736938289957 (/ (- 1.0 (cos x)) (* x x))) (580 42.11258479809865 (if (<= x 3.2) (+ 0.5 (* x (* x -0.041666666666666664))) 0.5)) (64 48.29262648775931 0.5)))","end":0.5420432535500856,"end-est":0.5466576660635144,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (* x x))","link":"8089a70182be9f90ef8657aad14565c8f7b3d311.1.6","name":"(1.0 - cos(x)) / (x * x)","output":"(/ (* (tan (/ x 2.0)) (sin x)) (* x x))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (* x x))","start":3.2027736938289957,"start-est":3.13730295970523,"status":"imp-start","target":false,"target-prog":"#f","time":5535.102783203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 3.476900100601101) (46664 1.6754003798112627) ((27976 1.677311924828614 (if (<= (- (/ 1.0 x) (/ 1.0 (tan x))) -0.01) (- (/ 1.0 x) (/ (cos x) (sin x))) (if (<= (- (/ 1.0 x) (/ 1.0 (tan x))) 0.03) (/ 1.0 (+ (* -0.005714285714285714 (pow x 3.0)) (+ (* (/ 1.0 x) 3.0) (+ (* -0.00025396825396825396 (pow x 5.0)) (* x -0.2))))) (/ 1.0 (* (tan x) (* x (/ 1.0 (- (tan x) x)))))))) (13248 3.1788369323990735 (/ (- (tan x) x) (* x (tan x)))) (6976 3.2773936203324423 (* (/ 1.0 x) (- 1.0 (/ x (tan x))))) (6916 39.2214041268874 (if (<= x 2.55) (/ 1.0 (+ (* (/ 1.0 x) 3.0) (* x -0.2))) (/ (- x) (* x (tan x))))) (6848 3.476900100601101 (- (/ 1.0 x) (/ 1.0 (tan x)))) (704 42.998178628903744 (/ 1.0 (+ (* (/ 1.0 x) 3.0) (* x -0.2)))) (448 49.19439013604668 (+ (+ 1.0 (* x 0.3333333333333333)) -1.0)) (320 49.19439013605935 (/ 1.0 (/ 3.0 x))) (192 49.194390136059894 (* x 0.3333333333333333))))","end":1.6754003798112627,"end-est":1.332587474770379,"identifier":"#f","input":"(- (/ 1.0 x) (/ 1.0 (tan x)))","link":"fde25dd489d055929960be4314bc015149ad3732.1.6","name":"1.0 / x - 1.0 / tan(x)","output":"(if (<= (- (/ 1.0 x) (/ 1.0 (tan x))) -0.01) (- (/ 1.0 x) (/ (cos x) (sin x))) (if (<= (- (/ 1.0 x) (/ 1.0 (tan x))) 0.03) (/ 1.0 (fma -0.005714285714285714 (pow x 3.0) (fma x -0.2 (fma -0.00025396825396825396 (pow x 5.0) (/ 3.0 x))))) (/ 1.0 (* (tan x) (* x (/ 1.0 (- (tan x) x)))))))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 x) (/ 1.0 (tan x)))","start":3.476900100601101,"start-est":3.345901805038133,"status":"imp-start","target":false,"target-prog":"#f","time":8665.560546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 1.7069182984655529) (6720 1.1623121719370215) ((6724 43.84820002490276 (if (<= x 0.8196692020900609) (- x (log x)) (+ (/ 1.0 x) (/ -0.5 (* x x))))) (6660 46.0591794009386 (if (<= x 0.68) (- (log x)) (+ (/ 1.0 x) (/ -0.5 (* x x))))) (708 48.55509851370436 (if (<= x 0.8196692020900609) (/ 1.0 x) (+ (/ 1.0 x) (/ -0.5 (* x x))))) (192 50.47533634864429 (/ 1.0 x))))","end":1.1623121719370215,"end-est":1.0837973424985907,"identifier":"#f","input":"(- (log (+ x 1.0)) (log x))","link":"43151e8f66d1eb39ac6e152d4a2c93922137011e.1.6","name":"log(x + 1.0) - log(x)","output":"(log (+ 1.0 (/ 1.0 x)))","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (log (+ x 1.0)) (log x))","start":1.7069182984655529,"start-est":1.6085608398053557,"status":"apx-start","target":false,"target-prog":"#f","time":4509.10595703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 1.1060137439174682) (6464 0.0765) ((64 51.825523340114145 x)))","end":0.0765,"end-est":0.08203125,"identifier":"#f","input":"(- (exp x) 1.0)","link":"aa1e6e5305898cd9a2bbf08887ae20ed4459ccb6.1.6","name":"exp(x) - 1.0","output":"(expm1 x)","pre":"(and (<= 0.01 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- (exp x) 1.0)","start":1.1060137439174682,"start-est":1.068703154279985,"status":"imp-start","target":false,"target-prog":"#f","time":3138.9619140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 0.2095) (6592 0.193625) ((320 41.84686391538379 (+ (* x 0.5) 1.0)) (64 47.255628356169 1.0)))","end":0.193625,"end-est":0.21875,"identifier":"#f","input":"(/ (- (exp x) 1.0) (log (exp x)))","link":"5ea4987a868ad3d62eb7e257e507e601e934c8c4.1.6","name":"(exp(x) - 1.0) / log(exp(x))","output":"(/ (expm1 x) x)","pre":"(and (<= 0.01 x) (<= x 0.5))","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) 1.0) (log (exp x)))","start":0.2095,"start-est":0.22265625,"status":"ex-start","target":false,"target-prog":"#f","time":4234.103759765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 2.123706174580306) (6592 0.193625) ((320 41.84686391538379 (+ (* x 0.5) 1.0)) (64 47.255628356169 1.0)))","end":0.193625,"end-est":0.21875,"identifier":"#f","input":"(/ (- (exp x) 1.0) x)","link":"43d3ac468d723a040d15e1545a6217148a3cca18.1.6","name":"(exp(x) - 1.0) / x","output":"(/ (expm1 x) x)","pre":"(and (<= 0.01 x) (<= x 0.5))","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) 1.0) x)","start":2.123706174580306,"start-est":2.231326611824696,"status":"imp-start","target":false,"target-prog":"#f","time":3740.81103515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.3336984968798679) (13248 0.3336984968798679) ((6720 45.362071284186165 (* 0.5 (sqrt (/ 1.0 x)))) (192 51.95459385604528 (/ 2.0 x)) (64 53.736220141002 1.0)))","end":0.3336984968798679,"end-est":0.3366012695368841,"identifier":"#f","input":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","link":"4a8fecae53af24689d4c5368468056fe7027e2c1.1.6","name":"1.0 / (sqrt(x + 1.0) + sqrt(x))","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","start":0.3336984968798679,"start-est":0.3366012695368841,"status":"ex-start","target":false,"target-prog":"#f","time":4976.67578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 0.008698120312590145) (20992 0.009073120312590145) ((1856 0.008698120312590145 (+ (+ (+ (+ 1.0 (* 0.5 x)) (* x (* x -0.125))) (* x (* x (* x 0.0625)))) (* x (* x (* x (* x -0.0390625))))))))","end":0.009073120312590145,"end-est":0.00390625,"identifier":"#f","input":"(- (+ (- (+ 1.0 (* 0.5 x)) (* (* 0.125 x) x)) (* (* (* 0.0625 x) x) x)) (* (* (* (* 0.0390625 x) x) x) x))","link":"65a81010ebaf04154202b3bc122ceaef63ce749c.1.6","name":"1.0 + 0.5 * x - 0.125 * x * x + 0.0625 * x * x * x - 0.0390625 * x * x * x * x","output":"(+ (+ (+ (+ 1.0 (* 0.5 x)) (* x (* x -0.125))) (log (+ 1.0 (expm1 (* 0.0625 (pow x 3.0)))))) (* x (* x (* x (* x -0.0390625)))))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (+ (- (+ 1.0 (* 0.5 x)) (* (* 0.125 x) x)) (* (* (* 0.0625 x) x) x)) (* (* (* (* 0.0390625 x) x) x) x))","start":0.008698120312590145,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":4900.88134765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 14.58966230482435) (6656 0.013771240625180288) ((324 36.604137739452575 (if (<= x -4.5679366868667397e-182) (/ -1.0 x) (/ 1.0 y))) (192 41.97333519906815 (/ 1.0 y))))","end":0.013771240625180288,"end-est":0.015625,"identifier":"#f","input":"(/ 1.0 (sqrt (+ (pow x 2.0) (pow y 2.0))))","link":"dddaaa0c4fa8e02928de203dbcea5663c825efd7.1.6","name":"1/sqrt((x)^2 + (y)^2)","output":"(/ 1.0 (hypot x y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ (pow x 2.0) (pow y 2.0))))","start":14.58966230482435,"start-est":14.19704257999958,"status":"imp-start","target":false,"target-prog":"#f","time":4918.030517578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"d5b4b866605ef7f537cd6b7086ecaefb00360ebe.1.6","name":"sqrt(x+1) - sqrt(x)","output":"#f","pre":"(and (<= -1.79e+308 x) (<= x -1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":1.439453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 4.1475009812518575) (13312 0.34282349687986785) ((13120 4.1475009812518575 (- (sqrt x) (sqrt (+ -1.0 x)))) (6720 45.56108677336092 (* 0.5 (sqrt (/ 1.0 x)))) (6528 64.0 (- (sqrt -1.0)))))","end":0.34282349687986785,"end-est":0.31869125976844204,"identifier":"#f","input":"(- (sqrt x) (sqrt (- x 1.0)))","link":"9fe84a73dacb04d341984814e41ba065457ce64d.1.6","name":"sqrt(x) - sqrt(x-1)","output":"(/ -1.0 (- (- (sqrt x)) (sqrt (+ -1.0 x))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt x) (sqrt (- x 1.0)))","start":4.1475009812518575,"start-est":4.10305568442581,"status":"imp-start","target":false,"target-prog":"#f","time":4761.127197265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((53952 0.10584459606861064) (66816 0.11253548459683863) ((54080 0.10599267723650485 (+ (+ (* x 2304.0) (+ (+ (+ (+ (+ (+ (+ (pow x 9.0) (* (pow x 8.0) -18.0)) (pow (* 12.0 (pow x 3.5)) 2.0)) (* (pow x 6.0) -672.0)) (* 2016.0 (pow x 5.0))) (* (pow x 4.0) -4032.0)) (* 5376.0 (pow x 3.0))) (* (* x x) -4608.0))) -512.0)) (54016 0.10548124127568431 (+ (+ (* x 2304.0) (+ (+ (* 5376.0 (pow x 3.0)) (- (+ (* 2016.0 (pow x 5.0)) (+ (+ (+ (pow x 9.0) (* (pow x 8.0) -18.0)) (* 144.0 (pow x 7.0))) (* (pow x 6.0) -672.0))) (sqrt (* (pow x 8.0) 16257024.0)))) (* (* x x) -4608.0))) -512.0)) (47616 0.10584459606861064 (+ (+ (* x 2304.0) (+ (+ (* 5376.0 (pow x 3.0)) (+ (+ (* 2016.0 (pow x 5.0)) (+ (+ (+ (pow x 9.0) (* (pow x 8.0) -18.0)) (* 144.0 (pow x 7.0))) (* (pow x 6.0) -672.0))) (* (pow x 4.0) -4032.0))) (* (* x x) -4608.0))) -512.0)) (26944 0.9596978419976786 (+ (+ (* (pow x 4.0) -4032.0) (+ (* 2016.0 (pow x 5.0)) (* x 2304.0))) (fma x (* x (fma x 5376.0 -4608.0)) -512.0))) (26368 1.065973704036312 (+ (fma x (* x (fma x 5376.0 -4608.0)) -512.0) (fma x 2304.0 (pow x 9.0)))) (7104 1.1001312355475852 (fma x (+ 2304.0 (* x (+ -4608.0 (* x 5376.0)))) -512.0)) (6848 1.2595082498754535 (fma x (+ 2304.0 (* x -4608.0)) -512.0)) (320 1.4693720219341473 (+ (* x 2304.0) -512.0)) (64 2.1568264651967612 -512.0)))","end":0.11253548459683863,"end-est":0.13714785131209123,"identifier":"#f","input":"(- (+ (- (+ (- (+ (- (+ (- (pow x 9.0) (* 18.0 (pow x 8.0))) (* 144.0 (pow x 7.0))) (* 672.0 (pow x 6.0))) (* 2016.0 (pow x 5.0))) (* 4032.0 (pow x 4.0))) (* 5376.0 (pow x 3.0))) (* 4608.0 (pow x 2.0))) (* 2304.0 x)) 512.0)","link":"6bd41d66c2c199abaa8d1fb09af38d96d76a72a1.1.6","name":"x^9 -18x^8 + 144x^7 - 672x^6 + 2016x^5 - 4032x^4 + 5376x^3 - 4608x^2 + 2304x - 512","output":"(+ (+ (- (+ (+ (+ (+ (+ (+ (pow x 9.0) (* (pow x 8.0) -18.0)) (pow (* 12.0 (pow x 3.5)) 2.0)) (* (pow x 6.0) -672.0)) (* 2016.0 (pow x 5.0))) (* (pow x 4.0) -4032.0)) (* 5376.0 (pow x 3.0))) (pow (* x (sqrt 4608.0)) 2.0)) (* x 2304.0)) -512.0)","pre":"(and (<= 0.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (+ (- (+ (- (+ (- (+ (- (pow x 9.0) (* 18.0 (pow x 8.0))) (* 144.0 (pow x 7.0))) (* 672.0 (pow x 6.0))) (* 2016.0 (pow x 5.0))) (* 4032.0 (pow x 4.0))) (* 5376.0 (pow x 3.0))) (* 4608.0 (pow x 2.0))) (* 2304.0 x)) 512.0)","start":0.10584459606861064,"start-est":0.1643182651468998,"status":"ex-start","target":false,"target-prog":"#f","time":9259.0771484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 58.52184649823954) (6592 0.0075) ((704 0.22396174912342173 (+ (* x (* 0.3333333333333333 (* x x))) (* 2.0 x))) (192 0.626805059370874 (* 2.0 x))))","end":0.0075,"end-est":0.01171875,"identifier":"#f","input":"(- (exp x) (exp (- x)))","link":"edfe1ae3137d0e083454f1ac61b1265dbc1f2fe7.1.6","name":"exp(x) - exp(-x)","output":"(* 2.0 (sinh x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (exp x) (exp (- x)))","start":58.52184649823954,"start-est":58.067558770490116,"status":"imp-start","target":false,"target-prog":"#f","time":5769.5205078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.010573120312590145) (448 0.001375) ())","end":0.001375,"end-est":0,"identifier":"#f","input":"(- (pow x 2.0) (pow y 2.0))","link":"47472bcdbe433726c4d9f782db432f57f9f06f14.1.6","name":"x^2-y^2","output":"(* (+ x y) (- x y))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 2.0) (pow y 2.0))","start":0.010573120312590145,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2521.9248046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 59.387746737944894) (704 0) ((192 0.05953148735602076 (* x -2.0))))","end":0,"end-est":0,"identifier":"#f","input":"(- (exp (- x)) (exp x))","link":"401b070e96aef8724d76c79b22953904cb504bc4.1.6","name":"exp(-x) -exp(x)","output":"(+ (* x (* -0.3333333333333333 (* x x))) (* x -2.0))","pre":"(and (<= -1e-5 x) (<= x 1e-5))","prec":"binary64","preprocess":"()","spec":"(- (exp (- x)) (exp x))","start":59.387746737944894,"start-est":58.98753749341872,"status":"imp-start","target":false,"target-prog":"#f","time":6027.55908203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 58.52184649823954) (19904 0.11262887105124884) ((13632 0.1145070040177042 (+ (* -0.016666666666666666 (pow x 5.0)) (+ (* -0.3333333333333333 (pow x 3.0)) (* -2.0 x)))) (704 0.22396174912342173 (+ (* -2.0 x) (* x (* -0.3333333333333333 (* x x))))) (192 0.626805059370874 (* -2.0 x))))","end":0.11262887105124884,"end-est":0.26733166471842457,"identifier":"#f","input":"(- (exp (- x)) (exp x))","link":"74a191827e6769507bffd607fb9853c8ff75ff8c.1.6","name":"exp(-x) -exp(x)","output":"(fma -2.0 x (+ (* -0.016666666666666666 (pow x 5.0)) (* -0.3333333333333333 (pow x 3.0))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (exp (- x)) (exp x))","start":58.52184649823954,"start-est":58.067558770490116,"status":"imp-start","target":false,"target-prog":"#f","time":6214.000244140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 15.878182497584383) (320 0.029375) ((720 18.50436753749535 (if (<= y -1.598154353210837e-154) (/ -1.0 y) (if (<= y 2.0666405257979577e-187) (/ 1.0 x) (if (<= y 2.518346186660727e-153) (/ -1.0 y) (if (<= y 1.3801732630379562e-99) (/ 1.0 x) (/ -1.0 y)))))) (192 32.309264379579055 (/ 1.0 x))))","end":0.029375,"end-est":0.02734375,"identifier":"#f","input":"(/ (+ x y) (- (pow x 2.0) (pow y 2.0)))","link":"1bf15a0983fb4663021517058e20790ed39e5ed0.1.6","name":"(x+y)/(x^2-y^2)","output":"(/ 1.0 (- x y))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (- (pow x 2.0) (pow y 2.0)))","start":15.878182497584383,"start-est":15.851456527022638,"status":"imp-start","target":false,"target-prog":"#f","time":5243.23583984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.02625) (320 0.02625) ((720 16.674766214080737 (if (<= y -2.506166936737004e-135) (/ -1.0 y) (if (<= y 1.9592925863540784e-175) (/ 1.0 x) (if (<= y 1.679063389059856e-150) (/ -1.0 y) (if (<= y 8.638326023206338e-130) (/ 1.0 x) (/ -1.0 y)))))) (192 32.34675881028504 (/ -1.0 y))))","end":0.02625,"end-est":0.02734375,"identifier":"#f","input":"(/ 1.0 (- x y))","link":"e7cd053551ecb3a96a1cfc52afa92dfcb2947a02.1.6","name":"1/(x-y)","output":"(/ -1.0 (- y x))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (- x y))","start":0.02625,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":4189.579833984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03200488750216349) (13120 0.03200488750216349) ((6848 0.6645821777985905 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 2.763851777179533 1.0)))","end":0.03200488750216349,"end-est":0.025722509768442016,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"503e2458027f5b7adc42ebd8b0fe8f32c2db0ea0.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03200488750216349,"start-est":0.025722509768442016,"status":"ex-start","target":false,"target-prog":"#f","time":4654.407958984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ a b) 2.0)","link":"e303433f5919b66097c8244f427610618dfd56ec.1.6","name":"(a+b)/2","output":"(/ (+ a b) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ a b) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1854.22265625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.003375) (320 0.003375) ())","end":0.003375,"end-est":0,"identifier":"#f","input":"(* (* a b) 0.5)","link":"088e6d1174d8ad1e07b1f249c09482053fcb11c9.1.6","name":"(a*b)*0.5","output":"(* (* a b) 0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* a b) 0.5)","start":0.003375,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1509.212158203125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ a b) 2.0)","link":"5c1b9416d5b3634860c565f2a99341672dcb06a9.1.6","name":"(a+  b)/ 2","output":"(/ (+ a b) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ a b) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1600.483154296875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 1.1605) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(round (/ (* num (pow 10.0 precision)) (pow 10.0 precision)))","link":"aa03081d59d3bb0208c92438bbb9ddd80d93dc70.1.6","name":"round(num * (10 ^ precision) /  (10 ^ precision))","output":"(round num)","pre":"(and (and (<= -1.79e+308 num) (<= num 1.79e+308)) (and (<= -1.79e+308 precision) (<= precision 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(round (/ (* num (pow 10.0 precision)) (pow 10.0 precision)))","start":1.1605,"start-est":1.25,"status":"imp-start","target":false,"target-prog":"#f","time":10993.2470703125,"vars":["num","precision"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 1.1913007255940273) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (* num (pow 10.0 precision)) (pow 10.0 precision))","link":"4de5281dc0f88c4a03b09dee795a6777dc17437c.1.6","name":"num * (10 ^ precision) /  (10 ^ precision)","output":"num","pre":"(and (and (<= -1.79e+308 num) (<= num 1.79e+308)) (and (<= -1.79e+308 precision) (<= precision 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (* num (pow 10.0 precision)) (pow 10.0 precision))","start":1.1913007255940273,"start-est":1.25,"status":"imp-start","target":false,"target-prog":"#f","time":10766.4248046875,"vars":["num","precision"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00525) (320 0.00525) ((192 1.1809211615884245 (/ 1.0 x)) (64 61.39409003926431 x)))","end":0.00525,"end-est":0.0078125,"identifier":"#f","input":"(+ (/ 1.0 x) x)","link":"222dacbdb7380e8eca1bd5bfe6b07e7036428306.1.6","name":"1/x+x","output":"(+ x (/ 1.0 x))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (/ 1.0 x) x)","start":0.00525,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3596.841064453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.04375) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (/ 1.0 x) (/ 3.0 x))","link":"fd687c4e01b506a3c6a9bd27474df0157c8a76e3.1.6","name":"1/x+3/x","output":"(/ 4.0 x)","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(+ (/ 1.0 x) (/ 3.0 x))","start":0.04375,"start-est":0.04296875,"status":"ex-start","target":false,"target-prog":"#f","time":2118.2119140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.03) (448 0.003146240625180289) ((980 18.38719717361597 (if (<= y 1.3145268749601236e-205) 1.0 (if (<= y 3.529847868777792e-194) (* y (/ -2.0 x)) (if (<= y 5.301634294551293e-176) 1.0 (if (<= y 1.0349273009843307e-148) (* y (/ -2.0 x)) (if (<= y 2.4308539435147053e-128) 1.0 (* y (/ -2.0 x)))))))) (980 18.28858516357687 (if (<= y 1.3145268749601236e-205) 1.0 (if (<= y 3.529847868777792e-194) (* -2.0 (/ y x)) (if (<= y 5.301634294551293e-176) 1.0 (if (<= y 1.0349273009843307e-148) (* -2.0 (/ y x)) (if (<= y 2.4308539435147053e-128) 1.0 (* -2.0 (/ y x)))))))) (64 32.79877735195144 1.0)))","end":0.003146240625180289,"end-est":0.012382519536884034,"identifier":"#f","input":"(/ (- x (* 2.0 y)) x)","link":"270fdcf25ab7d5449e17ce3bce8bc45b0d5547ef.1.6","name":"(x - 2 * y) / x","output":"(+ 1.0 (* -2.0 (/ y x)))","pre":"(and (and (<= 0.0 x) (<= x 1000.0)) (and (<= 0.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- x (* 2.0 y)) x)","start":0.03,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":2999.74267578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7360 0.099125) (7104 0.099125) ((6592 1.2021370236627842 (* x (sqrt 0.7621))) (320 60.149199574295174 (* x (* x 0.5))) (64 61.53073209802371 -0.7621)))","end":0.099125,"end-est":0.0703125,"identifier":"#f","input":"(* x (sqrt (+ (- 1.0 0.39) (+ (* 0.39 0.39) (* (* 0.25 x) x)))))","link":"e5531c7ae8cf28fe82a37f288b531b27efa05c84.1.6","name":"x * sqrt(1 - 0.39 + (0.39 * 0.39 + 0.25 * x * x))","output":"(* x (sqrt (+ 0.61 (+ 0.1521 (* x (* x 0.25))))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(* x (sqrt (+ (- 1.0 0.39) (+ (* 0.39 0.39) (* (* 0.25 x) x)))))","start":0.099125,"start-est":0.0703125,"status":"ex-start","target":false,"target-prog":"#f","time":5775.85986328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.07531314172485908) (13504 0.06354041406655646) ((13120 0.07531314172485908 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 1.2734904635187767 (+ (* x 0.5) (- 1.0 (sqrt x)))) (6848 1.2667597968577322 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.3641264733585787 1.0)))","end":0.06354041406655646,"end-est":0.0703125,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"8d938c52eb4db4fc5d2cef0fa3528b31e1c77d4b.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.07531314172485908,"start-est":0.08703595937737447,"status":"ex-start","target":false,"target-prog":"#f","time":3742.9892578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.008625) (6784 0.00425) ((1296 15.62810683291152 (if (<= (* a b) -5.7361730992547124e+26) (* a b) (if (<= (* a b) -857097853530.6206) (* d (- c)) (if (<= (* a b) -1.1784875644682236e-82) (* a b) (if (<= (* a b) 7.27547713066732) (* d (- c)) (* a b)))))) (448 0.008625 (- (* a b) (* c d))) (192 31.009420389351792 (* a b))))","end":0.00425,"end-est":0,"identifier":"#f","input":"(- (* a b) (* c d))","link":"f7683931e8c101fe3be29dce3da4498be54a7065.1.6","name":"a * b - c * d","output":"(fma c (- d) (* a b))","pre":"(and (and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308))) (and (<= -1.79e+308 d) (<= d 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- (* a b) (* c d))","start":0.008625,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4126.380859375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.025875) (320 0.025875) ((848 18.210884033032425 (if (<= y -4.613215546112812e-99) (/ (- x) y) (if (<= y -5.2e-159) 1.0 (if (<= y -5e-173) (/ (- x) y) (if (<= y 1.2740712954839445e-117) (+ 1.0 (/ y x)) (/ (- x) y)))))) (784 18.275700814735124 (if (<= y -4.613215546112812e-99) (/ (- x) y) (if (<= y -5.2e-159) 1.0 (if (<= y -5e-173) (/ (- x) y) (if (<= y 1.2740712954839445e-117) 1.0 (/ (- x) y)))))) (64 32.313214160730446 1.0)))","end":0.025875,"end-est":0.0234375,"identifier":"#f","input":"(/ x (- x y))","link":"f9c12ceaa73865fdbe840916e5e5ff1ed68bf7c9.1.6","name":"x/(x-y)","output":"(/ x (- x y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ x (- x y))","start":0.025875,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":3276.951171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.025125) (320 0.025125) ((784 17.204352647875563 (if (<= y -1.9690869982477513e-190) (/ (- x) y) (if (<= y 1.0922153828894315e-175) 1.0 (if (<= y 2.563209988157472e-162) (/ (- x) y) (if (<= y 8.638326023206338e-130) 1.0 (/ (- x) y)))))) (784 17.067492654455148 (if (<= y -1.9690869982477513e-190) (/ (- x) y) (if (<= y 1.0922153828894315e-175) (+ 1.0 (/ y x)) (if (<= y 2.563209988157472e-162) (/ (- x) y) (if (<= y 8.638326023206338e-130) 1.0 (/ (- x) y)))))) (64 31.24581589310686 1.0)))","end":0.025125,"end-est":0.0390625,"identifier":"#f","input":"(/ x (- x y))","link":"1ff2e4da6fc51061a84b3119ed49d3272a52d55c.1.6","name":"x/(x-y)","output":"(/ x (- x y))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ x (- x y))","start":0.025125,"start-est":0.0390625,"status":"ex-start","target":false,"target-prog":"#f","time":4231.592041015625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ x y)","link":"f50f035d250bbb7ef56d9a1da0727edb2972e73c.1.6","name":"x / y","output":"(/ x y)","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ x y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1926.330078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0.0095) (6464 0.0095) ((64 20.60845724346172 x)))","end":0.0095,"end-est":0.0078125,"identifier":"#f","input":"(tanh x)","link":"fa7e3df2d3d1ee42e2aed265dc73ad085a1b94bb.1.6","name":"tanh(x)","output":"(tanh x)","pre":"(and (<= -1.0 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(tanh x)","start":0.0095,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":1701.44970703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 14.784452171352337) (25856 0.502200564063672) ((6528 13.688079019841396 (hypot z x)) (708 30.14980104768828 (if (<= x -6.845067634395635e-127) (- (/ (* z z) (/ x -0.5)) x) z)) (260 30.18820105745855 (if (<= x -6.845067634395635e-127) (- x) z)) (64 55.19011090800997 z)))","end":0.502200564063672,"end-est":0.4921875,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"93e119e89dafc1e63d77bf7728c73f4b72fcb49d.1.6","name":"sqrt(x*x+y*y+z*z)","output":"(pow (sqrt (hypot x (hypot y z))) 2.0)","pre":"(and (and (and (<= -1.79e+308 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000.0))) (and (<= -1000000000.0 z) (<= z 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":14.784452171352337,"start-est":9.951632701472803,"status":"imp-start","target":false,"target-prog":"#f","time":4994.728759765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 58.4777282854856) (47552 0.40017870550090595) ((34496 0.5765238769986522 (+ (- (* (pow x 3.0) (fma (pow p 3.0) -0.16666666666666666 (* p (+ (* p 0.5) -0.3333333333333333)))) (* x (- p (* x (* p (+ 0.5 (* p -0.5))))))) (* (pow x 4.0) (* (pow p 3.0) (+ 0.25 (* p -0.041666666666666664)))))) (34048 0.5274869263760121 (- (* (pow x 3.0) (+ (* 0.5 (pow p 2.0)) (+ (* p -0.3333333333333333) (* (pow p 3.0) -0.16666666666666666)))) (+ (* x p) (* (pow x 2.0) (+ (* p -0.5) (* 0.5 (pow p 2.0))))))) (20928 0.527122477142715 (- (* (pow x 3.0) (fma (pow p 3.0) -0.16666666666666666 (* p (+ (* p 0.5) -0.3333333333333333)))) (* x (- p (* x (* p (+ 0.5 (* p -0.5)))))))) (7104 0.7909044196447357 (* (* x p) (- -1.0 (* x (fma p 0.5 -0.5))))) (832 0.7879631342888259 (* x (- (* x (* p (+ 0.5 (* p -0.5)))) p))) (256 1.4942948205287736 (* x (- p))) (64 60.59352576262376 0.0)))","end":0.40017870550090595,"end-est":0.14910071169933534,"identifier":"#f","input":"(- 1.0 (pow (+ 1.0 x) p))","link":"b7e5a04489ea59cac6b5b4ccd8ea9d90b23410a5.1.6","name":"1 - (1 + x)^p","output":"(- (- (* (pow x 3.0) (fma (pow p 3.0) -0.16666666666666666 (* p (+ (* p 0.5) -0.3333333333333333)))) (* x (- p (* x (* p (+ 0.5 (* p -0.5))))))) (* (fma p (fma p 0.4583333333333333 -0.25) (* (pow p 3.0) (+ -0.25 (* p 0.041666666666666664)))) (pow x 4.0)))","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= 1.0 p) (<= p 20.0)))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (pow (+ 1.0 x) p))","start":58.4777282854856,"start-est":59.07557380115722,"status":"imp-start","target":false,"target-prog":"#f","time":15691.526611328125,"vars":["x","p"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 58.553258517585576) (20096 0.38861826288463813) ((13696 0.3880411038123194 (fma -241.82983750000008 (pow x 4.0) (* x (+ -10.3 (* x (+ -47.89500000000001 (* x -132.50950000000003))))))) (13632 0.5228959034477294 (+ (* -47.89500000000001 (pow x 2.0)) (+ (* x -10.3) (* -132.50950000000003 (pow x 3.0))))) (7104 0.5233053202463814 (+ (* x -10.3) (* (fma x -132.50950000000003 -47.89500000000001) (* x x)))) (704 0.5225319823330771 (* x (+ -10.3 (* x (+ -47.89500000000001 (* x -132.50950000000003)))))) (448 0.8192634095442776 (* x (+ -10.3 (* x -47.89500000000001)))) (192 1.5092323486903392 (* x -10.3))))","end":0.38861826288463813,"end-est":0.646281540081389,"identifier":"#f","input":"(- 1.0 (pow (+ 1.0 x) 10.3))","link":"cbbc0085a304bcf9a700964f1fecffa034b2e372.1.6","name":"1 - (1 + x)^10.3","output":"(fma -241.82983750000008 (pow x 4.0) (+ (* x -10.3) (* (fma x -132.50950000000003 -47.89500000000001) (* x x))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (pow (+ 1.0 x) 10.3))","start":58.553258517585576,"start-est":58.127814291489315,"status":"imp-start","target":false,"target-prog":"#f","time":13886.675537109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 59.11864916875042) (13696 0.0478609165513013) ((7104 0.11480563743717898 (+ (* x -10.3) (* (fma x -132.50950000000003 -47.89500000000001) (* x x)))) (704 0.1163207213808519 (* x (+ -10.3 (* x (+ -47.89500000000001 (* x -132.50950000000003)))))) (448 0.32154731840164685 (* x (+ -10.3 (* x -47.89500000000001)))) (192 1.0332994014540913 (* x -10.3))))","end":0.0478609165513013,"end-est":0.1205719851137974,"identifier":"#f","input":"(- 1.0 (pow (+ 1.0 x) 10.3))","link":"a17209f52050c7e9196aa04e225c4cd23aff4f22.1.6","name":"1 - (1 + x)^10.3","output":"(fma -241.82983750000008 (pow x 4.0) (* x (+ -10.3 (* x (+ -47.89500000000001 (* x -132.50950000000003))))))","pre":"(and (<= -0.001 x) (<= x 0.001))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (pow (+ 1.0 x) 10.3))","start":59.11864916875042,"start-est":58.704386157443786,"status":"imp-start","target":false,"target-prog":"#f","time":13670.729736328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.06037517489685902) (6784 0.06037517489685902) ((832 0.9667607032900648 (+ 2.0 (* x (+ 10.0 (* x (+ 45.0 (* x 120.0))))))) (320 1.3141786018933155 (+ 2.0 (* x 10.0))) (64 1.9844870565663901 2.0)))","end":0.06037517489685902,"end-est":0.056678808610652096,"identifier":"#f","input":"(+ 1.0 (pow (+ 1.0 x) 10.0))","link":"a6ededbde4092b7665ba4b446643d87e6ec9c8ef.1.6","name":"1 + (1 + x)^10","output":"(+ 1.0 (pow (+ 1.0 x) 10.0))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (pow (+ 1.0 x) 10.0))","start":0.06037517489685902,"start-est":0.056678808610652096,"status":"ex-start","target":false,"target-prog":"#f","time":4477.953857421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((25920 0.000875) (25920 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(- (pow (fabs x) 10.3) (pow (fabs y) 10.3))","link":"d5cf9d11107d6e96c1c70886faf94deec32ef7f5.1.6","name":"abs(x)^10.3 - abs(y)^10.3","output":"(- (pow (fabs x) 10.3) (pow (fabs y) 10.3))","pre":"(and (and (<= 0.0 x) (<= x 10.0)) (and (<= 0.0 y) (<= y 10.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow (fabs x) 10.3) (pow (fabs y) 10.3))","start":0.000875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3176.430419921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20224 16.982443311849927) (26304 0.249429700005769) ((19584 0.34354195079355376 (pow (/ (hypot a c) (hypot a b)) -2.0)) (19584 0.33644191876117824 (pow (/ (hypot a b) (hypot a c)) 2.0)) (14152 14.748771708327146 (if (<= (* a a) 1e-292) (pow (/ b (hypot a c)) 2.0) (if (<= (* a a) 1e-188) (/ (fma a a (* b b)) (* a a)) (pow (/ (- (* -0.5 (/ b (/ a b))) a) (hypot a c)) 2.0)))) (14028 14.958372293977694 (if (<= a 1.282224915589227e-183) (pow (/ b (hypot a c)) 2.0) (if (<= a 2.7670518183309344e-139) (pow (/ (hypot a b) (- (* -0.5 (/ a (/ c a))) c)) 2.0) (if (<= a 8.822343371789586e-95) (/ (fma a a (* b b)) (* a a)) (pow (/ (- (* -0.5 (/ b (/ a b))) a) (hypot a c)) 2.0))))) (13380 14.88546617262812 (if (<= (* a a) 1e-292) (pow (/ b (hypot a c)) 2.0) (if (<= (* a a) 1e-188) (/ (fma a a (* b b)) (* a a)) (/ a (/ (fma c c (* a a)) a))))) (13252 15.261041943148237 (if (<= a 2.7670518183309344e-139) (pow (/ (hypot a b) c) 2.0) (if (<= a 8.822343371789586e-95) (/ (fma a a (* b b)) (* a a)) (/ a (/ (fma c c (* a a)) a))))) (7300 19.148046787712456 (if (<= a 8.093001044957313e-147) (pow (/ b (- (* -0.5 (/ a (/ c a))) c)) 2.0) (if (<= a 8.822343371789586e-95) (/ (fma a a (* b b)) (* a a)) (/ a (/ (fma c c (* a a)) a))))) (7240 19.328928461106024 (if (<= a 2.3541626539095683e-145) (/ (/ b c) (/ c b)) (if (<= a 8.822343371789586e-95) (- 1.0 (- (* (- 1.0 (/ (- (* c c) (* b b)) (* a a))) (* (/ c a) (/ c a))) (* b (/ b (* a a))))) (* a (/ a (fma c c (* a a))))))) (7240 19.277039580166385 (if (<= a 2.3541626539095683e-145) (/ (/ b c) (/ c b)) (if (<= a 8.822343371789586e-95) (- 1.0 (- (* (- 1.0 (/ (- (* c c) (* b b)) (* a a))) (* (/ c a) (/ c a))) (* b (/ b (* a a))))) (/ a (/ (fma c c (* a a)) a))))) (7240 19.170310154395303 (if (<= a 2.3541626539095683e-145) (/ (/ b c) (/ c b)) (if (<= a 8.822343371789586e-95) (/ (fma a a (* b b)) (* a a)) (/ a (/ (fma c c (* a a)) a))))) (2244 19.23255406444308 (if (<= (* a a) 1e-289) (/ (/ b c) (/ c b)) (- 1.0 (- (* (- 1.0 (/ (- (* c c) (* b b)) (* a a))) (* (/ c a) (/ c a))) (* b (/ b (* a a))))))) (1744 23.875211027527897 (if (<= (* a a) 3e-310) (/ (/ b c) (/ c b)) (if (<= (* a a) 1e-277) (/ (+ (* b b) (* a a)) (* c c)) (if (<= (* a a) 1e-183) 1.0 (if (<= (* a a) 2e-170) (/ (+ (* b b) (* a a)) (* c c)) 1.0))))) (1348 19.374455042150625 (if (<= (* a a) 1e-289) (/ (/ b c) (/ c b)) (+ 1.0 (- (* (/ b a) (/ b a)) (* (/ c a) (/ c a)))))) (1092 19.36089761094996 (if (<= (* a a) 1e-289) (/ (/ b c) (/ c b)) (- 1.0 (/ (- (* c c) (* b b)) (* a a))))) (708 24.119112683700624 (if (<= (* a a) 1e-289) (/ (/ b c) (/ c b)) 1.0)) (580 29.316446051716035 (if (<= a 8.093001044957313e-147) (* b (/ b (* c c))) 1.0)) (580 25.110087565851185 (if (<= a 2.3541626539095683e-145) (/ (* b (/ b c)) c) 1.0)) (64 39.72612330440202 1.0)))","end":0.249429700005769,"end-est":0.28353500976844204,"identifier":"#f","input":"(pow (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 2.0)","link":"b53034019f2c41d6544735bdc109c14d96707b43.1.6","name":"pow(sqrt(a*a + b*b)/sqrt(a*a+c*c), 2)","output":"(/ (/ (hypot a b) (hypot a c)) (/ (hypot a c) (hypot a b)))","pre":"(and (and (and (<= 0.0 a) (<= a 1000000000.0)) (and (<= 0.0 b) (<= b 1000000000.0))) (and (<= 0.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 2.0)","start":16.982443311849927,"start-est":17.47709736720831,"status":"imp-start","target":false,"target-prog":"#f","time":14949.214111328125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 37.55600360489875) (13120 0.01125) ((7436 18.46066465921914 (if (<= (* a a) 2e-242) (/ b c) (if (<= (* a a) 1e-163) (/ (hypot b a) a) (if (<= (* a a) 5e-80) (/ b c) (/ (hypot b a) a))))) (6916 14.979282012170279 (if (<= (* c c) 5e-80) (/ (hypot b a) a) (/ (hypot b a) c))) (712 24.482891600899038 (if (<= (* a a) 5e-80) (/ b c) (if (<= (* a a) 2e+171) (/ b a) 1.0))) (324 36.98279844005748 (if (<= b 6.075961763220854e+98) 1.0 (/ b a))) (64 39.44992560557105 1.0)))","end":0.01125,"end-est":0.0078125,"identifier":"#f","input":"(/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c))))","link":"ed8677e53b675be3fc702e6097621f649675b29a.1.6","name":"sqrt(a*a + b*b)/sqrt(a*a+c*c)","output":"(/ (hypot a b) (hypot a c))","pre":"(and (and (and (<= 0.0 a) (<= a 1.79e+308)) (and (<= 0.0 b) (<= b 1.79e+308))) (and (<= 0.0 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c))))","start":37.55600360489875,"start-est":39.80349932738507,"status":"imp-start","target":false,"target-prog":"#f","time":6331.15380859375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 47.63112096434551) (61004 6.804846192300934) ((98824 12.4213045383755 (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (+ (log (/ (sqrt (hypot a b)) (pow (cbrt (hypot a c)) 2.0))) (log (/ (sqrt (hypot a b)) (cbrt (hypot a c))))) (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (+ (log (/ (sqrt (hypot a b)) (pow (cbrt (hypot a c)) 2.0))) (log (/ (sqrt (hypot a b)) (cbrt (hypot a c)))))))) (59140 12.687576938057473 (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (- (log (/ (hypot a b) (sqrt (hypot a c)))) (log (sqrt (hypot a c)))) (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (- (log (hypot a b)) (log (hypot a c)))))) (53576 12.178366008567973 (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (- (log (hypot a b)) (log (hypot a c))) (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 1.0) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (- (log (hypot a b)) (log (hypot a c)))))) (20496 18.860163113907777 (if (<= (* a a) 2e-234) (- (log b) (log (hypot c a))) (if (<= (* a a) 5e-110) (- (log (hypot a b)) (log c)) (if (<= (* a a) 2e+17) (- (log b) (log (hypot c a))) (if (<= (* a a) 1e+147) (- (log (hypot a b)) (log c)) (* 0.5 (- (pow (/ b a) 2.0) (pow (/ c a) 2.0)))))))) (19852 19.396024818949464 (if (<= a 1.721863265221245e-113) (- (log b) (log (hypot c a))) (if (<= a 5.6183171600891435e-58) (log (/ (hypot b a) c)) (if (<= a 372703758.2176515) (- (log b) (log (hypot c a))) (if (<= a 2.872367711731838e+73) (log (/ (hypot b a) c)) (if (<= a 9.854935390458576e+91) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (if (<= a 1.9261529758105167e+124) (log (/ (hypot a b) a)) (* 0.5 (- (pow (/ b a) 2.0) (pow (/ c a) 2.0)))))))))) (14032 21.67791511249881 (if (<= a 1.721863265221245e-113) (- (log b) (log c)) (if (<= a 5.6183171600891435e-58) (log (/ (hypot b a) c)) (if (<= a 372703758.2176515) (log (/ b (hypot a c))) (if (<= a 2.872367711731838e+73) (log (/ (hypot b a) c)) (* 0.5 (- (pow (/ b a) 2.0) (pow (/ c a) 2.0)))))))) (13772 25.030389839772912 (if (<= (* a a) 1e-211) (- (log b) (log c)) (if (<= (* a a) 2e-152) (log (/ a (hypot a c))) (if (<= (* a a) 2e+64) (- (log b) (log c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c))))))) (13584 21.788415640404086 (if (<= a 1.721863265221245e-113) (- (log b) (log c)) (if (<= a 5.6183171600891435e-58) (log (/ (hypot b a) c)) (if (<= a 372703758.2176515) (log (/ b (hypot a c))) (if (<= a 2.872367711731838e+73) (log (/ (hypot b a) c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c)))))))) (13576 21.69112485416147 (if (<= (* a a) 5e-226) (- (log b) (log c)) (if (<= (* a a) 1e+147) (log (/ (hypot b a) c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c)))))) (13252 24.305214686727837 (if (<= (* a a) 2e+64) (- (log b) (log c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c))))) (7372 39.719835515482075 (if (<= (* a a) 5e-115) (log (/ a c)) (if (<= (* a a) 2e+81) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (if (<= (* a a) 1e+147) (log (/ a c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c))))))) (7372 28.06640987397256 (if (<= (* a a) 1e-211) (log (/ b c)) (if (<= (* a a) 2e-152) (log (/ a c)) (if (<= (* a a) 5e+30) (log (/ b c)) (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c))))))) (960 42.24775650993928 (* (/ 0.5 a) (* (+ b c) (* (- b c) (/ 1.0 a))))) (836 46.532755998391146 (if (<= (* b b) 1e-248) (* c (/ (* c -0.5) (* a a))) (* 0.5 (* (/ b a) (/ b a))))) (836 45.33528758054793 (if (<= (* b b) 1e-248) (* (/ c (/ a c)) (/ -0.5 a)) (* 0.5 (* (/ b a) (/ b a))))) (836 45.201919751617595 (if (<= (* b b) 1e-248) (* -0.5 (* (/ c a) (/ c a))) (* 0.5 (* (/ b a) (/ b a))))) (832 42.22871464390855 (/ (/ 0.5 a) (/ (/ a (+ b c)) (- b c)))) (576 47.76421031381718 (* (/ 0.5 a) (* b (/ b a)))) (576 47.57240585435196 (* 0.5 (* (/ b a) (/ b a))))))","end":6.804846192300934,"end-est":6.817226842900435,"identifier":"#f","input":"(log (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))))","link":"4a989f7ed74b3fef4e693b84af6b2872bdce7fb1.1.6","name":"log(sqrt(a*a + b*b)/sqrt(a*a+c*c))","output":"(if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 0.002) (- (log (hypot a b)) (log c)) (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) 2.0) (/ 0.5 (/ (/ (* a a) (+ b c)) (- b c))) (if (<= (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))) INFINITY) (- (log b) (log (hypot c a))) (log (/ (hypot a b) (hypot a c))))))","pre":"(and (and (and (<= 0.0 a) (<= a 1.79e+308)) (and (<= 0.0 b) (<= b 1.79e+308))) (and (<= 0.0 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (/ (sqrt (+ (* a a) (* b b))) (sqrt (+ (* a a) (* c c)))))","start":47.63112096434551,"start-est":43.2800337880451,"status":"imp-start","target":false,"target-prog":"#f","time":25611.5869140625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin x)","link":"a306fd6e20ac7edd528d33a02bed1bc1fa699ac2.1.6","name":"sin(x)","output":"(sin x)","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(sin x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2604.749267578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ 0.1 0.2)","link":"968637834cdbb38de5968b92202b4f8cf4586978.1.6","name":"0.1 + 0.2","output":"0.30000000000000004","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 0.1 0.2)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":957.244384765625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((7936 0.32731392538812293) (13632 0.028011842188131016) ((7616 0.32721672444079003 (* (/ x 0.135) (+ 1.0 (/ 21972.65625 (+ 1.0 (/ 0.00248 (* (exp (* -81433.22475570033 (* x x))) 0.368))))))) (704 0.423748566951435 (+ (* x (* x (* x -88129314.02423395))) (* x 161678.30282236458))) (576 0.42381696733027807 (* x (+ (* x (* x -88129314.02423395)) 161678.30282236458))) (192 0.7358306742853826 (* x 161678.30282236458))))","end":0.028011842188131016,"end-est":0.0078125,"identifier":"#f","input":"(* (/ x 0.135) (+ (/ (/ 0.135 6.144e-6) (+ (/ 0.00248 (* (exp (/ (- (* x x)) (* 2.0 6.14e-6))) 0.368)) 1.0)) 1.0))","link":"064271fa109fbd2ec53bb1de228af6ec3a8badc0.1.6","name":"(x / 0.135) * ((0.135 / 6.144e-6) / (0.00248 / (exp(-(x*x)/(2*6.14e-6)) * 0.368) + 1.0) + 1.0)","output":"(* x (+ 7.4074074074074066 (/ 162760.41666666666 (fma 0.006739130434782609 (exp (* x (* x 81433.22475570033))) 1.0))))","pre":"(and (<= -0.05 x) (<= x 0.05))","prec":"binary64","preprocess":"()","spec":"(* (/ x 0.135) (+ (/ (/ 0.135 6.144e-6) (+ (/ 0.00248 (* (exp (/ (- (* x x)) (* 2.0 6.14e-6))) 0.368)) 1.0)) 1.0))","start":0.32731392538812293,"start-est":0.30306625976844204,"status":"ex-start","target":false,"target-prog":"#f","time":5626.52978515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7936 0.34239624062518026) (6848 0.004) ((704 0.004 (+ (* x (* -8.342112929344086e-6 (* x x))) (* x 162606.32049615026))) (192 0.023809137640123868 (* x 162606.32049615026))))","end":0.004,"end-est":0.00390625,"identifier":"#f","input":"(* (/ x 0.135) (+ (/ (/ 0.135 6.15e-6) (+ (/ 6.14e-6 (* (exp (* (/ (* (- x) x) 2.0) 6.15e-6)) 0.368)) 1.0)) 1.0))","link":"47616f1a54f44532d5ecc3014df932661243deb3.1.6","name":"x / 0.135 * ((0.135/6.15e-6) / (6.14e-6 / (exp(-x*x/2*6.15e-6) * 0.368) + 1.0) + 1.0)","output":"(* x (fma -8.342112929344086e-6 (* x x) 162606.32049615026))","pre":"(and (<= -0.05 x) (<= x 0.05))","prec":"binary64","preprocess":"()","spec":"(* (/ x 0.135) (+ (/ (/ 0.135 6.15e-6) (+ (/ 6.14e-6 (* (exp (* (/ (* (- x) x) 2.0) 6.15e-6)) 0.368)) 1.0)) 1.0))","start":0.34239624062518026,"start-est":0.30078125,"status":"ex-start","target":false,"target-prog":"#f","time":4668.456298828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 7.057969432023326) (72452 6.349994487014624) ((27144 6.349254039560201 (if (<= (/ y2 x2) -1e+210) (fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI)) (if (<= (/ y2 x2) -20000000.0) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (fma (/ y1 x1) (/ y2 x2) 1.0)) (* 2.0 PI)) (fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI))))) (26176 7.057969432023326 (fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI))) (21004 11.785070476891494 (if (<= (/ y2 x2) (- INFINITY)) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) 1.0) (* 2.0 PI)) (if (<= (/ y2 x2) -0.001) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (/ (* y2 y1) (* x2 x1))) (* 2.0 PI)) (if (<= (/ y2 x2) 50000000.0) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) 1.0) (* 2.0 PI)) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (/ (* y2 y1) (* x2 x1))) (* 2.0 PI)))))) (20744 10.133890804578167 (if (<= (/ y1 x1) -2000000.0) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (* y1 (/ (/ y2 x2) x1))) (* 2.0 PI)) (if (<= (/ y1 x1) 0.5) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) 1.0) (* 2.0 PI)) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (* y1 (/ (/ y2 x2) x1))) (* 2.0 PI))))) (19840 14.792662172279561 (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) 1.0) (* 2.0 PI)))))","end":6.349994487014624,"end-est":5.4677809467044405,"identifier":"#f","input":"(fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI))","link":"59580bef87a438b983be19e4855abd8245e6bb6c.1.6","name":"fmod(atan(y1/x1) - atan(y2/x2), 2*PI)","output":"(if (<= (/ y2 x2) -1e+210) (fmod (/ (- (pow (atan (/ y1 x1)) 3.0) (pow (atan (/ y2 x2)) 3.0)) (+ (pow (atan (/ y1 x1)) 2.0) (* (atan (/ y2 x2)) (+ (atan (/ y1 x1)) (atan (/ y2 x2)))))) (* 2.0 PI)) (if (<= (/ y2 x2) -20000000.0) (fmod (atan2 (- (/ y1 x1) (/ y2 x2)) (fma (/ y1 x1) (/ y2 x2) 1.0)) (* 2.0 PI)) (fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI))))","pre":"(and (and (and (and (<= -1.79e+308 y1) (<= y1 1.79e+308)) (and (<= -1.79e+308 x1) (<= x1 1.79e+308))) (and (<= -1.79e+308 y2) (<= y2 1.79e+308))) (and (<= -1.79e+308 x2) (<= x2 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(fmod (- (atan (/ y1 x1)) (atan (/ y2 x2))) (* 2.0 PI))","start":7.057969432023326,"start-est":6.744377900346748,"status":"apx-start","target":false,"target-prog":"#f","time":10784.733154296875,"vars":["y1","x1","y2","x2"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.003625) (6592 0.003625) ())","end":0.003625,"end-est":0.01171875,"identifier":"#f","input":"(atan (/ y x))","link":"8b8ced5247211ba12bfdbce0342747abad68b64d.1.6","name":"atan(y/x)","output":"(atan (/ y x))","pre":"(and (and (<= -1.79e+308 y) (<= y 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(atan (/ y x))","start":0.003625,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2181.83544921875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0) (12992 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (sqrt (* x x)) (sqrt (* y y)))","link":"2225705bf671ce37f2ee46a7693e92169336f33b.1.6","name":"sqrt(x*x)+sqrt(y*y)","output":"(+ (fabs x) (fabs y))","pre":"(and (and (<= 1.0 x) (<= x 100.0)) (and (<= 1.0 y) (<= y 100.0)))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (* x x)) (sqrt (* y y)))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2104.256591796875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.4915153959498438) (19712 0.3129979632740824) ((13376 0.4425215975012552 (/ (* z (* 0.1 (log (/ x y)))) (log 0.9))) (13376 0.3950124222679908 (* z (* (/ 0.1 (log 0.9)) (log (/ x y))))) (13248 0.9231652567567691 (/ (* z (log (/ x y))) (log1p -0.6513215599))) (13248 0.48427892875450096 (* (log (/ x y)) (/ z (log 0.3486784401000001))))))","end":0.3129979632740824,"end-est":0.33203125,"identifier":"#f","input":"(/ (/ (* z (log (/ x y))) (log 0.9)) 10.0)","link":"1aa50911a3c72d16d7c91f4773f6eda4f758a884.1.6","name":"z * log(x / y) / log(0.9) / 10","output":"(* z (log (pow (/ x y) (/ 0.1 (log 0.9)))))","pre":"(and (and (and (<= -1000.0 z) (<= z 1000.0)) (and (<= 0.0 x) (<= x 10000.0))) (and (<= 0.0 y) (<= y 10000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (/ (* z (log (/ x y))) (log 0.9)) 10.0)","start":0.4915153959498438,"start-est":0.4658775879159782,"status":"ex-start","target":false,"target-prog":"#f","time":18812.576416015625,"vars":["z","x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((26112 1.2930130704206246) (7168 0.42847913594209763) ((7168 0.4376466171924582 (+ (/ (/ y x) (/ x y)) (pow (/ x y) 2.0))) (1240 27.93961291585708 (if (<= x -190000000000.0) (/ x (* y (/ y x))) (if (<= x -2.5e-62) (* (/ y x) (/ y x)) (if (<= x -4.5e-192) (/ (* x (/ x y)) y) (if (<= x 3.8e-160) (* (/ y x) (/ y x)) (if (<= x 5500000.0) (/ (* x (/ x y)) y) (if (<= x 6.2e+230) (* (/ y x) (/ y x)) (/ x (* y (/ y x)))))))))) (1240 27.917150074155487 (if (<= x -190000000000.0) (/ (/ x y) (/ y x)) (if (<= x -2.5e-62) (* (/ y x) (/ y x)) (if (<= x -4.5e-192) (/ (* x (/ x y)) y) (if (<= x 3.8e-160) (* (/ y x) (/ y x)) (if (<= x 5500000.0) (/ (* x (/ x y)) y) (if (<= x 6.2e+230) (* (/ y x) (/ y x)) (/ (/ x y) (/ y x))))))))) (1240 27.910669074542167 (if (<= x -190000000000.0) (/ (/ x y) (/ y x)) (if (<= x -2.5e-62) (* y (/ y (* x x))) (if (<= x -4.5e-192) (/ (* x (/ x y)) y) (if (<= x 3.8e-160) (* (/ y x) (/ y x)) (if (<= x 5500000.0) (/ (* x (/ x y)) y) (if (<= x 6.2e+230) (* (/ y x) (/ y x)) (/ (/ x y) (/ y x))))))))) (1240 27.91222651956665 (if (<= x -190000000000.0) (/ (/ x y) (/ y x)) (if (<= x -2.5e-62) (/ (* y (- y)) (* x (- x))) (if (<= x -4.5e-192) (/ (* x (/ x y)) y) (if (<= x 3.8e-160) (* (/ y x) (/ y x)) (if (<= x 5500000.0) (/ (* x (/ x y)) y) (if (<= x 6.2e+230) (* (/ y x) (/ y x)) (/ (/ x y) (/ y x))))))))) (712 32.12437066935584 (if (<= x -1e+185) (/ x (* y (/ y x))) (if (<= x 5e+230) (/ (* x (/ x y)) y) (/ x (* y (/ y x)))))) (448 35.568709697915146 (/ x (* y (/ y x))))))","end":0.42847913594209763,"end-est":0.40625,"identifier":"#f","input":"(pow (cbrt (pow (hypot (/ y x) (/ x y)) 2.0)) 3.0)","link":"a814c40e229068f1151e15fdb8b4b6cd0b4fa386.1.6","name":"pow(cbrt(pow(hypot((y / x), (x / y)), 2)), 3)","output":"(+ (pow (/ y x) 2.0) (/ (/ x y) (/ y x)))","pre":"(and (and (<= -1.79e+308 y) (<= y 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(pow (cbrt (pow (hypot (/ y x) (/ x y)) 2.0)) 3.0)","start":1.2930130704206246,"start-est":1.3560713983845507,"status":"apx-start","target":false,"target-prog":"#f","time":9307.692626953125,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.5103451140723265) (7168 0.42847913594209763) ((7168 0.4376466171924582 (+ (pow (/ x y) 2.0) (/ (/ y x) (/ x y)))) (1504 28.17833481729864 (if (<= x -190000000000.0) (* (/ x y) (/ x y)) (if (<= x -1.7e-71) (/ (* y (/ y x)) x) (if (<= x -4.5e-192) (* (/ x y) (/ x y)) (if (<= x 3.8e-160) (/ (* y (/ y x)) x) (if (<= x 5500000.0) (* (/ x y) (/ x y)) (if (<= x 8.6e+123) (/ y (/ (* x x) y)) (if (<= x 9.8e+137) (* (/ x y) (/ x y)) (if (<= x 7.3e+174) (/ (* y (/ y x)) x) (* (/ x y) (/ x y))))))))))) (1368 28.03190545678682 (if (<= x -190000000000.0) (* (/ x y) (/ x y)) (if (<= x -1.7e-71) (/ (* y (/ y x)) x) (if (<= x -4.5e-192) (* (/ x y) (/ x y)) (if (<= x 3.8e-160) (/ (* y (/ y x)) x) (if (<= x 5500000.0) (* (/ x y) (/ x y)) (if (<= x 6.2e+230) (* y (* (/ y x) (/ 1.0 x))) (* (/ x y) (/ x y))))))))) (1240 27.901041957203695 (if (<= x -190000000000.0) (* (/ x y) (/ x y)) (if (<= x -1.7e-71) (/ (* y (/ y x)) x) (if (<= x -4.5e-192) (* (/ x y) (/ x y)) (if (<= x 3.8e-160) (/ (* y (/ y x)) x) (if (<= x 9.8e+137) (* (/ x y) (/ x y)) (if (<= x 7.3e+174) (/ (* y (/ y x)) x) (* (/ x y) (/ x y))))))))) (1240 28.037102668978505 (if (<= x -190000000000.0) (* (/ x y) (/ x y)) (if (<= x -1.7e-71) (/ (* y (/ y x)) x) (if (<= x -4.5e-192) (* (/ x y) (/ x y)) (if (<= x 3.8e-160) (/ (* y (/ y x)) x) (if (<= x 5500000.0) (* (/ x y) (/ x y)) (if (<= x 6.2e+230) (* (/ y x) (/ y x)) (* (/ x y) (/ x y))))))))) (960 0.5059864671953431 (+ (* (/ x y) (/ x y)) (* (/ y x) (/ y x)))) (448 44.68196898182133 (/ (/ (* y y) x) x)) (448 35.84490672715846 (/ (* y (/ y x)) x))))","end":0.42847913594209763,"end-est":0.40625,"identifier":"#f","input":"(pow (hypot (/ y x) (/ x y)) 2.0)","link":"7135dffb9a579c7def79f46f8fa8b527a603d747.1.6","name":"pow(hypot(y/x, x/y), 2)","output":"(+ (/ (/ x y) (/ y x)) (pow (/ y x) 2.0))","pre":"(and (and (<= -1.79e+308 y) (<= y 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(pow (hypot (/ y x) (/ x y)) 2.0)","start":0.5103451140723265,"start-est":0.502948779305326,"status":"ex-start","target":false,"target-prog":"#f","time":8400.919921875,"vars":["y","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26304 36.3173862030968) (26112 1.3071482843121258) ((14024 12.356170580747381 (if (<= y 1e-250) (pow (/ x y) 2.0) (if (<= y 1e-31) (+ (* (/ 1.0 y) (/ (* x x) y)) (pow (pow (/ x y) 2.0) -1.0)) (fma y (/ (/ y x) x) (* (/ x y) (/ x y)))))) (7496 12.342672647930996 (if (<= y 1e-250) (pow (/ x y) 2.0) (if (<= y 1e-25) (+ (* (/ 1.0 y) (/ (* x x) y)) (* (/ y x) (/ y x))) (fma y (/ (/ y x) x) (* (/ x y) (/ x y)))))) (6788 15.144160817459804 (if (<= x -1e+155) (pow (/ x y) 2.0) (+ (* (/ 1.0 y) (/ (* x x) y)) (* (/ y x) (/ y x))))) (1504 38.74098781559571 (if (<= x -1e+235) (/ (* x (/ x y)) y) (if (<= x -7.5e+135) (/ x (/ (* y y) x)) (if (<= x -1.35e+39) (* y (/ y (* x x))) (if (<= x -4.2e+21) (/ (* x (/ x y)) y) (if (<= x -1e-12) (* y (/ y (* x x))) (if (<= x -2.65e-99) (/ (/ (* x x) y) y) (if (<= x -5.9e-133) (* y (/ y (* x x))) (if (<= x 2.5e-162) (/ (* x (/ x y)) y) (* y (/ y (* x x)))))))))))) (1372 37.148781662400644 (if (<= x -7.5e+135) (* x (* (/ x y) (/ 1.0 y))) (if (<= x -1.35e+39) (* y (/ y (* x x))) (if (<= x -4.2e+21) (/ (* x (/ x y)) y) (if (<= x -1e-12) (* y (/ y (* x x))) (if (<= x -2.65e-99) (/ (/ (* x x) y) y) (if (<= x -5.9e-133) (* y (/ y (* x x))) (if (<= x 2.5e-162) (/ (* x (/ x y)) y) (* y (/ y (* x x))))))))))) (1220 15.147644410856529 (if (<= x -1e+155) (* x (* (/ x y) (/ 1.0 y))) (+ (* (/ 1.0 y) (/ (* x x) y)) (* (/ y x) (/ y x))))) (844 42.706784411176514 (if (<= x -7.5e+135) (/ x (/ (* y y) x)) (if (<= x -1.35e+39) (* y (/ y (* x x))) (if (<= x -4.2e+21) (/ x (/ (* y y) x)) (* y (/ y (* x x))))))) (844 38.861619702182104 (if (<= y 6.5e-69) (/ (/ (* x x) y) y) (if (<= y 4.7e-50) (* y (/ y (* x x))) (if (<= y 6e-30) (/ (/ (* x x) y) y) (* y (/ y (* x x))))))) (448 44.41349511948511 (* y (/ y (* x x))))))","end":1.3071482843121258,"end-est":1.3147325960316985,"identifier":"#f","input":"(+ (/ (pow x 2.0) (pow y 2.0)) (/ (pow y 2.0) (pow x 2.0)))","link":"0bad6da8ac1de4dcf2f0ce3530019622d909dd1e.1.6","name":"pow(x,2)/pow(y,2) + pow(y,2)/pow(x,2)","output":"(pow (cbrt (pow (hypot (/ y x) (/ x y)) 2.0)) 3.0)","pre":"(and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (pow x 2.0) (pow y 2.0)) (/ (pow y 2.0) (pow x 2.0)))","start":36.3173862030968,"start-est":35.73233311245913,"status":"imp-start","target":false,"target-prog":"#f","time":9794.48388671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13952 0.44901297188996475) (19840 0.205875) ((13888 0.4398642875137027 (* (* -2.0 (sqrt (/ 1.0 (+ n (* n n))))) (sqrt (/ 1.0 (* m (+ m 1.0)))))) (13632 41.95061660539416 (* (/ (sqrt (/ 1.0 (fma n n n))) m) (+ -2.0 (/ 1.0 m)))) (13568 46.863109966656765 (* -2.0 (/ (+ (+ 1.0 (pow (fma n n n) -0.5)) -1.0) m))) (13504 46.86310996665671 (* -2.0 (* (/ -1.0 (hypot n (sqrt n))) (/ 1.0 (- m))))) (13376 46.863109966656715 (* (sqrt (/ 1.0 (fma n n n))) (/ -2.0 m))) (13312 46.8631099666567 (* -2.0 (/ (pow (fma n n n) -0.5) m))) (7936 46.92779776371671 (* -2.0 (/ (+ (* (/ 1.0 (* n n)) (+ -0.5 (/ 0.375 n))) (+ (/ -0.3125 (pow n 4.0)) (/ 1.0 n))) m))) (832 47.10628161566768 (* -2.0 (/ (- (/ -0.5 (* n n)) (/ -1.0 n)) m))) (832 47.10628161566768 (* -2.0 (* (+ 1.0 (/ -0.5 n)) (/ 1.0 (* m n))))) (448 48.61396264316651 (* -2.0 (/ 1.0 (* m n))))))","end":0.205875,"end-est":0.234375,"identifier":"#f","input":"(* (* (- 2.0) (sqrt (/ 1.0 (+ n (* n n))))) (sqrt (/ 1.0 (+ m (* m m)))))","link":"9ee2b4df4adb06a80de6359617ad9c8cf3b50027.1.6","name":"-2*sqrt(1/(n+n*n))*sqrt(1/(m+m*m))","output":"(* -2.0 (pow (* (fma m m m) (fma n n n)) -0.5))","pre":"(and (and (<= 1.0 n) (<= n 500.0)) (and (<= 1.0 m) (<= m 500.0)))","prec":"binary64","preprocess":"()","spec":"(* (* (- 2.0) (sqrt (/ 1.0 (+ n (* n n))))) (sqrt (/ 1.0 (+ m (* m m)))))","start":0.44901297188996475,"start-est":0.46912006837909415,"status":"ex-start","target":false,"target-prog":"#f","time":9644.199462890625,"vars":["n","m"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 29.880982520403037) (704 1.088267371594106) ((320 1.360109105445733 (* (* x x) -0.16666666666666666)) (64 31.45840590429471 0.0)))","end":1.088267371594106,"end-est":1.1447640402067922,"identifier":"#f","input":"(- (/ x (sinh x)) 1.0)","link":"44cf1a0379899f142780971544b340f81451e0d9.1.6","name":"x/sinh(x)-1","output":"(* (* x x) (+ -0.16666666666666666 (* (* x x) 0.019444444444444445)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (/ x (sinh x)) 1.0)","start":29.880982520403037,"start-est":29.943850281352972,"status":"imp-start","target":false,"target-prog":"#f","time":6315.428955078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.11022669383833) (20480 0.46050308425682074) ((320 0.9734568051510619 (* x (* x -0.16666666666666666))) (320 0.9840308135326012 (* -0.16666666666666666 (* x x))) (64 31.257575198902863 0.0)))","end":0.46050308425682074,"end-est":0.8918676634939389,"identifier":"#f","input":"(- (/ x (sinh x)) 1.0)","link":"948cf90413706e7896b4a43a5325611ca3f7daf5.1.6","name":"x/sinh(x)-1","output":"(+ (* 0.019444444444444445 (pow x 4.0)) (+ (* -0.16666666666666666 (* x x)) (+ (* 0.0002099867724867725 (pow x 8.0)) (* -0.00205026455026455 (pow x 6.0)))))","pre":"(and (<= -10.0 x) (<= x 10.0))","prec":"binary64","preprocess":"()","spec":"(- (/ x (sinh x)) 1.0)","start":30.11022669383833,"start-est":30.069031106236903,"status":"imp-start","target":false,"target-prog":"#f","time":7368.489013671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 11.673610010988822) (33028 4.197894783751504) ((13572 6.314015524728079 (if (<= (* (* 4.0 a) c) 0.0) (hypot b (sqrt (* c (* a -4.0)))) (sqrt (+ (* b b) (* c (* a -4.0)))))) (7620 9.250612486567256 (if (<= (+ (* b b) (* c (* a -4.0))) 0.0) (- b) (sqrt (+ (* b b) (* c (* a -4.0)))))) (6984 15.341831088550453 (if (<= b -2.15e-173) (- (* (/ c b) (* a 2.0)) b) (if (<= b 2.7e-167) (sqrt (* c (* a -4.0))) (+ b (* -2.0 (* c (/ a b))))))) (708 21.030589770102463 (if (<= b 4.4e-303) (- b) (+ b (* -2.0 (* c (/ a b)))))) (708 20.77045019576941 (if (<= b 4.4e-303) (- (* (/ c b) (* a 2.0)) b) (+ b (* -2.0 (* c (/ a b)))))) (260 21.237539970778766 (if (<= b 0.0) (- b) b)) (64 41.325730777496965 b)))","end":4.197894783751504,"end-est":9.04060940925381,"identifier":"#f","input":"(sqrt (- (* b b) (* (* 4.0 a) c)))","link":"1d298d8002741e72dc14d323bc7de3fc94516387.1.6","name":"sqrt(b * b - 4 * a * c)","output":"(if (<= (+ (* b b) (* c (* a -4.0))) 1e-315) (exp (log (hypot b (* (sqrt (* a -4.0)) (sqrt c))))) (sqrt (+ (* b b) (* c (* a -4.0)))))","pre":"(and (and (and (<= -1000000000.0 b) (<= b 1000000000.0)) (and (<= -1000000000.0 a) (<= a 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (- (* b b) (* (* 4.0 a) c)))","start":11.673610010988822,"start-est":12.891154573820469,"status":"imp-start","target":false,"target-prog":"#f","time":8776.540283203125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 21.31221855480744) (832 0.5290522606318258) ((1100 4.713315713117877 (if (<= u -2.6586157910131818e-235) (/ (/ (* u (/ u (* x x))) x) x) (if (<= u 1.6867990375850572e-239) (/ u (* (/ x (/ u x)) (* x x))) (if (<= u 1e+126) (/ (/ (* u (/ u (* x x))) x) x) (/ u (* (/ x (/ u x)) (* x x))))))) (704 6.202677977521449 (/ u (* (/ x (/ u x)) (* x x)))) (704 1.3021466046463026 (/ (/ u x) (* x (/ x (/ u x)))))))","end":0.5290522606318258,"end-est":0.4421365553278964,"identifier":"#f","input":"(/ (pow u 2.0) (pow x 4.0))","link":"6683bf2dec2215f999fdc269470dafb1bf2aab8e.1.6","name":"u^2/x^4","output":"(/ 1.0 (* (/ x (/ u x)) (/ x (/ u x))))","pre":"(and (and (<= -1.79e+308 u) (<= u 1.79e+308)) (and (<= -1.79e+308 x) (<= x 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (pow u 2.0) (pow x 4.0))","start":21.31221855480744,"start-est":17.558645599696113,"status":"imp-start","target":false,"target-prog":"#f","time":5467.165283203125,"vars":["u","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 5.27919934208102) (1088 0.046) ((3016 2.227957639505019 (if (<= (+ (* (- a c) (- b d)) (* (- e c) (- d f))) -1e-315) (+ (* (- a c) (- b d)) (* (- e c) (- d f))) (if (<= (+ (* (- a c) (- b d)) (* (- e c) (- d f))) 2e-298) (+ (* a (- b d)) (* c (- f b))) (+ (* (- a c) (- b d)) (* (- e c) (- d f)))))) (1896 28.474695824996342 (if (<= e -3.313304699066262e-68) (+ (* d e) (* f (- c e))) (if (<= e -1.688720383018299e-108) (* a (- b d)) (if (<= e -2.4052942837704922e-123) (+ (* d e) (* f (- c e))) (if (<= e -1.2422408493828e-156) (* b (- a c)) (if (<= e -2.2566822188496434e-210) (+ (* d e) (* f (- c e))) (if (<= e -1.991848956722917e-228) (* b (- a c)) (if (<= e -1.4674794881481866e-236) (- (* c f) (* d a)) (if (<= e -2.4078643986666503e-302) (* a (- b d)) (if (<= e 3.256840077363653e-262) (* c (- f b)) (if (<= e 3.819118736199025e-199) (- (* c f) (* d a)) (+ (* d e) (* f (- c e)))))))))))))) (1772 31.835386250414423 (if (<= e -3.313304699066262e-68) (* e (- d f)) (if (<= e -1.688720383018299e-108) (* a (- b d)) (if (<= e -1.9130531540857528e-118) (* e (- d f)) (if (<= e -1.2422408493828e-156) (* b (- a c)) (if (<= e -4.312401133935673e-211) (* f (- c e)) (if (<= e -2.4078643986666503e-302) (* a (- b d)) (if (<= e 9.151827951075954e-231) (* c (- f b)) (if (<= e 3.819118736199025e-199) (* d (- e a)) (if (<= e 3.1806700246171382e-161) (* f (- c e)) (if (<= e 2.724061440459403e-147) (* b (- a c)) (if (<= e 3.516318824805824e-114) (* c (- f b)) (* e (- d f)))))))))))))) (1708 44.68570964789734 (if (<= e -6.567343875243599e-73) (* e (- f)) (if (<= e -1.7584619723328206e-94) (* d (- a)) (if (<= e -1.9130531540857528e-118) (* e (- f)) (if (<= e -9.854544280492027e-206) (* a b) (if (<= e -2.6492162415990553e-244) (* c (- b)) (if (<= e -2.816196255782579e-293) (* a b) (if (<= e 2.9392061772806375e-286) (* d (- a)) (if (<= e 9.151827951075954e-231) (* c f) (if (<= e 3.819118736199025e-199) (* d (- a)) (if (<= e 3.1806700246171382e-161) (* e (- f)) (if (<= e 2.7640858467933425e-142) (* c f) (* e (- f)))))))))))))) (1640 30.90444300801859 (if (<= e -3.313304699066262e-68) (* e (- d f)) (if (<= e -1.688720383018299e-108) (* a (- b d)) (if (<= e -1.9130531540857528e-118) (* e (- d f)) (if (<= e -1.2422408493828e-156) (* b (- a c)) (if (<= e -2.2566822188496434e-210) (* f (- c e)) (if (<= e -1.991848956722917e-228) (* b (- a c)) (if (<= e -8.628772734344352e-263) (- (* c f) (* d a)) (if (<= e -1.8321247540279911e-280) (* b (- a c)) (if (<= e 3.819118736199025e-199) (- (* c f) (* d a)) (if (<= e 3.516318824805824e-114) (* f (- c e)) (* e (- d f))))))))))))) (1508 38.70039450949006 (if (<= c -2.8694481443544673e-34) (* c f) (if (<= c -2.2791538788410373e-73) (* a (- b d)) (if (<= c -5.728334127653541e-102) (* c f) (if (<= c -7.506717005781691e-135) (* c (- b)) (if (<= c -9.416454932125374e-217) (* a (- b d)) (if (<= c -4.570397097945948e-247) (* e (- f)) (if (<= c 5.743977161134123e-213) (* a (- b d)) (if (<= c 1.4916631760210836e-196) (* e (- f)) (if (<= c 2.2090442504790165e-159) (* a (- b d)) (* c f))))))))))) (1508 37.399272520401425 (if (<= d -3.080658496864365e-166) (* a (- b d)) (if (<= d 2.8459164266789508e-292) (* e (- f)) (if (<= d 1.990765208119892e-287) (* a b) (if (<= d 4.361108696340618e-260) (* c f) (if (<= d 1.4393103281362134e-193) (* e (- f)) (if (<= d 1.8560511112597552e-138) (* a (- b d)) (if (<= d 4.7620392549570235e-112) (* e (- f)) (if (<= d 4.474706138107942e-108) (* d (- e a)) (if (<= d 1.5626109855592972e-107) (* a b) (* d (- e a)))))))))))) (1496 10.514662260971177 (if (<= a -6.118449339172898e-100) (+ (* e (- d f)) (* a (- b d))) (if (<= a -4.699366973034757e-181) (+ (* b (- a c)) (* f (- c e))) (if (<= a -3.84511789344213e-193) (+ (* b (- a c)) (* d (- e a))) (if (<= a 4.5062702607867865e-179) (+ (* e (- d f)) (* c (- f b))) (if (<= a 3.091871783545441e-144) (+ (* e (- d f)) (* a (- b d))) (if (<= a 3.8410684813836094e-115) (+ (* a (- b d)) (* c (- f b))) (+ (* e (- d f)) (* a (- b d)))))))))) (1376 30.861658181277857 (if (<= c -5.321280623498269e-53) (* c (- f b)) (if (<= c -2.2232586975246865e-63) (* a (- b d)) (if (<= c -7.506717005781691e-135) (* c (- f b)) (if (<= c -9.416454932125374e-217) (* a (- b d)) (if (<= c -4.570397097945948e-247) (* e (- f)) (if (<= c 5.743977161134123e-213) (* a (- b d)) (if (<= c 1.4916631760210836e-196) (* e (- f)) (if (<= c 2.2090442504790165e-159) (* a (- b d)) (* c (- f b))))))))))) (1232 12.948875499050207 (if (<= e -3.313304699066262e-68) (+ (* d e) (* f (- c e))) (if (<= e -4.3395585250218994e-111) (+ (* a (- b d)) (* c (- f b))) (if (<= e -1.9130531540857528e-118) (+ (* d e) (* f (- c e))) (if (<= e 7.222883469625953e-115) (+ (* a (- b d)) (* c (- f b))) (+ (* d e) (* f (- c e)))))))) (1232 11.003587331664685 (if (<= e -3.313304699066262e-68) (+ (* e (- d f)) (* c (- f b))) (if (<= e -4.3395585250218994e-111) (+ (* a (- b d)) (* c (- f b))) (if (<= e -1.9130531540857528e-118) (+ (* d e) (* f (- c e))) (if (<= e 2.278530510764181e-121) (+ (* a (- b d)) (* c (- f b))) (+ (* e (- d f)) (* c (- f b)))))))) (1100 10.19475154283588 (if (<= c -2.2791538788410373e-73) (+ (* a (- b d)) (* c (- f b))) (if (<= c -7.506717005781691e-135) (+ (* e (- d f)) (* c (- f b))) (if (<= c 2.2090442504790165e-159) (+ (* e (- d f)) (* a (- b d))) (+ (* e (- d f)) (* c (- f b))))))) (1100 10.33786090200274 (if (<= c -2.2791538788410373e-73) (+ (* a (- b d)) (* c (- f b))) (if (<= c -7.506717005781691e-135) (+ (* e (- d f)) (* c (- f b))) (if (<= c 2.2090442504790165e-159) (+ (* e (- d f)) (* a (- b d))) (+ (* b (- a c)) (* f (- c e))))))) (1088 0.04725 (+ (* e (- d f)) (+ (* a (- b d)) (* c (- f b))))) (984 44.29519437217212 (if (<= e -1.9130531540857528e-118) (* e (- f)) (if (<= e -9.854544280492027e-206) (* a b) (if (<= e -2.6492162415990553e-244) (* c (- b)) (if (<= e 1.7581828125177446e-202) (* c f) (if (<= e 3.1806700246171382e-161) (* e (- f)) (if (<= e 2.278530510764181e-121) (* a b) (* d e)))))))) (848 29.9172170030978 (if (<= f -4.860907981343095e-158) (* f (- c e)) (if (<= f 4.386007479803928e-274) (* a (- b d)) (if (<= f 1.953954497938419e-238) (* d (- e a)) (if (<= f 7.365679029151864e-142) (* a (- b d)) (* f (- c e))))))) (840 20.76567691945068 (if (<= f -4.860907981343095e-158) (+ (* d e) (* f (- c e))) (if (<= f 7.365679029151864e-142) (- (* a (- b d)) (* b c)) (+ (* d e) (* f (- c e)))))) (720 43.26054992392668 (if (<= b -2.1332316888256682e-122) (* a b) (if (<= b -1.6426064839563652e-299) (* c f) (if (<= b 7.611686467406706e-265) (* d e) (if (<= b 4.311980891312944e-103) (* c f) (* a b)))))) (720 43.641196799362994 (if (<= b -3.629942227119182e-102) (* c (- b)) (if (<= b -1.6426064839563652e-299) (* c f) (if (<= b 7.611686467406706e-265) (* d e) (if (<= b 4.311980891312944e-103) (* c f) (* a b)))))) (456 44.17226804121816 (if (<= b -5.336944190326816e-162) (* a b) (if (<= b 1.7124781156858363e-157) (* d e) (* a b)))) (192 48.62368989635886 (* d e))))","end":0.046,"end-est":0.0546875,"identifier":"#f","input":"(- (* (- a c) (- b d)) (* (- e c) (- f d)))","link":"abd937f009f54beea3a06f970734f671b5a0d097.1.6","name":"((a-c) * (b-d)) - ((e-c) * (f-d)) ","output":"(+ (+ (* b (- a c)) (* d (- e a))) (* f (- c e)))","pre":"(and (and (and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 c) (<= c 1000.0))) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 d) (<= d 1000.0))) (and (<= -1000.0 e) (<= e 1000.0))) (and (<= -1000.0 f) (<= f 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (* (- a c) (- b d)) (* (- e c) (- f d)))","start":5.27919934208102,"start-est":6.525126109127281,"status":"imp-start","target":false,"target-prog":"#f","time":22592.716796875,"vars":["a","c","b","d","e","f"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.000125) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (pow x 2.0) 5.0)","link":"936f9e70e5397920089e8d4e05104b054dac2283.1.6","name":"pow(x, 2) + 5","output":"(fma x x 5.0)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (pow x 2.0) 5.0)","start":0.000125,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2169.283203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((21504 59.04853309814641) (8132 52.44280038736752) ((2004 52.1887534902372 (if (<= y1 -1.027473369095794e+127) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2)))) (if (<= y1 -7.123630997676514e-140) (/ (- xt1 xt2) (+ (+ (* x1 (- y1 y4)) (- (* x3 y2) (* y1 x3))) (* x2 (- y4 y2)))) (if (<= y1 3.87672235938111e-151) (/ (- xt3 xt1) (+ (+ (* (- y1 y3) x2) (* x3 (- y3 y4))) (* x1 (- y4 y1)))) (if (<= y1 1.1495700030869067e-79) (/ (- xt1 xt2) (+ (+ (* x1 (- y1 y4)) (- (* x3 y2) (* y1 x3))) (* x2 (- y4 y2)))) (if (<= y1 1.9508058183228974e+88) (/ (- xt3 xt1) (+ (+ (* (- y1 y3) x2) (* x3 (- y3 y4))) (* x1 (- y4 y1)))) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2)))))))))) (1872 52.20481167423087 (if (<= x4 -2.861739395316847e+122) (/ (- xt3 xt1) (+ (+ (* (- y1 y3) x2) (* x3 (- y3 y4))) (* x1 (- y4 y1)))) (if (<= x4 -1.25e-273) (/ (- xt1 xt4) (+ (+ (* x4 (- y3 y4)) (* x2 (- y4 y1))) (* (- y1 y3) x1))) (if (<= x4 1.1553700320274094e-151) (/ (- xt4 xt3) (+ (+ (* (- y3 y4) x2) (* x4 (- y4 y1))) (* x3 (- y1 y3)))) (if (<= x4 8.420654128978706e+54) (/ (- xt1 xt4) (+ (+ (* x4 (- y3 y4)) (* x2 (- y4 y1))) (* (- y1 y3) x1))) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2))))))))) (1736 52.474438640871625 (if (<= y1 -1.027473369095794e+127) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2)))) (if (<= y1 2.466716381894692e-96) (/ (- xt1 xt2) (+ (+ (* x1 (- y1 y4)) (- (* x3 y2) (* y1 x3))) (* x2 (- y4 y2)))) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2))))))) (1344 54.28029221955743 (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2)))))))","end":52.44280038736752,"end-est":46.441357283016636,"identifier":"#f","input":"(/ (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (* (* (- x1) xt2) y3) (* (* x1 xt2) y4)) (* (* x1 xt3) y2)) (* (* x1 xt3) y4)) (* (* x1 xt4) y2)) (* (* x1 xt4) y3)) (* (* x2 xt1) y3)) (* (* x2 xt1) y4)) (* (* x2 xt3) y1)) (* (* x2 xt3) y4)) (* (* x2 xt4) y1)) (* (* x2 xt4) y3)) (* (* x3 xt1) y2)) (* (* x3 xt1) y4)) (* (* x3 xt2) y1)) (* (* x3 xt2) y4)) (* (* x3 xt4) y1)) (* (* x3 xt4) y2)) (* (* x4 xt1) y2)) (* (* x4 xt1) y3)) (* (* x4 xt2) y1)) (* (* x4 xt2) y3)) (* (* x4 xt3) y1)) (* (* x4 xt3) y2)) (+ (- (- (+ (- (+ (+ (- (+ (- (- (+ (+ (- (- (+ (- (+ (+ (- (+ (- (- (* (* (* x1 x2) y1) y3) (* (* (* x1 x2) y1) y4)) (* (* (* x1 x2) y2) y3)) (* (* (* x1 x2) y2) y4)) (* (* (* x1 x3) y1) y2)) (* (* (* x1 x3) y1) y4)) (* (* (* x1 x3) y2) y3)) (* (* (* x1 x3) y3) y4)) (* (* (* x1 x4) y1) y2)) (* (* (* x1 x4) y1) y3)) (* (* (* x1 x4) y2) y4)) (* (* (* x1 x4) y3) y4)) (* (* (* x2 x3) y1) y2)) (* (* (* x2 x3) y1) y3)) (* (* (* x2 x3) y2) y4)) (* (* (* x2 x3) y3) y4)) (* (* (* x2 x4) y1) y2)) (* (* (* x2 x4) y1) y4)) (* (* (* x2 x4) y2) y3)) (* (* (* x2 x4) y3) y4)) (* (* (* x3 x4) y1) y3)) (* (* (* x3 x4) y1) y4)) (* (* (* x3 x4) y2) y3)) (* (* (* x3 x4) y2) y4)))","link":"80a994bdb734e0141f1c085e26c4bb431d95eb12.1.6","name":"(-x1*xt2*y3 + x1*xt2*y4 + x1*xt3*y2 - x1*xt3*y4 - x1*xt4*y2 + x1*xt4*y3 + x2*xt1*y3 - x2*xt1*y4 - x2*xt3*y1 + x2*xt3*y4 + x2*xt4*y1 - x2*xt4*y3 - x3*xt1*y2 + x3*xt1*y4 + x3*xt2*y1 - x3*xt2*y4 - x3*xt4*y1 + x3*xt4*y2 + x4*xt1*y2 - x4*xt1*y3 - x4*xt2*y1 + x4*xt2*y3 + x4*xt3*y1 - x4*xt3*y2)/(x1*x2*y1*y3 - x1*x2*y1*y4 - x1*x2*y2*y3 + x1*x2*y2*y4 - x1*x3*y1*y2 + x1*x3*y1*y4 + x1*x3*y2*y3 - x1*x3*y3*y4 + x1*x4*y1*y2 - x1*x4*y1*y3 - x1*x4*y2*y4 + x1*x4*y3*y4 + x2*x3*y1*y2 - x2*x3*y1*y3 - x2*x3*y2*y4 + x2*x3*y3*y4 - x2*x4*y1*y2 + x2*x4*y1*y4 + x2*x4*y2*y3 - x2*x4*y3*y4 + x3*x4*y1*y3 - x3*x4*y1*y4 - x3*x4*y2*y3 + x3*x4*y2*y4)","output":"(if (<= x4 -5.1191477537298405e+241) (- (/ (+ (* xt3 (- y2 y1)) (* xt1 (- y3 y2))) (+ (+ (* (- (* y1 x3) (* x3 y2)) (- y4 y3)) (* (- y1 y3) (* x2 (- y2 y4)))) (* x1 (+ (* y4 (- y2 y3)) (* y1 (- y3 y2)))))) (* xt2 (- (/ y3 (+ (+ (* (- (* y1 x3) (* x3 y2)) (- y4 y3)) (* (- y1 y3) (* x2 (- y2 y4)))) (* x1 (+ (* y4 (- y2 y3)) (* y1 (- y3 y2)))))) (/ y1 (+ (+ (* (- (* y1 x3) (* x3 y2)) (- y4 y3)) (* (- y1 y3) (* x2 (- y2 y4)))) (* x1 (+ (* y4 (- y2 y3)) (* y1 (- y3 y2))))))))) (if (<= x4 -2.861739395316847e+122) (/ (- xt3 xt1) (+ (+ (* (- y1 y3) x2) (* x3 (- y3 y4))) (* x1 (- y4 y1)))) (if (<= x4 -1.25e-273) (/ (- xt1 xt4) (+ (+ (* x4 (- y3 y4)) (* x2 (- y4 y1))) (* (- y1 y3) x1))) (if (<= x4 1.1553700320274094e-151) (/ (- xt4 xt3) (+ (+ (* (- y3 y4) x2) (* x4 (- y4 y1))) (* x3 (- y1 y3)))) (if (<= x4 8.420654128978706e+54) (/ (- xt1 xt4) (+ (+ (* x4 (- y3 y4)) (* x2 (- y4 y1))) (* (- y1 y3) x1))) (/ (- xt3 xt2) (+ (+ (* x3 (- y3 y4)) (* x1 (- y2 y3))) (* x2 (- y4 y2)))))))))","pre":"(and (and (and (and (and (and (and (and (and (and (and (and (<= -1.79e+308 x1) (<= x1 1.79e+308)) (and (<= -1.79e+308 xt2) (<= xt2 1.79e+308))) (and (<= -1.79e+308 y3) (<= y3 1.79e+308))) (and (<= -1.79e+308 y4) (<= y4 1.79e+308))) (and (<= -1.79e+308 xt3) (<= xt3 1.79e+308))) (and (<= -1.79e+308 y2) (<= y2 1.79e+308))) (and (<= -1.79e+308 xt4) (<= xt4 1.79e+308))) (and (<= -1.79e+308 x2) (<= x2 1.79e+308))) (and (<= -1.79e+308 xt1) (<= xt1 1.79e+308))) (and (<= -1.79e+308 y1) (<= y1 1.79e+308))) (and (<= -1.79e+308 x3) (<= x3 1.79e+308))) (and (<= -1.79e+308 x4) (<= x4 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (- (- (+ (+ (* (* (- x1) xt2) y3) (* (* x1 xt2) y4)) (* (* x1 xt3) y2)) (* (* x1 xt3) y4)) (* (* x1 xt4) y2)) (* (* x1 xt4) y3)) (* (* x2 xt1) y3)) (* (* x2 xt1) y4)) (* (* x2 xt3) y1)) (* (* x2 xt3) y4)) (* (* x2 xt4) y1)) (* (* x2 xt4) y3)) (* (* x3 xt1) y2)) (* (* x3 xt1) y4)) (* (* x3 xt2) y1)) (* (* x3 xt2) y4)) (* (* x3 xt4) y1)) (* (* x3 xt4) y2)) (* (* x4 xt1) y2)) (* (* x4 xt1) y3)) (* (* x4 xt2) y1)) (* (* x4 xt2) y3)) (* (* x4 xt3) y1)) (* (* x4 xt3) y2)) (+ (- (- (+ (- (+ (+ (- (+ (- (- (+ (+ (- (- (+ (- (+ (+ (- (+ (- (- (* (* (* x1 x2) y1) y3) (* (* (* x1 x2) y1) y4)) (* (* (* x1 x2) y2) y3)) (* (* (* x1 x2) y2) y4)) (* (* (* x1 x3) y1) y2)) (* (* (* x1 x3) y1) y4)) (* (* (* x1 x3) y2) y3)) (* (* (* x1 x3) y3) y4)) (* (* (* x1 x4) y1) y2)) (* (* (* x1 x4) y1) y3)) (* (* (* x1 x4) y2) y4)) (* (* (* x1 x4) y3) y4)) (* (* (* x2 x3) y1) y2)) (* (* (* x2 x3) y1) y3)) (* (* (* x2 x3) y2) y4)) (* (* (* x2 x3) y3) y4)) (* (* (* x2 x4) y1) y2)) (* (* (* x2 x4) y1) y4)) (* (* (* x2 x4) y2) y3)) (* (* (* x2 x4) y3) y4)) (* (* (* x3 x4) y1) y3)) (* (* (* x3 x4) y1) y4)) (* (* (* x3 x4) y2) y3)) (* (* (* x3 x4) y2) y4)))","start":59.04853309814641,"start-est":59.249528109497106,"status":"imp-start","target":false,"target-prog":"#f","time":119752.63623046875,"vars":["x1","xt2","y3","y4","xt3","y2","xt4","x2","xt1","y1","x3","x4"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0.11225244375108175) (6656 0.1042924812503606) ((192 33.110923429506435 (/ 1.0 y))))","end":0.1042924812503606,"end-est":0.09375,"identifier":"#f","input":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","link":"b30fb512698398e684573399d32166491813b5cb.1.6","name":"1 / sqrt( x*x + y*y)","output":"(/ 1.0 (hypot x y))","pre":"(and (and (<= 1e-20 x) (<= x 1e+20)) (and (<= 1e-20 y) (<= y 1e+20)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","start":0.11225244375108175,"start-est":0.10546875,"status":"ex-start","target":false,"target-prog":"#f","time":5775.694091796875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.01868872187554087) (6784 0.01868872187554087) ((320 0.5075839660078787 (+ 0.5 (* x 0.25))) (64 1.4286274078586825 0.5)))","end":0.01868872187554087,"end-est":0.03191376953688403,"identifier":"#f","input":"(/ 1.0 (+ 1.0 (exp (- x))))","link":"0ac015138c6ead7ccd2af37065b42d3ab76bc291.1.6","name":"1.0 / (1.0 + exp (-x))","output":"(/ 1.0 (+ 1.0 (exp (- x))))","pre":"(and (<= -10.0 x) (<= x 10.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ 1.0 (exp (- x))))","start":0.01868872187554087,"start-est":0.03191376953688403,"status":"ex-start","target":false,"target-prog":"#f","time":3843.61669921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.085450897438) (13248 0.1667548875021635) ((26308 0.3428734331332031 (if (<= (- (sqrt (+ 1.0 x)) (sqrt x)) 4e-5) (* 0.5 (sqrt (/ 1.0 x))) (- (sqrt (+ 1.0 x)) (sqrt x)))) (6980 0.9731833408189547 (if (<= x 0.0007865835300043417) (+ 1.0 (- (* x 0.5) (sqrt x))) (* 0.5 (sqrt (/ 1.0 x))))) (6852 2.052130272641022 (if (<= x 0.0007865835300043417) 1.0 (* 0.5 (sqrt (/ 1.0 x))))) (64 31.34149409361164 1.0)))","end":0.1667548875021635,"end-est":0.170253759768442,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"e16e01e37881d6ff4341ba41e724acd4bf418466.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":30.085450897438,"start-est":29.69289157287601,"status":"imp-start","target":false,"target-prog":"#f","time":5179.216064453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0.11225244375108175) (6656 0.1042924812503606) ((192 33.110923429506435 (/ 1.0 y))))","end":0.1042924812503606,"end-est":0.09375,"identifier":"#f","input":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","link":"f001074aae35a3d971a477716b3a8658d79bcd94.1.6","name":"1 / sqrt(x * x + y * y)","output":"(/ 1.0 (hypot x y))","pre":"(and (and (<= 1e-20 x) (<= x 1e+20)) (and (<= 1e-20 y) (<= y 1e+20)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","start":0.11225244375108175,"start-est":0.10546875,"status":"ex-start","target":false,"target-prog":"#f","time":5562.5615234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0.25866992500144226) (6656 0.24229248125036057) ((192 39.50713579447345 (/ 1.0 y))))","end":0.24229248125036057,"end-est":0.234375,"identifier":"#f","input":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","link":"2a47fb8a8b8acb2190ba4a39a89dd76169ee828b.1.6","name":"1 / sqrt(x * x + y * y)","output":"(/ 1.0 (hypot x y))","pre":"(and (and (<= 0.001 x) (<= x 10000000000.0)) (and (<= 0.001 y) (<= y 10000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ (* x x) (* y y))))","start":0.25866992500144226,"start-est":0.23828125,"status":"ex-start","target":false,"target-prog":"#f","time":4922.893798828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.02986223068200069) (13120 0.02986223068200069) ((6912 0.14722439715289865 (- (* x (* x x)) (pow y 3.0))) (832 0.2883161656266226 (* (+ (* x x) (* y (+ x y))) (- x y))) (576 31.788584486096962 (* (- x y) (* x (+ x y)))) (320 33.94352206013717 (* x (* x x)))))","end":0.02986223068200069,"end-est":0.03125,"identifier":"#f","input":"(- (pow x 3.0) (pow y 3.0))","link":"50ba5eb45a8c7c0201b67e9e3560c42a4d9359c6.1.6","name":"x^3 - y^3","output":"(- (pow x 3.0) (pow y 3.0))","pre":"(and (and (<= 1000000000.0 x) (<= x 1.79e+308)) (and (<= 1000000000.0 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 3.0) (pow y 3.0))","start":0.02986223068200069,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":4032.82861328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.009290241011860921) (448 0.001125) ())","end":0.001125,"end-est":0,"identifier":"#f","input":"(- (pow x 2.0) (pow y 2.0))","link":"2d78fce758480cff0c52d81077e40c0f4a979c51.1.6","name":"x^2 - y^2","output":"(* (+ x y) (- x y))","pre":"(and (and (<= 0.0 x) (<= x 1.79e+308)) (and (<= 0.0 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- (pow x 2.0) (pow y 2.0))","start":0.009290241011860921,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2121.343017578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 59.635522464358274) (7364 0.0983848401096263) ((6852 0.7863440762394743 (if (<= x -2.5171942542711294) (log (/ -1.0 x)) (fma x (* x 0.5) x))) (6852 0.18970485964401243 (if (<= x -156568891402.5648) (log (/ -1.0 x)) (log1p (/ x (- 1.0 x))))) (6724 1.2130936583363645 (if (<= x -2.5171942542711294) (log (/ -1.0 x)) x)) (64 20.570738655683414 x)))","end":0.0983848401096263,"end-est":0.050028730164287515,"identifier":"#f","input":"(log (+ 1.0 (* 0.5 (/ (* 2.0 x) (- 1.0 x)))))","link":"90e293967ae778a35325260774acb1c498e21da6.1.6","name":"log(1.0 + 0.5 * ((2.0 * x) / (1.0 - x)))","output":"(if (<= (/ (* 2.0 x) (- 1.0 x)) -1.995) (log (/ (+ -1.0 (/ -1.0 x)) x)) (log1p (/ x (- 1.0 x))))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 (* 0.5 (/ (* 2.0 x) (- 1.0 x)))))","start":59.635522464358274,"start-est":59.18216213441656,"status":"imp-start","target":false,"target-prog":"#f","time":9906.835693359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.4141540198210655) (6848 0.35527597487190815) ((1240 16.649354796625662 (if (<= a0 -7.964180798008777e-114) (- a0 (* a0 (/ n s))) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (- a0 (* a0 (/ n s))) (if (<= a0 3.505197701256941e-220) (* n (/ (- a2 a0) s)) (if (<= a0 5.748486347897665e-212) (- a0 (* a0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (* n (/ (- a2 a0) s)) (- a0 (* a0 (/ n s)))))))))) (1240 16.64935880360179 (if (<= a0 -7.964180798008777e-114) (- a0 (* n (/ a0 s))) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (- a0 (* a0 (/ n s))) (if (<= a0 3.505197701256941e-220) (* n (/ (- a2 a0) s)) (if (<= a0 5.748486347897665e-212) (- a0 (* a0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (* n (/ (- a2 a0) s)) (- a0 (* a0 (/ n s)))))))))) (1240 16.55940299409534 (if (<= a0 -7.964180798008777e-114) (- a0 (* n (/ a0 s))) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (- a0 (* a0 (/ n s))) (if (<= a0 3.505197701256941e-220) (* n (/ (- a2 a0) s)) (if (<= a0 5.748486347897665e-212) (- a0 (* a0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (+ a0 (/ (* a2 n) s)) (- a0 (* a0 (/ n s)))))))))) (1240 16.552498620105272 (if (<= a0 -7.964180798008777e-114) (* a0 (- 1.0 (/ n s))) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (* a0 (- 1.0 (/ n s))) (if (<= a0 3.505197701256941e-220) (* n (/ (- a2 a0) s)) (if (<= a0 5.748486347897665e-212) (* a0 (- 1.0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (+ a0 (/ (* a2 n) s)) (* a0 (- 1.0 (/ n s)))))))))) (1240 16.551165109195324 (if (<= a0 -7.964180798008777e-114) (* a0 (- 1.0 (/ n s))) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (* a0 (- 1.0 (/ n s))) (if (<= a0 3.505197701256941e-220) (/ (* (- a2 a0) n) s) (if (<= a0 5.748486347897665e-212) (* a0 (- 1.0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (+ a0 (/ (* a2 n) s)) (* a0 (- 1.0 (/ n s)))))))))) (1240 16.55774470734204 (if (<= a0 -7.964180798008777e-114) (- a0 (/ (* a0 n) s)) (if (<= a0 -6.903844802423937e-124) (* n (/ a2 s)) (if (<= a0 -4.50770146017962e-156) (* a0 (- 1.0 (/ n s))) (if (<= a0 3.505197701256941e-220) (/ (* (- a2 a0) n) s) (if (<= a0 5.748486347897665e-212) (* a0 (- 1.0 (/ n s))) (if (<= a0 2.7144332172724225e-132) (+ a0 (/ (* a2 n) s)) (* a0 (- 1.0 (/ n s)))))))))) (832 0.3957343694431872 (+ (/ (* a2 n) s) (* a0 (- 1.0 (/ n s))))) (576 0.41837012413945457 (+ a0 (/ n (/ s (- a2 a0))))) (576 0.41079956897905984 (+ a0 (/ (- a2 a0) (/ s n)))) (576 0.4082654505731197 (+ a0 (* (- a2 a0) (/ n s)))) (448 30.54609088637754 (* n (/ (- a2 a0) s))) (320 32.29206850305316 (* n (/ a2 s))) (320 32.28662784268591 (* a2 (/ n s))) (64 58.24784629831713 a0)))","end":0.35527597487190815,"end-est":0.32115815175510803,"identifier":"#f","input":"(+ a0 (/ (* (- a2 a0) n) s))","link":"97169135b8d62ef1551e932928b244d1a9ef39c6.1.6","name":"a0 + ((a2 - a0) * n) / s","output":"(fma (- a2 a0) (/ n s) a0)","pre":"(and (and (and (and (<= -10.0 a0) (<= a0 10.0)) (and (<= -10.0 a2) (<= a2 10.0))) (and (<= 1.0 n) (<= n 100.0))) (and (<= 2.0 s) (<= s 101.0)))","prec":"binary64","preprocess":"()","spec":"(+ a0 (/ (* (- a2 a0) n) s))","start":0.4141540198210655,"start-est":0.3833126788433875,"status":"ex-start","target":false,"target-prog":"#f","time":10727.675537109375,"vars":["a0","a2","n","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((384 19.58927137259342) (384 0.2545) ((320 63.105898743818464 (/ (/ x y) y))))","end":0.2545,"end-est":0.23046875,"identifier":"#f","input":"(/ (- x) (* y y))","link":"f30b793da300a4f484e7e8cdd3ddb2a254799c85.1.6","name":"(-x) / (y * y)","output":"(/ (/ x y) (- y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- x) (* y y))","start":19.58927137259342,"start-est":20.46747697279117,"status":"imp-start","target":false,"target-prog":"#f","time":3298.7802734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 19.58939637259342) (384 0.2545) ((320 63.105898743818464 (/ (/ x y) y))))","end":0.2545,"end-est":0.23046875,"identifier":"#f","input":"(/ (- x) (pow y 2.0))","link":"d3901f105ea6ae2b6f84135b202bb038893befcb.1.6","name":"(-x) / (y^2)","output":"(/ (/ x y) (- y))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- x) (pow y 2.0))","start":19.58939637259342,"start-est":20.46747697279117,"status":"imp-start","target":false,"target-prog":"#f","time":3559.878173828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 41.56287927088999) (6912 0.4430509422054397) ((7044 3.532753922870226 (if (<= r 2.2526238707135364e-179) (/ (* f PI) (* B (/ p r))) (/ (* f (* r (/ PI B))) p))) (6912 12.122672681017699 (/ (* f (* r (/ PI B))) p)) (6912 0.4536485389958399 (/ (* PI (/ f p)) (/ B r))) (6912 0.43848722032989906 (/ (* (/ f B) PI) (/ p r)))))","end":0.4430509422054397,"end-est":0.42710878907376804,"identifier":"#f","input":"(/ (* (* PI r) f) (* p B))","link":"ab12bac5d9713f9a89b967130cae14afd5a0f776.1.6","name":"PI * r * f / (p  * B)","output":"(* (/ f B) (/ (* PI r) p))","pre":"(and (and (and (and (<= 0.0 r) (<= r 1.0)) (and (<= 0.0 f) (<= f 1.0))) (and (<= 0.0 p) (<= p 100.0))) (and (<= 0.0 B) (<= B 10.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* (* PI r) f) (* p B))","start":41.56287927088999,"start-est":41.50964576981596,"status":"imp-start","target":false,"target-prog":"#f","time":6208.457275390625,"vars":["r","f","p","B"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 10.55810331717745) (7168 0.25766381052865767) ((7436 27.854251718154757 (if (<= f 1.1979217975699677e-272) (+ a b) (if (<= f 5.800010391800731e-246) (* (/ b (/ PI p)) (/ (- B) f)) (if (<= f 1.7352520971032115e-240) (+ b (/ (* f (* b PI)) (* B p))) (* (/ b f) (/ (- p) (/ PI B))))))) (7372 27.692613539464425 (if (<= f 1.1979217975699677e-272) (+ a b) (if (<= f 5.800010391800731e-246) (* (/ b (/ PI p)) (/ (- B) f)) (if (<= f 1.7352520971032115e-240) (+ a b) (* (/ b f) (/ (- p) (/ PI B))))))) (7108 26.187321980997577 (if (<= p 1.0918190665723198e-51) (* (/ b (/ PI p)) (/ (- B) f)) (+ a b))) (7040 19.059247741367997 (/ b (- 1.0 (/ (* f (/ PI B)) p)))) (192 52.354558094500355 (+ a b))))","end":0.25766381052865767,"end-est":0.17644501953688402,"identifier":"#f","input":"(/ (+ a b) (- 1.0 (/ (* PI f) (* p B))))","link":"be8f880292debf7c27d4a1a6b2677c5cddc56a65.1.6","name":"(a+b)/(1-(PI*f/(p*B)))","output":"(/ (+ a b) (- 1.0 (* (/ f B) (/ PI p))))","pre":"(and (and (and (and (and (<= 0.0 a) (<= a 1.0)) (and (<= 0.0 b) (<= b 1.0))) (and (<= 0.0 f) (<= f 1.0))) (and (<= 0.0 p) (<= p 100.0))) (and (<= 0.0 B) (<= B 10.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ a b) (- 1.0 (/ (* PI f) (* p B))))","start":10.55810331717745,"start-est":8.811288145620614,"status":"imp-start","target":false,"target-prog":"#f","time":8543.071533203125,"vars":["a","b","f","p","B"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.4211167391372333) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(pow (* i (sqrt 2.0)) 2.0)","link":"ba9a7aa3459b009387780eb1a483c8ad339059db.1.6","name":"pow(i*sqrt(2),2)","output":"(* i (* i 2.0))","pre":"(and (<= 0.0 i) (<= i 100.0))","prec":"binary64","preprocess":"()","spec":"(pow (* i (sqrt 2.0)) 2.0)","start":0.4211167391372333,"start-est":0.42335527351637664,"status":"ex-start","target":false,"target-prog":"#f","time":1997.593994140625,"vars":["i"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.8344597938982163) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(pow (* i (sqrt 2.0)) 2.0)","link":"569cd0743a60397c61bb6526b14245a58cfa4cf8.1.6","name":"pow(i*sqrt(2),2)","output":"(* i (* i 2.0))","pre":"(and (<= 0.5 i) (<= i 2.0))","prec":"binary64","preprocess":"()","spec":"(pow (* i (sqrt 2.0)) 2.0)","start":0.8344597938982163,"start-est":0.7952655274958697,"status":"ex-start","target":false,"target-prog":"#f","time":2008.40185546875,"vars":["i"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.417751137574283) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(pow (* i (sqrt 2.0)) 2.0)","link":"600d5e2df5caa546cc5f01a3e29a1563eb7d94b4.1.6","name":"pow(i*sqrt(2),2)","output":"(* i (* i 2.0))","pre":"(and (<= 0.0 i) (<= i 1.0))","prec":"binary64","preprocess":"()","spec":"(pow (* i (sqrt 2.0)) 2.0)","start":0.417751137574283,"start-est":0.3923989746741665,"status":"ex-start","target":false,"target-prog":"#f","time":2129.71826171875,"vars":["i"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 0.30803049875997385) (14016 0.2923680453140325) ((7572 21.245878635013966 (if (<= z 2.2784201771965793e-157) (* x (* PI x)) (if (<= z 2.2645477807293296e-137) (* (- y z) (* PI (- z y))) (if (<= z 1.5443244280499072e-114) (* x (* PI x)) (if (<= z 9.25923746681327e-88) (* (- y z) (* PI (- z y))) (if (<= z 6.483223414584748e-81) (* PI (* x x)) (* (- y z) (* PI (- z y))))))))) (7380 26.224551053766547 (if (<= z 2.2784201771965793e-157) (* x (* PI x)) (if (<= z 2.2645477807293296e-137) (* PI (* z (- z))) (if (<= z 1.5443244280499072e-114) (* x (* PI x)) (if (<= z 9.25923746681327e-88) (* PI (* z (- z))) (if (<= z 6.483223414584748e-81) (* PI (* x x)) (* PI (* z (- z))))))))) (7380 26.22296224210058 (if (<= z 2.2784201771965793e-157) (* x (* PI x)) (if (<= z 2.2645477807293296e-137) (* (- z) (* PI z)) (if (<= z 1.5443244280499072e-114) (* x (* PI x)) (if (<= z 9.25923746681327e-88) (* PI (* z (- z))) (if (<= z 6.483223414584748e-81) (* PI (* x x)) (* PI (* z (- z))))))))) (7168 0.30344360937770426 (* PI (* (+ x (- y z)) (+ x (- z y))))) (7044 7.088477208551283 (if (<= x 5.499410445508645e-152) (* (- y z) (* PI (- z y))) (* (- x z) (* PI (+ x z))))) (7044 7.101061769043257 (if (<= x 5.499410445508645e-152) (* PI (* (- y z) (- z y))) (* (- x z) (* PI (+ x z))))) (6656 36.3135609439215 (* PI (* x x))) (6656 36.31157533228587 (* x (* PI x)))))","end":0.2923680453140325,"end-est":0.25390625,"identifier":"#f","input":"(* PI (- (pow x 2.0) (pow (- y z) 2.0)))","link":"026b3de3fe842f3da23fa9325a5443335cce37d1.1.6","name":"PI*(pow(x,2) - pow((y-z),2))","output":"(- (* (* PI (+ x (- y z))) (- x y)) (* z (* PI (- (- z y) x))))","pre":"(and (and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 1.0))) (and (<= 0.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(* PI (- (pow x 2.0) (pow (- y z) 2.0)))","start":0.30803049875997385,"start-est":0.29201127930532605,"status":"ex-start","target":false,"target-prog":"#f","time":8240.120361328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.139875) (6528 0.00025) ())","end":0.00025,"end-est":0,"identifier":"#f","input":"(sqrt (/ 1.0 x))","link":"c7e5532e0351210b396017eda49a06ff49627264.1.6","name":"sqrt(1/x)","output":"(pow x -0.5)","pre":"(and (<= 0.0 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (/ 1.0 x))","start":0.139875,"start-est":0.11328125,"status":"ex-start","target":false,"target-prog":"#f","time":1937.826171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0.014344360937770435) (6912 0.00775) ((6656 0.014344360937770435 (/ t (hypot 1.0 t))) (64 1.110589440842095 t)))","end":0.00775,"end-est":0.0078125,"identifier":"#f","input":"(/ t (sqrt (+ 1.0 (pow t 2.0))))","link":"22e7adaf687452af169a9aecfd4b04fcd739ebdd.1.6","name":"t/sqrt(1+t^2)","output":"(* t (pow (+ 1.0 (* t t)) -0.5))","pre":"(and (<= -1000.0 t) (<= t 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ t (sqrt (+ 1.0 (pow t 2.0))))","start":0.014344360937770435,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3875.87744140625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.01414624062518029) (7168 0.01414624062518029) ((6784 0.8180717095970675 (/ x (+ 0.32999999999999996 (pow 0.20151121000000005 0.25))))))","end":0.01414624062518029,"end-est":0.015625,"identifier":"#f","input":"(/ x (+ (- 1.0 0.67) (pow (+ (pow 0.67 4.0) (* (* 0.25 x) x)) 0.25)))","link":"4ddae7583253d2b272069bb86573177ca8208fb2.1.6","name":"x / (1 - 0.67 + pow(pow(0.67, 4) + 0.25 * x * x, 0.25))","output":"(/ x (+ 0.32999999999999996 (pow (+ (* (* x x) 0.25) 0.20151121000000005) 0.25)))","pre":"(and (<= -20.0 x) (<= x 20.0))","prec":"binary64","preprocess":"()","spec":"(/ x (+ (- 1.0 0.67) (pow (+ (pow 0.67 4.0) (* (* 0.25 x) x)) 0.25)))","start":0.01414624062518029,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":6363.173583984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 19.05581662609135) (320 0.2165) ())","end":0.2165,"end-est":0.21875,"identifier":"#f","input":"(/ (* a b) c)","link":"56eeb514f64db6c36908cf76b0ad14a253a4bc4e.1.6","name":"a*b/c","output":"(* (/ a c) b)","pre":"(and (and (and (<= 0.0 a) (<= a 1.0)) (and (<= -1.0 b) (<= b 1.0))) (and (<= -1.0 c) (<= c 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* a b) c)","start":19.05581662609135,"start-est":18.786573254907804,"status":"imp-start","target":false,"target-prog":"#f","time":2933.733154296875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.217875) (320 0.217875) ((320 0.2165 (/ b (/ c a))) (320 0.224625 (/ a (/ c b))) (320 0.221875 (* b (/ a c)))))","end":0.217875,"end-est":0.1953125,"identifier":"#f","input":"(* a (/ b c))","link":"4637e2a7c3a515b51f7d13507df3e80fe8254d0c.1.6","name":"a*(b/c)","output":"(* a (/ b c))","pre":"(and (and (and (<= 0.0 a) (<= a 1.0)) (and (<= -1.0 b) (<= b 1.0))) (and (<= -1.0 c) (<= c 1.0)))","prec":"binary64","preprocess":"()","spec":"(* a (/ b c))","start":0.217875,"start-est":0.1953125,"status":"ex-start","target":false,"target-prog":"#f","time":3874.363037109375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (exp x) (exp y))","link":"ae442e26978344faf2065266fc19a6d556665672.1.6","name":"exp(x)*exp(y)","output":"(exp (+ x y))","pre":"(and (and (<= -1000.0 x) (<= x -1000.0)) (and (<= -1000.0 y) (<= y -1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (exp x) (exp y))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2087.908447265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 0.0677854773340867) (45312 0.090647073770456) ((19652 0.34847221631402 (if (<= (sqrt x) 2.543697413878056e-15) (- (sqrt (+ y 1.0)) (sqrt y)) (+ (sqrt x) 1.0))) (19648 0.0677854773340867 (+ (- (sqrt x) (sqrt y)) (sqrt (+ y 1.0)))) (6592 3.03742378060094 (+ (sqrt x) 1.0)) (6464 59.4741992722456 (sqrt x))))","end":0.090647073770456,"end-est":0.060515051157537796,"identifier":"#f","input":"(+ (- (sqrt x) (sqrt y)) (sqrt (+ y 1.0)))","link":"4a38b60696e3be35eb2fa17d24deb3f9538de903.1.6","name":"sqrt(x) - sqrt(y) + sqrt(y+1)","output":"(exp (pow (cbrt (log (+ (- (sqrt x) (sqrt y)) (sqrt (+ y 1.0))))) 3.0))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- (sqrt x) (sqrt y)) (sqrt (+ y 1.0)))","start":0.0677854773340867,"start-est":0.06544877930532605,"status":"ex-start","target":false,"target-prog":"#f","time":6088.324462890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(pow (- 1.0 (* y x)) (/ s y))","link":"3c8793f07e8447a966e9da0b7572afe9db69ab51.1.6","name":"pow((1-(y*x)), s/y)","output":"#f","pre":"(and (and (and (<= 1.0 y) (<= y 1000.0)) (and (<= 1.0 x) (<= x 1000.0))) (and (<= 1.0 s) (<= s 1000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- 1.0 (* y x)) (/ s y))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":857.856689453125,"vars":["y","x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.13345612859961153) (320 0.09146652677246153) ((64 0.13825825818203452 1.0)))","end":0.09146652677246153,"end-est":0,"identifier":"#f","input":"(pow (- 1.0 (* y x)) (/ s y))","link":"c4ef2ce3d960405d728fec6a9eb81fa6074f1d2c.1.6","name":"pow((1-(y*x)), s/y)","output":"(- 1.0 (* s x))","pre":"(and (and (and (<= -1000000000.0 y) (<= y 1000000000.0)) (and (<= -1000000000.0 x) (<= x 1000000000.0))) (and (<= -1000000000.0 s) (<= s 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- 1.0 (* y x)) (/ s y))","start":0.13345612859961153,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":6032.154541015625,"vars":["y","x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.13345612859961153) (320 0.09146652677246153) ((64 0.13825825818203452 1.0)))","end":0.09146652677246153,"end-est":0,"identifier":"#f","input":"(pow (- 1.0 (* e x)) (/ s e))","link":"0d1b6239c286aa4c2cadf5076c439e4c5b97d130.1.6","name":"pow((1-(e*x)), s/e)","output":"(- 1.0 (* s x))","pre":"(and (and (and (<= -1000000000.0 e) (<= e 1000000000.0)) (and (<= -1000000000.0 x) (<= x 1000000000.0))) (and (<= -1000000000.0 s) (<= s 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(pow (- 1.0 (* e x)) (/ s e))","start":0.13345612859961153,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":5798.394287109375,"vars":["e","x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 14.481933489005879) (6528 0.007625) ((64 30.53339948274982 y)))","end":0.007625,"end-est":0.01171875,"identifier":"#f","input":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","link":"e90c9f68f71164a38012a51e90b1fed074907384.1.6","name":"sqrt(x^2+y^2)","output":"(hypot x y)","pre":"(and (and (<= 0.0 x) (<= x 1.0)) (and (<= 0.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","start":14.481933489005879,"start-est":16.87841060659977,"status":"imp-start","target":false,"target-prog":"#f","time":3790.091064453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.07531314172485908) (13504 0.06354041406655646) ((13120 0.07531314172485908 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 1.2667597968577322 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.3641264733585787 1.0)))","end":0.06354041406655646,"end-est":0.0703125,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"77c9d883b25c2bfb3f2e48b83463a1bce6e3fc64.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.07531314172485908,"start-est":0.08703595937737447,"status":"ex-start","target":false,"target-prog":"#f","time":3736.8759765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(fabs (- far zp))","link":"7d26b19fb4158d8dd9e22728da602a20e9e4408b.1.6","name":"abs( far - zp)","output":"(fabs (- zp far))","pre":"(and (and (<= 4000.0 far) (<= far 4000.0)) (and (<= 0.0 zp) (<= zp 100.0)))","prec":"binary64","preprocess":"()","spec":"(fabs (- far zp))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1589.09619140625,"vars":["far","zp"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ far r)","link":"47dc86af06e8dc29f1c094ac9b81133e85af58f3.1.6","name":"far + r","output":"(+ far r)","pre":"(and (and (<= 4000.0 far) (<= far 4000.0)) (and (<= 0.0 r) (<= r 10.0)))","prec":"binary64","preprocess":"()","spec":"(+ far r)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1625.008056640625,"vars":["far","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 57.65260930117534) (66948 29.59142544553505) ((19588 29.597947497263007 (if (<= x -3.189853503618366e-306) (log (+ (fabs x) (hypot 1.0 x))) (+ (* -0.16666666666666666 (pow x 3.0)) (+ x (* 0.075 (pow x 5.0)))))) (13636 30.294776207152793 (if (<= x -3.189853503618366e-306) (log (+ (fabs x) 1.0)) (+ (* -0.16666666666666666 (pow x 3.0)) (+ x (* 0.075 (pow x 5.0)))))) (13508 30.387201934292396 (if (<= x -3.189853503618366e-306) (log (+ (fabs x) 1.0)) (fma 0.5 (/ (* x x) (+ x 1.0)) (log1p x)))) (13124 30.393965053948406 (if (<= x -3.189853503618366e-306) (log (+ (fabs x) 1.0)) (+ x (* -0.16666666666666666 (pow x 3.0))))) (6784 31.594340656461682 (+ x (* -0.16666666666666666 (pow x 3.0)))) (64 31.739987012306948 x)))","end":29.59142544553505,"end-est":29.261454156549885,"identifier":"#f","input":"(log (+ (fabs x) (sqrt (+ (* x x) 1.0))))","link":"4226012ee3e1ef0eba5259afd998375450d776a2.1.6","name":"log(abs(x) + sqrt(x*x + 1))","output":"(if (<= x -3.189853503618366e-306) (log (+ (fabs x) (hypot 1.0 x))) (fma (pow x 4.0) (+ (/ -0.125 (+ x 1.0)) (/ -0.125 (pow (+ x 1.0) 2.0))) (fma (pow x 6.0) (fma 0.001388888888888889 (+ (/ 30.0 (pow (+ x 1.0) 3.0)) (/ 45.0 (pow (+ x 1.0) 2.0))) (/ 0.0625 (+ x 1.0))) (fma 0.5 (/ (* x x) (+ x 1.0)) (log1p x)))))","pre":"(and (<= -100000.0 x) (<= x 100000.0))","prec":"binary64","preprocess":"()","spec":"(log (+ (fabs x) (sqrt (+ (* x x) 1.0))))","start":57.65260930117534,"start-est":56.952479694606275,"status":"imp-start","target":false,"target-prog":"#f","time":11048.011474609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 14.500404028973962) (6528 0.00725) ((708 36.42222524162746 (if (<= y 1.3231641200264408e-211) (- (* (* y (/ y x)) -0.5) x) (if (<= y 1.5124583054696355e-183) y (if (<= y 8.615920832314114e-162) (- x) y)))) (524 36.43749515288515 (if (<= y 1.3231641200264408e-211) (- x) (if (<= y 1.5124583054696355e-183) y (if (<= y 8.615920832314114e-162) (- x) y)))) (64 46.876494257065424 y)))","end":0.00725,"end-est":0.01171875,"identifier":"#f","input":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","link":"c7659fe0599c72bf880db0eaa2b1f1403381ae27.1.6","name":"sqrt(x^2+y^2)","output":"(hypot x y)","pre":"(and (and (<= -100.0 x) (<= x 100.0)) (and (<= -100.0 y) (<= y 100.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (pow x 2.0) (pow y 2.0)))","start":14.500404028973962,"start-est":11.773073978126677,"status":"imp-start","target":false,"target-prog":"#f","time":4435.76708984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.051642563876534) (13964 8.928759008760387) ((7632 14.220835853067832 (if (<= b -0.0021) (- (/ c b) (/ b a)) (if (<= b -1.7e-44) (/ (- (sqrt (* c (* a -4.0))) b) (* a 2.0)) (if (<= b -1.4e-91) (/ (- b) a) (if (<= b 5.1e-123) (/ (- (sqrt (* c (* a -4.0))) b) (* a 2.0)) (/ (- c) b)))))) (7624 10.365512625413901 (if (<= b -2.6e+138) (/ (- b) a) (if (<= b 1.35e-120) (* (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (/ 0.5 a)) (/ (- c) b)))) (7624 10.318160524719273 (if (<= b -2.6e+138) (/ (- b) a) (if (<= b 1.35e-120) (/ (- (sqrt (+ (* b b) (* (* a c) -4.0))) b) (* a 2.0)) (/ (- c) b)))) (388 22.60066302091173 (if (<= b 1.15e-258) (/ (- b) a) (/ (- c) b))) (256 45.20940751098164 (/ (- b) a))))","end":8.928759008760387,"end-est":6.676423781797671,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"4e21fa2abf02fcec0b38bef5323cc3d98bd292e8.1.6","name":"NMSE p42, positive","output":"(if (<= b -2.6e+138) (/ (- b) a) (if (<= b -9.5e-298) (/ (- (sqrt (+ (* b b) (* (* a c) -4.0))) b) (* a 2.0)) (if (<= b 6.2e+64) (/ (* c -2.0) (+ b (hypot b (sqrt (* a (* c -4.0)))))) (- (fma (* c (/ c (pow b 3.0))) a (/ c b))))))","pre":"(and (>= (* b b) (* 4.0 (* a c))) (!= a 0.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.051642563876534,"start-est":34.53323055876695,"status":"imp-start","target":false,"target-prog":"#f","time":16587.651123046875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((4032 0.6364188307950215) (8448 0.5043772701703514) ((2368 0.5527118729600725 (+ (* (/ m0 w0) (* a0 (* 3.0 a0))) (+ (* (* w2 m2) (* 3.0 (* (/ a2 w2) (/ a2 w2)))) (* (* w1 m1) (* 3.0 (/ a1 (* w1 (/ w1 a1)))))))) (2368 0.5500684723444547 (+ (* (/ m0 w0) (* a0 (* 3.0 a0))) (+ (* (* w2 m2) (* 3.0 (* (/ a2 w2) (/ a2 w2)))) (* (* w1 m1) (* 3.0 (/ (/ a1 w1) (/ w1 a1))))))) (2368 0.5483303145325858 (+ (* (/ m0 w0) (* a0 (* 3.0 a0))) (- (* (* w1 m1) (* 3.0 (/ (* a1 a1) (* w1 w1)))) (* (* -3.0 (* (/ a2 w2) (/ a2 w2))) (* w2 m2)))))))","end":0.5043772701703514,"end-est":0.4762687988422101,"identifier":"#f","input":"(+ 0.0 (+ (* (* (* w0 (- 0.0 m0)) (* -3.0 (* (* 1.0 (/ a0 w0)) (/ a0 w0)))) 1.0) (+ (* (* (* w1 (- 0.0 m1)) (* -3.0 (* (* 1.0 (/ a1 w1)) (/ a1 w1)))) 1.0) (+ (* (* (* w2 (- 0.0 m2)) (* -3.0 (* (* 1.0 (/ a2 w2)) (/ a2 w2)))) 1.0) 0.0))))","link":"f9091a51e46df7e83eeb3979121d0675d565c957.1.6","name":"test04_dqmom9","output":"(+ (* 3.0 (/ (* m0 (pow a0 2.0)) w0)) (+ (* a1 (* (/ 3.0 (/ w1 a1)) m1)) (* (* w2 m2) (* 3.0 (* (/ a2 w2) (/ a2 w2))))))","pre":"(and (and (and (and (and (and (and (and (and (< -1.0 m0) (< m0 1.0)) (and (< -1.0 m1) (< m1 1.0))) (and (< -1.0 m2) (< m2 1.0))) (and (< 1e-5 w0) (< w0 1.0))) (and (< 1e-5 w1) (< w1 1.0))) (and (< 1e-5 w2) (< w2 1.0))) (and (< 1e-5 a0) (< a0 1.0))) (and (< 1e-5 a1) (< a1 1.0))) (and (< 1e-5 a2) (< a2 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ 0.0 (+ (* (* (* w0 (- 0.0 m0)) (* -3.0 (* (* 1.0 (/ a0 w0)) (/ a0 w0)))) 1.0) (+ (* (* (* w1 (- 0.0 m1)) (* -3.0 (* (* 1.0 (/ a1 w1)) (/ a1 w1)))) 1.0) (+ (* (* (* w2 (- 0.0 m2)) (* -3.0 (* (* 1.0 (/ a2 w2)) (/ a2 w2)))) 1.0) 0.0))))","start":0.6364188307950215,"start-est":0.6098214356003985,"status":"ex-start","target":false,"target-prog":"#f","time":15334.5712890625,"vars":["m0","m1","m2","w0","w1","w2","a0","a1","a2"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.37044605312878615) (960 0.25525) ((960 0.39871278281908085 (+ x0 (+ x7 (+ x3 (+ x4 (+ x5 (+ x2 (+ x1 x6)))))))) (960 0.38008289531691725 (+ x7 (+ x6 (+ x5 (+ x2 (+ x1 (+ x4 (+ x0 x3)))))))) (960 0.4042103390679992 (+ x7 (+ x2 (+ x1 (+ x6 (+ x0 (+ x3 (+ x4 x5)))))))) (960 0.4124439859449824 (+ x0 (+ x2 (+ (+ x5 (+ x3 x6)) (+ x4 (+ x1 x7)))))) (832 49.14616514078396 (+ x7 (+ x2 (+ x1 (+ x4 (+ x3 (+ x5 x6))))))) (704 50.217768447713134 (+ x7 (+ x6 (+ x4 (+ x3 (+ x2 x5)))))) (192 52.99901411095213 (+ x0 x7)) (64 53.382982696561115 x7)))","end":0.25525,"end-est":0.30078125,"identifier":"#f","input":"(+ (+ (+ (+ (+ (+ (+ x0 x1) x2) x3) x4) x5) x6) x7)","link":"26013841e116e9379173aeb3306723184d602f16.1.6","name":"test02_sum8","output":"(+ (+ x0 (+ (+ x1 x2) x3)) (+ (+ x4 x5) (+ x6 x7)))","pre":"(and (and (and (and (and (and (and (and (< 1.0 x0) (< x0 2.0)) (and (< 1.0 x1) (< x1 2.0))) (and (< 1.0 x2) (< x2 2.0))) (and (< 1.0 x3) (< x3 2.0))) (and (< 1.0 x4) (< x4 2.0))) (and (< 1.0 x5) (< x5 2.0))) (and (< 1.0 x6) (< x6 2.0))) (and (< 1.0 x7) (< x7 2.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ (+ (+ (+ x0 x1) x2) x3) x4) x5) x6) x7)","start":0.37044605312878615,"start-est":0.4694137695368841,"status":"ex-start","target":false,"target-prog":"#f","time":15399.212890625,"vars":["x0","x1","x2","x3","x4","x5","x6","x7"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 28.45782312031259) (7240 14.004730860569742) ((7516 27.330817157156822 (if (<= x -3.4160454002032405e+51) (* -2.0 (log (/ -1.0 x))) (if (<= x -2.6691179225072894e+24) (log1p (* y y)) (if (<= x -1.021411039971667) (* -2.0 (log (/ -1.0 x))) (if (<= x -5.801461129879047e-273) (log1p (* x 2.0)) (if (<= x 1.0768783179713093e-233) (log1p (* y y)) (if (<= x 3.9719679651826543e-10) (log1p (* x 2.0)) (if (<= x 2.845333299287113e+56) (* 2.0 (log y)) (* 2.0 (log x)))))))))) (7384 26.955790369221642 (if (<= x -3.4160454002032405e+51) (* -2.0 (log (/ -1.0 x))) (if (<= x -2.6691179225072894e+24) (log1p (* y y)) (if (<= x -5.801461129879047e-273) (log1p (* x (+ x 2.0))) (if (<= x 1.0768783179713093e-233) (log1p (* y y)) (if (<= x 3.9719679651826543e-10) (log1p (* x (+ x 2.0))) (if (<= x 2.845333299287113e+56) (* 2.0 (log y)) (* 2.0 (log x))))))))) (7376 15.653285058584682 (if (<= x -3.4160454002032405e+51) (* -2.0 (log (/ -1.0 x))) (if (<= x -2.6691179225072894e+24) (log1p (* y y)) (if (<= x -0.043267902676504856) (log1p (* x (+ x 2.0))) (if (<= x 85.18125111708436) (log1p (+ (* y y) (* x 2.0))) (* 2.0 (log x))))))) (7112 47.17761888288146 (if (<= (* y y) 3.256769297938434e-179) (log1p (* x 2.0)) (if (<= (* y y) 4.306539206157142e+129) (* y y) (log1p (* x 2.0))))) (7112 36.77270823009574 (if (<= (* y y) 5e-179) (log1p (* x 2.0)) (if (<= (* y y) 2e-23) (* y y) (* 2.0 (log y))))) (6988 35.26281883666697 (if (<= y -2.117305019825898e-44) (* 2.0 (log x)) (if (<= y -2.9199058960336596e-89) (* y y) (if (<= y 8.545292486893071e-16) (log1p (* x 2.0)) (* 2.0 (log y)))))) (6988 30.39698959737137 (if (<= y -2.9199058960336596e-89) (log1p (* y y)) (if (<= y 2.2121719114414812e-88) (log1p (* x 2.0)) (if (<= y 22678.08206518408) (log1p (* y y)) (* 2.0 (log y)))))) (6984 19.416667370705998 (if (<= y -2.440337700233923e-19) (* -2.0 (log (/ -1.0 y))) (if (<= y 8.545292486893071e-16) (log1p (* x (+ x 2.0))) (* 2.0 (log y))))) (192 58.104222269533935 (* y y))))","end":14.004730860569742,"end-est":13.361903462856525,"identifier":"#f","input":"(log1p (+ (* x (+ 2.0 x)) (* y y)))","link":"85c25b0a95de45d5bd6e9eb9348c94bb019fa711.1.6","name":"log1p(x*(2+x)+y*y)","output":"(if (<= y -3.7152440166765965e+69) (* -2.0 (log (/ -1.0 y))) (if (<= y 1.097473823706178e+123) (log1p (+ (* x (+ x 2.0)) (* y y))) (* 2.0 (log y))))","pre":"(and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log1p (+ (* x (+ 2.0 x)) (* y y)))","start":28.45782312031259,"start-est":30.25,"status":"imp-start","target":false,"target-prog":"#f","time":6680.33837890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 42.65081796738821) (7240 14.004730860569742) ((7648 34.48265261761214 (if (<= x -1.333969746247352e+154) (* 2.0 (log y)) (if (<= x -3.4160454002032405e+51) (log1p (* x x)) (if (<= x -2.6691179225072894e+24) (log1p (* y y)) (if (<= x -3.630685613611609e-27) (log1p (* x x)) (if (<= x -5.801461129879047e-273) (* x 2.0) (if (<= x 1.0768783179713093e-233) (log1p (* y y)) (if (<= x 3.9719679651826543e-10) (* x (- 2.0 x)) (if (<= x 2.845333299287113e+56) (* 2.0 (log y)) (* 2.0 (log x))))))))))) (7384 25.25082241435334 (if (<= y -21921.328703870746) (* -2.0 (log (/ -1.0 y))) (if (<= y -1.1762155921218438e-116) (* -2.0 (log (/ -1.0 x))) (if (<= y 3.264123201869004e-299) (* x 2.0) (if (<= y 8e-263) (* -2.0 (log (/ -1.0 x))) (if (<= y 2.2121719114414812e-88) (* x 2.0) (if (<= y 22678.08206518408) (log1p (* y y)) (* 2.0 (log y))))))))) (7376 15.653285058584682 (if (<= x -3.4160454002032405e+51) (* -2.0 (log (/ -1.0 x))) (if (<= x -2.6691179225072894e+24) (log1p (* y y)) (if (<= x -0.043267902676504856) (log1p (* x (+ x 2.0))) (if (<= x 85.18125111708436) (log1p (+ (* y y) (* x 2.0))) (* 2.0 (log x))))))) (7120 34.995960718732235 (if (<= x -1.333969746247352e+154) (* 2.0 (log y)) (if (<= x -3.630685613611609e-27) (log1p (* x x)) (if (<= x 3.9719679651826543e-10) (* x (- 2.0 x)) (if (<= x 2.845333299287113e+56) (* 2.0 (log y)) (* 2.0 (log x))))))) (7112 37.425464973201315 (if (<= (* y y) 5e-179) (* x 2.0) (if (<= (* y y) 2e-23) (* y y) (* 2.0 (log y))))) (6988 25.192493595975847 (if (<= y -4.462590053977824e-12) (* -2.0 (log (/ -1.0 y))) (if (<= y 2.2121719114414812e-88) (* x 2.0) (if (<= y 22678.08206518408) (log1p (* y y)) (* 2.0 (log y)))))) (6984 19.416667370705998 (if (<= y -2.440337700233923e-19) (* -2.0 (log (/ -1.0 y))) (if (<= y 8.545292486893071e-16) (log1p (* x (+ x 2.0))) (* 2.0 (log y))))) (6856 36.926662993234245 (if (<= y -1.1762155921218438e-116) (log1p (* x x)) (if (<= y 8.545292486893071e-16) (* x 2.0) (* 2.0 (log y))))) (456 49.73697749629433 (if (<= y 2.2121719114414812e-88) (* x 2.0) (if (<= y 4.2236092247131734e+108) (* y y) (* x 2.0)))) (192 50.963091270091994 (* x 2.0))))","end":14.004730860569742,"end-est":13.361903462856525,"identifier":"#f","input":"(log (+ (+ 1.0 (* x (+ 2.0 x))) (* y y)))","link":"9f1f4311945dc749ffb3909083f2222a56513c8d.1.6","name":"log(1+x*(2+x)+y*y)","output":"(if (<= y -3.7152440166765965e+69) (* -2.0 (log (/ -1.0 y))) (if (<= y 1.097473823706178e+123) (log1p (+ (* y y) (* x (+ x 2.0)))) (* 2.0 (log y))))","pre":"(and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1.79e+308 y) (<= y 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(log (+ (+ 1.0 (* x (+ 2.0 x))) (* y y)))","start":42.65081796738821,"start-est":44.92274521696806,"status":"imp-start","target":false,"target-prog":"#f","time":9504.163330078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x y)","link":"7fbe7a707324aff53ab89f7a7208d3e5be8e7cad.1.6","name":"x + y","output":"(+ x y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1420.525146484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(+ (- (+ (- (+ (- (- (+ (- (+ (- (+ (+ (- (+ (- (+ (- (- (+ (- (+ (- (* (* (* m11 m22) m33) m44) (* (* (* m11 m22) m34) m43)) (* (* (* m11 m23) m34) m42)) (* (* (* m11 m23) m32) m44)) (* (* (* m11 m24) m32) m43)) (* (* (* m11 m24) m33) m42)) (* (* (* m12 m23) m34) m41)) (* (* (* m12 m23) m31) m44)) (* (* (* m12 m24) m31) m43)) (* (* (* m12 m24) m33) m41)) (* (* (* m12 m21) m33) m44)) (* (* (* m12 m21) m34) m43)) (* (* (* m13 m24) m31) m42)) (* (* (* m13 m24) m32) m41)) (* (* (* m13 m21) m32) m44)) (* (* (* m13 m21) m34) m42)) (* (* (* m13 m22) m34) m41)) (* (* (* m13 m22) m31) m44)) (* (* (* m14 m21) m32) m43)) (* (* (* m14 m21) m33) m42)) (* (* (* m14 m22) m33) m41)) (* (* (* m14 m22) m31) m43)) (* (* (* m14 m23) m31) m42)) (* (* (* m14 m23) m32) m41))","link":"e66e848ac9437adeb6db02e00956c943721f5aee.1.6","name":"                    m11 * m22 * m33 * m44 - m11 * m22 * m34 * m43 + m11 * m23 * m34 * m42 - m11 * m23 * m32 * m44                   + m11 * m24 * m32 * m43 - m11 * m24 * m33 * m42 - m12 * m23 * m34 * m41 + m12 * m23 * m31 * m44                   - m12 * m24 * m31 * m43 + m12 * m24 * m33 * m41 - m12 * m21 * m33 * m44 + m12 * m21 * m34 * m43                   + m13 * m24 * m31 * m42 - m13 * m24 * m32 * m41 + m13 * m21 * m32 * m44 - m13 * m21 * m34 * m42                   + m13 * m22 * m34 * m41 - m13 * m22 * m31 * m44 - m14 * m21 * m32 * m43 + m14 * m21 * m33 * m42                   - m14 * m22 * m33 * m41 + m14 * m22 * m31 * m43 - m14 * m23 * m31 * m42 + m14 * m23 * m32 * m41","output":"#f","pre":"(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<= -1.79e+308 m11) (<= m11 1.79e+308)) (and (<= -1.79e+308 m22) (<= m22 1.79e+308))) (and (<= -1.79e+308 m33) (<= m33 1.79e+308))) (and (<= -1.79e+308 m44) (<= m44 1.79e+308))) (and (<= -1.79e+308 m34) (<= m34 1.79e+308))) (and (<= -1.79e+308 m43) (<= m43 1.79e+308))) (and (<= -1.79e+308 m23) (<= m23 1.79e+308))) (and (<= -1.79e+308 m42) (<= m42 1.79e+308))) (and (<= -1.79e+308 m32) (<= m32 1.79e+308))) (and (<= -1.79e+308 m24) (<= m24 1.79e+308))) (and (<= -1.79e+308 m12) (<= m12 1.79e+308))) (and (<= -1.79e+308 m41) (<= m41 1.79e+308))) (and (<= -1.79e+308 m31) (<= m31 1.79e+308))) (and (<= -1.79e+308 m21) (<= m21 1.79e+308))) (and (<= -1.79e+308 m13) (<= m13 1.79e+308))) (and (<= -1.79e+308 m14) (<= m14 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (- (+ (- (- (+ (- (+ (- (+ (+ (- (+ (- (+ (- (- (+ (- (+ (- (* (* (* m11 m22) m33) m44) (* (* (* m11 m22) m34) m43)) (* (* (* m11 m23) m34) m42)) (* (* (* m11 m23) m32) m44)) (* (* (* m11 m24) m32) m43)) (* (* (* m11 m24) m33) m42)) (* (* (* m12 m23) m34) m41)) (* (* (* m12 m23) m31) m44)) (* (* (* m12 m24) m31) m43)) (* (* (* m12 m24) m33) m41)) (* (* (* m12 m21) m33) m44)) (* (* (* m12 m21) m34) m43)) (* (* (* m13 m24) m31) m42)) (* (* (* m13 m24) m32) m41)) (* (* (* m13 m21) m32) m44)) (* (* (* m13 m21) m34) m42)) (* (* (* m13 m22) m34) m41)) (* (* (* m13 m22) m31) m44)) (* (* (* m14 m21) m32) m43)) (* (* (* m14 m21) m33) m42)) (* (* (* m14 m22) m33) m41)) (* (* (* m14 m22) m31) m43)) (* (* (* m14 m23) m31) m42)) (* (* (* m14 m23) m32) m41))","start":false,"start-est":false,"status":"timeout","target":false,"target-prog":"#f","time":150000,"vars":["m11","m22","m33","m44","m34","m43","m23","m42","m32","m24","m12","m41","m31","m21","m13","m14"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.025936481637041212) (13376 0.01425) ((1372 16.51526167509441 (if (<= a -7.8e+130) (* a (- (- 1.0 v) u)) (if (<= a -3.7931901377202894e-17) (+ a (* u (- b a))) (if (<= a -8.841001792830275e-51) (+ a (* v (- c a))) (if (<= a -6.528867330314857e-86) (+ a (* u (- b a))) (if (<= a 1.1102024622882442e-130) (+ (* v c) (* u b)) (if (<= a 6.54725048159099e-35) (+ a (* v (- c a))) (if (<= a 9.236547018324813e+24) (+ (* v c) (* u b)) (* a (- (- 1.0 v) u)))))))))) (1364 6.568178780020218 (if (<= v -1.8e+33) (+ (* v (- c a)) (- a (* u a))) (if (<= v 8254170260.465905) (+ (* v c) (+ a (* u (- b a)))) (if (<= v 7.5e+107) (- (+ a (* u (- b a))) (* a v)) (if (<= v 1.68e+168) (+ (* v (- c a)) (- a (* u a))) (if (<= v 7.8e+225) (- (+ a (* u (- b a))) (* a v)) (* v (- c a)))))))) (1112 32.06029809134987 (if (<= a -1213029265135648000.0) (* a (- 1.0 u)) (if (<= a -6.210448912109274e-149) (+ a (* v c)) (if (<= a -1.087685292821536e-308) (* u b) (if (<= a 6.282564956004243e-259) (* v c) (if (<= a 1.1102024622882442e-130) (* u b) (if (<= a 9.236547018324813e+24) (+ a (* v c)) (* a (- 1.0 u))))))))) (980 34.222839119616935 (if (<= a -6.528867330314857e-86) (* a (- 1.0 u)) (if (<= a -1.087685292821536e-308) (* u b) (if (<= a 6.282564956004243e-259) (* v c) (if (<= a 1.1102024622882442e-130) (* u b) (if (<= a 9.236547018324813e+24) (* v c) (* a (- 1.0 u)))))))) (968 6.71367205479088 (if (<= v -2.2e+87) (* v (- c a)) (if (<= v 7.5e+141) (+ (* v c) (+ a (* u (- b a)))) (* v (- c a))))) (968 5.436561614896678 (if (<= c -321612974.34814423) (+ (* v c) (+ a (* u (- b a)))) (if (<= c 1.381682465228034e-182) (- (+ a (* u (- b a))) (* a v)) (+ (* v c) (+ a (* u (- b a))))))) (916 44.749960092621265 (if (<= a -2.4787427956205817e+30) (* a (- u)) (if (<= a -1.087685292821536e-308) (* u b) (if (<= a 6.282564956004243e-259) (* v c) (if (<= a 1.1102024622882442e-130) (* u b) (if (<= a 1.7370142155335792e+27) (* v c) (* a (- u)))))))) (832 0.025936481637041212 (+ (* v (- c a)) (+ a (* u (- b a))))) (720 42.36824017931802 (if (<= v -6.565941268843048e-15) (* v c) (if (<= v 1.7658665496665106e-134) (* u b) (if (<= v 5.6e+42) (* v c) (if (<= v 7.5e+107) (* u b) (* v c)))))) (720 42.551437093100525 (if (<= u -2.614939653011048e-89) (* u b) (if (<= u -2.1745028457749104e-212) (* a (- v)) (if (<= u -1.3018370649146698e-225) (* u b) (if (<= u 2.431167912305779e-66) (* v c) (* u b)))))) (716 22.516053574639336 (if (<= u -7.329205494550203e-16) (* u (- b a)) (if (<= u -2.1745028457749104e-212) (* a (- 1.0 v)) (if (<= u 7.078266411060505e-59) (+ a (* v c)) (* u (- b a)))))) (712 14.356383335087935 (if (<= v -1.6776638984128056e-7) (* v (- c a)) (if (<= v 6.899871204773839e-23) (+ a (* u (- b a))) (* v (- c a))))) (712 14.289504713991102 (if (<= u -2.62e-89) (+ a (* u (- b a))) (if (<= u 2.431167912305779e-66) (+ a (* v (- c a))) (+ a (* u (- b a)))))) (192 46.4464111117334 (* u b))))","end":0.01425,"end-est":0.015625,"identifier":"#f","input":"(+ (+ a (* u (- b a))) (* v (- c a)))","link":"83eff09ad6ccd3ca502b9d35f2c5a9c7b15aeecb.1.6","name":"a + u * ( b - a ) + v * ( c - a )","output":"(fma u (- b a) (fma v (- c a) a))","pre":"(and (and (and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 u) (<= u 1.79e+308))) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 v) (<= v 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (+ a (* u (- b a))) (* v (- c a)))","start":0.025936481637041212,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":16284.184814453125,"vars":["a","u","b","v","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007448120312590145) (6720 0.00025) ((1112 16.230883694025295 (if (<= aX -1.9790157380822892e-137) (- aX (* blend aX)) (if (<= aX -1.1134925747848262e-234) (* blend bX) (if (<= aX -2.929925806185811e-273) aX (if (<= aX 1.8091100907443385e-218) (* blend bX) (if (<= aX 1.1443682951576273e-154) (- aX (* blend aX)) (if (<= aX 2.3634573375311724e-76) (* blend bX) (- aX (* blend aX))))))))) (984 16.774015470573985 (if (<= aX -1.9790157380822892e-137) aX (if (<= aX -1.1134925747848262e-234) (* blend bX) (if (<= aX -2.929925806185811e-273) aX (if (<= aX 1.8091100907443385e-218) (* blend bX) (if (<= aX 1.1443682951576273e-154) aX (if (<= aX 2.3634573375311724e-76) (* blend bX) aX))))))) (448 0.007448120312590145 (+ aX (* blend (- bX aX)))) (320 0.6849606069723758 (+ aX (* blend bX))) (64 18.952636783140314 aX)))","end":0.00025,"end-est":0,"identifier":"#f","input":"(+ (* blend (- bX aX)) aX)","link":"61be82dd58121dd889e56471e6c5f1c921455a8c.1.6","name":"blend * ( bX - aX ) + aX","output":"(fma blend (- bX aX) aX)","pre":"(and (and (and (<= 0.0 blend) (<= blend 1.0)) (and (<= -1.79e+308 bX) (<= bX 1.79e+308))) (and (<= -1.79e+308 aX) (<= aX 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (* blend (- bX aX)) aX)","start":0.007448120312590145,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3526.2314453125,"vars":["blend","bX","aX"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.02012215999043749) (13248 0.009915241011860922) ((6976 0.01612215999043749 (+ (fma lx rx (* ly ry)) (* rz lz))) (1492 30.12250682585181 (if (<= (* rz lz) -9.885164331196737e-11) (* rz lz) (if (<= (* rz lz) -7.944079990968619e-287) (* lx rx) (if (<= (* rz lz) 4.0406555820036194e-266) (* ly ry) (if (<= (* rz lz) 1.8516422154628816e-99) (* lx rx) (if (<= (* rz lz) 197959021812708.16) (* ly ry) (* rz lz))))))) (968 9.559944841290154 (if (<= (* lx rx) -1e+54) (+ (* rz lz) (* lx rx)) (if (<= (* lx rx) 1e-6) (+ (* rz lz) (* ly ry)) (+ (* rz lz) (* lx rx))))) (712 30.884031441476747 (if (<= (* rz lz) -9.885164331196737e-11) (* rz lz) (if (<= (* rz lz) 1.0231950969175943e-98) (* lx rx) (* rz lz)))) (712 20.18642528208603 (if (<= rx -4.973528712682479e-21) (* lx rx) (if (<= rx 6.3e+140) (+ (* rz lz) (* ly ry)) (* lx rx)))) (704 0.02012215999043749 (+ (* rz lz) (+ (* ly ry) (* lx rx)))) (192 42.166164407826344 (* rz lz))))","end":0.009915241011860922,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* lx rx) (* ly ry)) (* lz rz))","link":"f8196f83abbfc10777001c1128ad359235f5da8c.1.6","name":"lx * rx + ly * ry + lz * rz","output":"(fma rz lz (fma lx rx (* ly ry)))","pre":"(and (and (and (and (and (and (<= -1.79e+308 lx) (<= lx 1.79e+308)) (and (<= -1.79e+308 rx) (<= rx 1.79e+308))) (and (<= -1.79e+308 ly) (<= ly 1.79e+308))) (and (<= -1.79e+308 ry) (<= ry 1.79e+308))) (and (<= -1.79e+308 lz) (<= lz 1.79e+308))) (and (<= -1.79e+308 rz) (<= rz 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* lx rx) (* ly ry)) (* lz rz))","start":0.02012215999043749,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":11169.672119140625,"vars":["lx","rx","ly","ry","lz","rz"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.015375) (448 0.015375) ((320 0.020375 (+ 54.422304 (* circleSize -4.481836800000001))) (64 1.4128547715239457 54.422304)))","end":0.015375,"end-est":0.01171875,"identifier":"#f","input":"(* 1.00041 (- 54.4 (* 4.48 circleSize)))","link":"3097992e4c7fdee442724ca08edb094929474eb0.1.6","name":"1.00041 * (54.4 - 4.48 * circleSize)","output":"(* 1.00041 (+ 54.4 (* circleSize -4.48)))","pre":"(and (<= 0.0 circleSize) (<= circleSize 10.0))","prec":"binary64","preprocess":"()","spec":"(* 1.00041 (- 54.4 (* 4.48 circleSize)))","start":0.015375,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2468.444091796875,"vars":["circleSize"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 38.089856106538434) (20420 5.86738357310651) ((13444 10.622902280193166 (if (<= xre -1.6219224030935759e+74) (* 0.5 (sqrt (* 2.0 (* xim (* xim (/ -0.5 xre)))))) (* 0.5 (sqrt (* 2.0 (+ xre (hypot xre xim))))))) (7236 18.495149304385034 (if (<= xre -1.6219224030935759e+74) (* 0.5 (sqrt (* 2.0 (* xim (* xim (/ -0.5 xre)))))) (if (<= xre 1.1221053117115742e+86) (* 0.5 (sqrt (* 2.0 (+ xre xim)))) (* 0.5 (* 2.0 (sqrt xre)))))) (7112 18.487438203990877 (if (<= xre -1.6219224030935759e+74) (* 0.5 (sqrt (* xim (/ (- xim) xre)))) (if (<= xre 1.1221053117115742e+86) (* 0.5 (sqrt (* 2.0 (+ xre xim)))) (* 0.5 (* 2.0 (sqrt xre)))))) (6852 22.980345281179805 (if (<= xre 1.1221053117115742e+86) (* 0.5 (sqrt (* xim 2.0))) (* 0.5 (* 2.0 (sqrt xre))))) (6720 46.8329153463895 (* 0.5 (* 2.0 (sqrt xre))))))","end":5.86738357310651,"end-est":5.975299741672366,"identifier":"#f","input":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* xre xre) (* xim xim))) xre))))","link":"cb8fe705625d32daf07d58df1959fbf117b2ce82.1.6","name":"0.5 * sqrt(2.0 * (sqrt(xre * xre + xim * xim) + xre))","output":"(if (<= (+ xre (sqrt (+ (* xre xre) (* xim xim)))) 0.0) (* 0.5 (* (sqrt 2.0) (* xim (sqrt (/ -0.5 xre))))) (* 0.5 (sqrt (* 2.0 (+ xre (hypot xre xim))))))","pre":"(and (and (<= -1.79e+308 xre) (<= xre 1.79e+308)) (and (<= 0.0 xim) (<= xim 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* xre xre) (* xim xim))) xre))))","start":38.089856106538434,"start-est":40.430630199039015,"status":"imp-start","target":false,"target-prog":"#f","time":8034.139892578125,"vars":["xre","xim"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.37534175978750095) (448 0.3518304515658355) ((448 0.36022913594209754 (/ i (* (/ FRAME_RATE SPEED_MULTIPLIER) 0.001))) (448 0.35349548906511424 (/ (* 1000.0 i) (/ FRAME_RATE SPEED_MULTIPLIER)))))","end":0.3518304515658355,"end-est":0.323261279305326,"identifier":"#f","input":"(* (* (/ i FRAME_RATE) SPEED_MULTIPLIER) 1000.0)","link":"0990e8b703a493d14ee696a490564d8333c7c016.1.6","name":"i / FRAME_RATE * SPEED_MULTIPLIER * 1000.0","output":"(/ (* 1000.0 (* i SPEED_MULTIPLIER)) FRAME_RATE)","pre":"(and (and (and (<= 0.0 i) (<= i 1000000000.0)) (and (<= 1.0 FRAME_RATE) (<= FRAME_RATE 1000.0))) (and (<= 1.0 SPEED_MULTIPLIER) (<= SPEED_MULTIPLIER 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (* (/ i FRAME_RATE) SPEED_MULTIPLIER) 1000.0)","start":0.37534175978750095,"start-est":0.37301505115753775,"status":"ex-start","target":false,"target-prog":"#f","time":5075.966064453125,"vars":["i","FRAME_RATE","SPEED_MULTIPLIER"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.352125) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (- a b) a)","link":"2f246672bd06aca7d19eb02473facfa972280fb0.1.6","name":"(a - b) / a","output":"(- 1.0 (/ b a))","pre":"(and (and (<= 1e-25 a) (<= a 1e-24)) (and (<= 1e-31 b) (<= b 1e-30)))","prec":"binary64","preprocess":"()","spec":"(/ (- a b) a)","start":0.352125,"start-est":0.37109375,"status":"ex-start","target":false,"target-prog":"#f","time":2057.489501953125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.014573120312590145) (576 0.014573120312590145) ((580 2.022326520856201 (if (<= b -3.658388191612147e-55) (- e (* c (* b d))) (+ e (* a d)))) (320 1.6858222774495415 (+ e (* a d))) (64 11.93233382475647 e)))","end":0.014573120312590145,"end-est":0.0078125,"identifier":"#f","input":"(+ (* (- a (* b c)) d) e)","link":"4b1c058b34c9094e3ae5b5d131c40c4f47529e38.1.6","name":"(( a - b * c ) * d ) + e","output":"(+ (* (- a (* b c)) d) e)","pre":"(and (and (and (and (and (<= -1000.0 a) (<= a 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 c) (<= c 1000.0))) (and (<= -1000.0 d) (<= d 1000.0))) (and (<= -1000.0 e) (<= e 1000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (- a (* b c)) d) e)","start":0.014573120312590145,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4417.83837890625,"vars":["a","b","c","d","e"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 1.9259760033113942) (6656 0) ((388 53.87710343552911 (if (<= x 1.0) 1.0 (- (* x x)))) (320 1.9259760033113942 (- 1.0 (* x x))) (64 56.9075332408772 1.0)))","end":0,"end-est":0,"identifier":"#f","input":"(- 1.0 (* x x))","link":"1a6098c728dab45208181d63d51f2e64ab25b2a7.1.6","name":"1 - x*x","output":"(- (fma x x -1.0))","pre":"(and (<= 0.9 x) (<= x 1.1))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* x x))","start":1.9259760033113942,"start-est":1.8877120835631038,"status":"imp-start","target":false,"target-prog":"#f","time":2414.793212890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0005731203125901445) (320 0.0005731203125901445) ())","end":0.0005731203125901445,"end-est":0,"identifier":"#f","input":"(- 1.0 (* x x))","link":"46e0571408be76c3d3fcdbff079a591b4318829e.1.6","name":"1 - x*x","output":"(- 1.0 (* x x))","pre":"(and (<= -100.0 x) (<= x 100.0))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* x x))","start":0.0005731203125901445,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1698.1953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.020594360937770433) (832 0.015125) ((704 0.14891748125036058 (/ (* 4.0 x) (+ (* x 0.8116224332440547) (/ 1.0 x)))) (320 1.6140932822828158 (* x (* 4.0 x))) (64 60.84985027421537 4.928400000000001)))","end":0.015125,"end-est":0.01953125,"identifier":"#f","input":"(/ (* (* 4.0 x) x) (+ 1.0 (* (/ x 1.11) (/ x 1.11))))","link":"6356d651462a3bf3b3ef370f2455af4f21a0d8de.1.6","name":"((4.0 * x) * x) / (1.0 + ((x / 1.11) * (x / 1.11)))","output":"(/ (* x (* 4.0 x)) (+ 1.0 (* 0.8116224332440547 (* x x))))","pre":"(and (<= 0.0 x) (<= x 65504.0))","prec":"binary64","preprocess":"()","spec":"(/ (* (* 4.0 x) x) (+ 1.0 (* (/ x 1.11) (/ x 1.11))))","start":0.020594360937770433,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":4813.10009765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.621250761007008) (832 0.3133374062518029) ((832 0.42136466408098067 (/ (* x (* 4.0 x)) (+ 1.0 (* x (/ x 1.2321000000000002))))) (832 0.33154736875252405 (/ (* x (* 4.0 x)) (+ 1.0 (* (* x x) 0.8116224332440547)))) (448 48.74080686191465 (+ 4.928400000000001 (/ (/ -6.072281640000002 x) x))) (64 49.924816454195465 4.928400000000001)))","end":0.3133374062518029,"end-est":0.296875,"identifier":"#f","input":"(/ (* (* 4.0 x) x) (+ 1.0 (* (/ x 1.11) (/ x 1.11))))","link":"1dd8e6aef393ded063b400948f10702cb1a8eeb5.1.6","name":"((4.0 * x) * x) / (1.0 + ((x / 1.11) * (x / 1.11)))","output":"(/ (* x (* 4.0 x)) (+ 1.0 (/ (* x x) 1.2321000000000002)))","pre":"(and (<= 2.2 x) (<= x 2.4))","prec":"binary64","preprocess":"()","spec":"(/ (* (* 4.0 x) x) (+ 1.0 (* (/ x 1.11) (/ x 1.11))))","start":0.621250761007008,"start-est":0.7078477539794926,"status":"ex-start","target":false,"target-prog":"#f","time":6238.232177734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 43.795189968447815) (68752 6.399963903346784) ((7492 12.379513604652699 (if (<= b 1.25e-58) (* (- b (sqrt (+ (* b b) (* a (* c -4.0))))) (/ -0.5 a)) (/ (- c) b))) (7236 12.584228669476355 (if (<= b 1.25e-58) (* (/ -0.5 a) (- b (sqrt (* c (* a -4.0))))) (/ (- c) b))) (7236 12.563484084537896 (if (<= b 1.25e-58) (/ (- (sqrt (* c (* a -4.0))) b) (* 2.0 a)) (/ (- c) b))) (256 21.081690270048995 (/ (- c) b))))","end":6.399963903346784,"end-est":7.162088926792668,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"fb6b3fc361b45a35fe1d706d69fc5752c86003eb.1.6","name":"(-b + sqrt(b^2 - 4*a*c))/(2*a)","output":"(if (<= (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) (- INFINITY)) (/ (- c) b) (if (<= (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) -2e-279) (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) (if (<= (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) 0.0) (/ (- c) b) (if (<= (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) 5e+249) (/ (- (sqrt (- (pow b 2.0) (* (* 4.0 a) c))) b) (* 2.0 a)) (/ (- c) b)))))","pre":"(and (and (and (<= 0.0 b) (<= b 1.79e+308)) (and (<= -1.79e+308 a) (<= a 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":43.795189968447815,"start-est":43.90037917375142,"status":"imp-start","target":false,"target-prog":"#f","time":13027.604736328125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((12864 58.06686390225869) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(log (exp x))","link":"70d53e9845605a18aaf419d63661e1a8121d2864.1.6","name":"log(exp(x))","output":"x","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(log (exp x))","start":58.06686390225869,"start-est":57.80272860315841,"status":"imp-start","target":false,"target-prog":"#f","time":5762.80029296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12928 1.7350245779033968) (51584 1.2482360104223416) ((51584 1.256298189760426 (* (cbrt (sin E)) (* (pow (cbrt (* (sin E) x)) 2.0) (cbrt x)))) (25728 1.299953431616764 (* x (log (exp (sin E))))) (12928 1.7350245779033968 (* (sin E) x))))","end":1.2482360104223416,"end-est":1.241260006099222,"identifier":"#f","input":"(* x (sin E))","link":"e43ae3f47e4ea95cca2811ac3a173205e9e856ab.1.6","name":"x*sin(E)","output":"(* (* (pow (cbrt (* (sin E) x)) 2.0) (cbrt (sin E))) (cbrt x))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(* x (sin E))","start":1.7350245779033968,"start-est":1.727071581473341,"status":"apx-start","target":false,"target-prog":"#f","time":4129.47314453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((12800 2.0) (51456 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin E)","link":"c67fa63273706ea52a4827a8dd6a22dda860d9e1.1.6","name":"sin(E)","output":"(* (pow (cbrt (pow (sin E) 0.8333333333333334)) 3.0) (pow (sin E) 0.16666666666666666))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sin E)","start":2.0,"start-est":2.0,"status":"imp-start","target":false,"target-prog":"#f","time":2976.07470703125,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((12800 61.92199421716276) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(sin PI)","link":"301568cd7598e177f25ea9125fabc7c522bd5290.1.6","name":"sin(PI)","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sin PI)","start":61.92199421716276,"start-est":61.92199421717352,"status":"imp-start","target":false,"target-prog":"#f","time":35962.7998046875,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 1e-6 x)","link":"707e7e0c26726036806fba75d21d209746e53f50.1.6","name":"0.000001x","output":"(* 1e-6 x)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(* 1e-6 x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1215.500732421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 0.0 x)","link":"7035869b50c259aeb5a4cce12086765209663e74.1.6","name":"0x","output":"0.0","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(* 0.0 x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1085.17138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((192 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ 1.0 x)","link":"b2f4972c52e373acf5bbeaf12592eb6cd6c10407.1.6","name":"1/x","output":"(/ 1.0 x)","pre":"(and (<= 0.1 x) (<= x 0.5))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1354.17626953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((64 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"1.0","link":"7d90db097ab751729acf82afc82c112ef1303e9c.1.6","name":"1.0","output":"1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"1.0","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":827.81640625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.11680949270295173) (27008 0.041571053128786076) ((13504 0.06644605312878601 (/ (+ x (- 1.0 x)) (+ (sqrt x) (sqrt (+ x 1.0))))) (13120 0.11680949270295173 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 1.4296599412108162 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (6848 1.432582138139634 (+ 1.0 (- (* x 0.5) (sqrt x)))) (6592 2.2460963093680455 (- 1.0 (sqrt x))) (64 3.5275444079348586 1.0)))","end":0.041571053128786076,"end-est":0.03972626953688403,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"3e554fb847d0dd722ea93b7b0108cccab2afc312.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(* (/ (+ x (- 1.0 x)) (+ (pow (+ x 1.0) 1.5) (pow x 1.5))) (- (+ x (+ x 1.0)) (hypot x (sqrt x))))","pre":"(and (<= -10000.0 x) (<= x 10000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.11680949270295173,"start-est":0.12949676457262985,"status":"ex-start","target":false,"target-prog":"#f","time":4783.181884765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.07531314172485908) (13504 0.06354041406655646) ((13120 0.07531314172485908 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 1.2667597968577322 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 3.3641264733585787 1.0)))","end":0.06354041406655646,"end-est":0.0703125,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"788963df6e2807ff59c7425758c438df11b91925.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.07531314172485908,"start-est":0.08703595937737447,"status":"ex-start","target":false,"target-prog":"#f","time":3916.08837890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 0.047212782819080486) (13632 0.026005036215128216) ((1344 0.03195996250072116 (/ (/ (* U (+ t 1.0)) (+ 1.0 (- t n))) (/ (+ 1.0 (- t n)) (+ t 1.0)))) (1344 0.046941542193900204 (* U (* (/ (+ t 1.0) (+ t (- 1.0 n))) (/ (+ t 1.0) (+ t (- 1.0 n)))))) (576 0.04354459860087188 (/ U (* (+ n -1.0) (+ n -1.0)))) (448 1.3081974308318414 (/ U (+ 1.0 (* n -2.0)))) (448 1.2755903708505005 (+ U (* 2.0 (* U n)))) (64 1.9599809590054411 U)))","end":0.026005036215128216,"end-est":0.0078125,"identifier":"#f","input":"(* U (pow (/ (+ t 1.0) (+ (- t n) 1.0)) 2.0))","link":"5573508e9acac18ade6c92a2523e6447f2117fe5.1.6","name":"U * pow((t + 1) / (t - n + 1), 2)","output":"(* (/ U (pow (- t (+ n -1.0)) 2.0)) (pow (+ t 1.0) 2.0))","pre":"(and (and (and (<= 0.0 U) (<= U 1.0)) (and (<= 0.0 t) (<= t 1000.0))) (and (<= 0.0 n) (<= n 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* U (pow (/ (+ t 1.0) (+ (- t n) 1.0)) 2.0))","start":0.047212782819080486,"start-est":0.025722509768442016,"status":"ex-start","target":false,"target-prog":"#f","time":12379.02490234375,"vars":["U","t","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.21964453715508) (13248 0.21201221875540852) ((7112 0.6245211723112467 (if (<= x -1.5572838070556925) (/ (- 1.0 (cos x)) x) (if (<= x 7.538685291491507e-9) (* x (fma -0.041666666666666664 (* x x) 0.5)) (/ (- 1.0 (cos x)) x)))) (6984 0.684164055966513 (if (<= x -1.5572838070556925) (/ (- 1.0 (cos x)) x) (if (<= x 7.538685291491507e-9) (* x 0.5) (/ (- 1.0 (cos x)) x)))) (968 26.961639816825343 (if (<= x -5.4034354658064926e-8) (/ (/ 1.0 (+ 0.16666666666666666 (/ 2.0 (* x x)))) x) (if (<= x 9.785518937293989e-24) (* x 0.5) (/ (/ 1.0 (+ 0.16666666666666666 (/ 2.0 (* x x)))) x)))) (192 31.08348969510434 (* x 0.5))))","end":0.21201221875540852,"end-est":0.162441259768442,"identifier":"#f","input":"(/ (- 1.0 (cos x)) x)","link":"25cafaf04619acf4f8ac2171842b9b01840350b0.1.6","name":"(1-cos(x))/x","output":"(* (sin x) (/ (tan (* x 0.5)) x))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) x)","start":30.21964453715508,"start-est":30.32338524079839,"status":"imp-start","target":false,"target-prog":"#f","time":9241.572265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 58.92234123156751) (6912 0.8697143074193758) ((192 1.1734938326742401 (* x 0.5))))","end":0.8697143074193758,"end-est":0.9456397430887261,"identifier":"#f","input":"(/ (- 1.0 (cos x)) x)","link":"0d3cb6c41f539d6767e6ec81e43b1e1d10ae0bca.1.6","name":"(1-cos(x))/x","output":"(+ (* -0.041666666666666664 (pow x 3.0)) (* x 0.5))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) x)","start":58.92234123156751,"start-est":59.229285905450226,"status":"imp-start","target":false,"target-prog":"#f","time":7604.56103515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 29.119850282387254) (13120 0.01275) ((704 0.7952144152209532 (* x (* x (+ (* x (* x -0.041666666666666664)) 0.5)))) (320 1.0536339418224296 (* x (* x 0.5)))))","end":0.01275,"end-est":0.00390625,"identifier":"#f","input":"(- 1.0 (cos x))","link":"58317b5a3c96d351588a41da7feca2926ec43dec.1.6","name":"1-cos(x)","output":"(* (sin x) (tan (/ x 2.0)))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (cos x))","start":29.119850282387254,"start-est":30.093038663752598,"status":"imp-start","target":false,"target-prog":"#f","time":8626.592041015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 29.268603993516557) (13120 0.010375) ((7040 0.21096923724498837 (+ (* x (* x 0.5)) (* -0.041666666666666664 (pow x 4.0)))) (6976 0.2180958269799719 (* (* x x) (fma x (* x -0.041666666666666664) 0.5))) (6976 0.21316060066742587 (* x (* x (fma (* x x) -0.041666666666666664 0.5)))) (320 0.598746859324082 (* x (* x 0.5)))))","end":0.010375,"end-est":0.015625,"identifier":"#f","input":"(- 1.0 (cos x))","link":"2bcde5ea5867aeef902acb8c9cc2f3da2acef72f.1.6","name":"1-cos(x)","output":"(* (sin x) (tan (/ x 2.0)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (cos x))","start":29.268603993516557,"start-est":30.021716265582143,"status":"imp-start","target":false,"target-prog":"#f","time":9681.67236328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6464 0.00025) (6464 0.00025) ((64 61.09963577000664 x)))","end":0.00025,"end-est":0.00390625,"identifier":"#f","input":"(sin x)","link":"c12d38772b0f9a0787ddfcced937010e3d636170.1.6","name":"sin(x)","output":"(sin x)","pre":"(and (<= 1e+40 x) (<= x 2e+40))","prec":"binary64","preprocess":"()","spec":"(sin x)","start":0.00025,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2984.702880859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 61.99859042973555) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ 1.0 1e+20) 1e+20)","link":"4a337ed4ec98c4a2591d401c17fc95aa7185da5e.1.6","name":"(1+1e20)-1e20","output":"1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ 1.0 1e+20) 1e+20)","start":61.99859042973555,"start-est":61.99859042974503,"status":"imp-start","target":false,"target-prog":"#f","time":942.600341796875,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ 1.0 (- 1e+20 1e+20))","link":"1cd8aef45ed0e3b7cb627d40c275556fb6a15833.1.6","name":"1+(1e20-1e20)","output":"1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (- 1e+20 1e+20))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":889.13623046875,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.48766649082199354) (13504 0.0692385343791466) ((13120 0.48766649082199354 (- (sqrt (+ x 1.0)) (sqrt x))) (6848 2.2866513809224016 (+ (* x 0.5) (- 1.0 (sqrt x)))) (64 4.34523711837136 1.0)))","end":0.0692385343791466,"end-est":0.06478500976844201,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"9cbd6dc7d86655f89b630c0b7e0bab49c13ee338.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= -1000000000.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.48766649082199354,"start-est":0.4172873114972534,"status":"ex-start","target":false,"target-prog":"#f","time":4276.91845703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 47.56457133566387) (19392 47.565344915935256) ((6852 51.52626185819103 (if (<= (/ 1.0 x) -29478703096729.695) (expm1 (/ 1.0 x)) (/ 1.0 x))) (6592 47.56457133566387 (sin (/ 1.0 x))) (192 53.656592376348925 (/ 1.0 x))))","end":47.565344915935256,"end-est":49.445285394491385,"identifier":"#f","input":"(sin (/ 1.0 x))","link":"b244ea322fde48ede6a0865af8b3f859ae3e6497.1.6","name":"sin(1/x)","output":"(expm1 (log1p (sin (/ 1.0 x))))","pre":"(and (<= -1e+50 x) (<= x 1e+50))","prec":"binary64","preprocess":"()","spec":"(sin (/ 1.0 x))","start":47.56457133566387,"start-est":49.445285438872766,"status":"apx-start","target":false,"target-prog":"#f","time":6618.52978515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6656 0.1526847798233072) (6912 0.21036728850136283) ((6656 0.1526847798233072 (pow (+ 1.0 x) 34.0)) (832 2.338603314139107 (+ 1.0 (* x (+ 34.0 (* x (+ 561.0 (* x 5984.0))))))) (320 2.694206451586026 (+ 1.0 (* x 34.0))) (64 3.263561733620174 1.0)))","end":0.21036728850136283,"end-est":0.13068752631128264,"identifier":"#f","input":"(pow (+ x 1.0) 34.0)","link":"b7008c13499b710b23fef048ee5479a5293b908a.1.6","name":"(x+1)^34","output":"(+ (+ 1.0 (pow (+ 1.0 x) 34.0)) -1.0)","pre":"(and (<= -1e+50 x) (<= x 1e+50))","prec":"binary64","preprocess":"()","spec":"(pow (+ x 1.0) 34.0)","start":0.1526847798233072,"start-est":0.13285305045537535,"status":"ex-start","target":false,"target-prog":"#f","time":3361.70947265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 5.966836730159981) (26176 6.097893860319987) ((13376 5.966029392453672 (+ 1.0 (+ -1.0 (/ (sin (* t a)) (sin a))))) (13376 6.003545714957952 (/ (+ 1.0 (+ (sin (* t a)) -1.0)) (sin a))) (13376 6.016118888461983 (/ (+ (+ 1.0 (sin (* t a))) -1.0) (sin a))) (13120 5.966836730159981 (/ (sin (* t a)) (sin a))) (7300 53.70982462071087 (if (<= a 3.1416) (* t (fma 0.16666666666666666 (* a a) 1.0)) (/ a (+ (/ a t) (* -0.16666666666666666 (/ (pow a 3.0) t)))))) (6720 55.93675971118726 (* t (/ a (sin a)))) (64 60.27146379268461 t)))","end":6.097893860319987,"end-est":5.946922170071377,"identifier":"#f","input":"(/ (sin (* t a)) (sin a))","link":"5543e59ad4e98cea6a43b4b2559fb9d68cf12d88.1.6","name":"sin(t*a)/sin(a)","output":"(/ (+ (+ 1.0 (log (exp (sin (* t a))))) -1.0) (sin a))","pre":"(and (and (<= 0.99 t) (<= t 1.0)) (and (<= 3.14 a) (<= a 3.15)))","prec":"binary64","preprocess":"()","spec":"(/ (sin (* t a)) (sin a))","start":5.966836730159981,"start-est":5.986733301967248,"status":"apx-start","target":false,"target-prog":"#f","time":8290.352294921875,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.36020545156583544) (85056 0.5180656408711836) ((13120 0.36020545156583544 (/ (sin (* t a)) (sin a))) (6720 1.1595131220360526 (/ t (/ (sin a) a))) (704 60.617814181317485 (* a (+ (/ t a) (* 0.16666666666666666 (* t a))))) (64 60.64185078387988 t)))","end":0.5180656408711836,"end-est":0.363945019536884,"identifier":"#f","input":"(/ (sin (* t a)) (sin a))","link":"747ff2005864f9f5200ba349e3bd3535055ea58f.1.6","name":"sin(t*a)/sin(a)","output":"(fma -0.16666666666666666 (* (pow t 3.0) (/ (pow a 3.0) (sin a))) (fma (/ a (sin a)) t (fma 0.008333333333333333 (* (pow t 5.0) (/ (pow a 5.0) (sin a))) (* (/ (pow a 7.0) (sin a)) (* -0.0001984126984126984 (pow t 7.0))))))","pre":"(and (and (<= 0.0 t) (<= t 1.0)) (and (<= 3.14 a) (<= a 3.15)))","prec":"binary64","preprocess":"()","spec":"(/ (sin (* t a)) (sin a))","start":0.36020545156583544,"start-est":0.37337875976844204,"status":"ex-start","target":false,"target-prog":"#f","time":6876.497802734375,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.22646457464432) (6848 0.41239876206592535) ((64 0.7352508381939593 t)))","end":0.41239876206592535,"end-est":0.10801536696842626,"identifier":"#f","input":"(/ (sin (* t a)) (sin a))","link":"47f6add95d0fde9bc2c2cb78b1f9d12146039371.1.6","name":"sin(t*a)/sin(a)","output":"(fma t (* a (* a 0.16666666666666666)) t)","pre":"(and (and (<= 0.0 t) (<= t 1.0)) (and (<= 0.0 a) (<= a 4.0)))","prec":"binary64","preprocess":"()","spec":"(/ (sin (* t a)) (sin a))","start":28.22646457464432,"start-est":29.36072437683133,"status":"imp-start","target":false,"target-prog":"#f","time":4033.019775390625,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.234867149158013) (13440 0.38286236763708004) ((6720 0.13462818892633888 (/ a (/ (sin a) t))) (6720 0.1316800697563918 (* a (/ t (sin a)))) (704 0.5024561708227016 (* a (+ (/ t a) (* 0.16666666666666666 (* a t))))) (64 0.707726955947025 t)))","end":0.38286236763708004,"end-est":0.09451525516060413,"identifier":"#f","input":"(/ (sin (* t a)) (sin a))","link":"a8a740f4c92f8e3f4bc8489d41e3126ad4444d1a.1.6","name":"sin(t*a)/sin(a)","output":"(fma a (* a (* -0.16666666666666666 (- (pow t 3.0) t))) t)","pre":"(and (and (<= 0.0 t) (<= t 1.0)) (and (<= 0.0 a) (<= a 3.14159265359)))","prec":"binary64","preprocess":"()","spec":"(/ (sin (* t a)) (sin a))","start":28.234867149158013,"start-est":29.3691454287954,"status":"imp-start","target":false,"target-prog":"#f","time":4788.646728515625,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.44268715065989) (6720 0.011557348884451016) ((704 0.3841312176754267 (* a (+ (/ t a) (* 0.16666666666666666 (* t a))))) (64 0.5902494988888646 t)))","end":0.011557348884451016,"end-est":0.0078125,"identifier":"#f","input":"(/ (sin (* t a)) (sin a))","link":"b2c6da4088f04ede9123df42111779608697088d.1.6","name":"sin(t*a)/sin(a)","output":"(* t (/ a (sin a)))","pre":"(and (and (<= 0.0 t) (<= t 1.0)) (and (<= -1.0 a) (<= a 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (sin (* t a)) (sin a))","start":28.44268715065989,"start-est":29.5697213617116,"status":"imp-start","target":false,"target-prog":"#f","time":4276.656982421875,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.010625) (6720 0.0021449839170972988) ())","end":0.0021449839170972988,"end-est":0,"identifier":"#f","input":"(sin (* (- 1.0 t) a))","link":"7b131a8da52b84b9019c7be66657034c675a258f.1.6","name":"sin((1-t)*a)","output":"(sin (- a (* a t)))","pre":"(and (and (<= 0.0 t) (<= t 1.0)) (and (<= 0.0 a) (<= a 3.14159265359)))","prec":"binary64","preprocess":"()","spec":"(sin (* (- 1.0 t) a))","start":0.010625,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2605.116455078125,"vars":["t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((26688 26.16070500349034) (19904 0.004938024785843687) ((584 10.870335371975223 (if (<= q -1.240964458565384e-295) (- q (* t q)) (if (<= q 2.02187670691108e-301) (* t r) (- q (* t q))))) (456 11.406694370335652 (if (<= q -1.240964458565384e-295) q (if (<= q 2.02187670691108e-301) (* t r) q))) (448 0.14290406930410096 (+ q (* t (- r q)))) (64 11.37749464274996 q)))","end":0.004938024785843687,"end-est":0.0078125,"identifier":"#f","input":"(+ (/ (* q (sin (* (- 1.0 t) a))) (sin a)) (/ (* r (sin (* t a))) (sin a)))","link":"235239491a5f2a06226786045bbad3f1256a8e84.1.6","name":"q*sin((1-t)*a)/sin(a) + r*sin(t*a)/sin(a)","output":"(fma t (* (/ a (sin a)) (- r (* q (cos a)))) q)","pre":"(and (and (and (and (<= -1.0 q) (<= q 1.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= 0.0 a) (<= a 3.14159265359))) (and (<= -1.0 r) (<= r 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (* q (sin (* (- 1.0 t) a))) (sin a)) (/ (* r (sin (* t a))) (sin a)))","start":26.16070500349034,"start-est":27.376653190462314,"status":"imp-start","target":false,"target-prog":"#f","time":10309.751220703125,"vars":["q","t","a","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((26688 26.15891797247379) (19904 0.004239939391809197) ((7488 0.08102867773263726 (+ q (* t (- (fma (* a a) (+ (* r 0.16666666666666666) (* q 0.3333333333333333)) r) q)))) (584 10.870335371975342 (if (<= q -1.240964458565384e-295) (- q (* t q)) (if (<= q 2.02187670691108e-301) (* t r) (- q (* t q))))) (456 11.40669437033577 (if (<= q -1.240964458565384e-295) q (if (<= q 2.02187670691108e-301) (* t r) q))) (448 0.142904069305073 (+ q (* t (- r q)))) (64 11.377494642749966 q)))","end":0.004239939391809197,"end-est":0.0078125,"identifier":"#f","input":"(+ (/ (* q (sin (* (- 1.0 t) a))) (sin a)) (/ (* r (sin (* t a))) (sin a)))","link":"a7a4868547f807cdcb8e7335510f83ae72d9e6e3.1.6","name":"q*sin((1-t)*a)/sin(a) + r*sin(t*a)/sin(a)","output":"(fma t (* (/ a (sin a)) (- r (* q (cos a)))) q)","pre":"(and (and (and (and (<= -1.0 q) (<= q 1.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= 0.0 a) (<= a 3.141592654))) (and (<= -1.0 r) (<= r 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (* q (sin (* (- 1.0 t) a))) (sin a)) (/ (* r (sin (* t a))) (sin a)))","start":26.15891797247379,"start-est":27.361256231792872,"status":"imp-start","target":false,"target-prog":"#f","time":11811.130615234375,"vars":["q","t","a","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((26688 27.95685233272061) (6720 0.008116211176644524) ((716 11.089829442090984 (if (<= t 1.0126250974235752e-37) a (if (<= t 2.151135641529875e-30) (* t b) (if (<= t 3.3885911926593344e-7) (- a (* t a)) (* t b))))) (588 11.711534543753922 (if (<= t 1.0126250974235752e-37) a (if (<= t 2.151135641529875e-30) (* t b) (if (<= t 1.1617896299537256e-21) a (* t b))))) (448 0.01571057211441496 (+ a (* t (- b a)))) (64 11.320843709151658 a)))","end":0.008116211176644524,"end-est":0,"identifier":"#f","input":"(+ (/ (* a (sin (* (- 1.0 t) a))) (sin a)) (/ (* b (sin (* t a))) (sin a)))","link":"d48e8336b93f032a476fd798989e605ff30ca243.1.6","name":"a*sin((1-t)*a)/sin(a) + b*sin(t*a)/sin(a)","output":"(fma t (- b a) a)","pre":"(and (and (and (<= -1.0 a) (<= a 1.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= -1.0 b) (<= b 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (* a (sin (* (- 1.0 t) a))) (sin a)) (/ (* b (sin (* t a))) (sin a)))","start":27.95685233272061,"start-est":25.990627033079008,"status":"imp-start","target":false,"target-prog":"#f","time":7924.78271484375,"vars":["a","t","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.025030990939180448) (6848 0.02075) ((584 12.39440745852027 (if (<= b -1.567435280725442e+53) (* b b) (if (<= b 1.4250462757556228e+21) (* -4.0 (* a c)) (* b b)))) (576 0.025030990939180448 (+ (* b b) (* c (* a -4.0)))) (192 35.47654966095611 (* b b))))","end":0.02075,"end-est":0,"identifier":"#f","input":"(- (* b b) (* (* 4.0 a) c))","link":"e177b7b769bd76054cf94d7099f990ba1c48a6ab.1.6","name":"b*b  -4*a*c","output":"(fma (* a -4.0) c (* b b))","pre":"(and (and (and (<= -1.79e+308 b) (<= b 1.79e+308)) (and (<= -1.79e+308 a) (<= a 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(- (* b b) (* (* 4.0 a) c))","start":0.025030990939180448,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4070.913330078125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00725) (6720 0.00425) ((456 10.964555691884332 (if (<= b -835033.6313158347) (* b b) (if (<= b 1.321400457522995e-45) (* a c) (* b b)))) (448 0.00725 (+ (* b b) (* a c))) (192 35.87428665665408 (* b b))))","end":0.00425,"end-est":0,"identifier":"#f","input":"(+ (* b b) (* a c))","link":"1b2e24312711fa66999630f5df797c8c1351c046.1.6","name":"b*b  + a*c","output":"(fma a c (* b b))","pre":"(and (and (and (<= -1.79e+308 b) (<= b 1.79e+308)) (and (<= -1.79e+308 a) (<= a 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(+ (* b b) (* a c))","start":0.00725,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":3517.44189453125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 26.82908561524495) (32712 6.729935846725513) ((13384 7.779656419439836 (if (<= b -4.2e-71) (- b) (if (<= b 1e-90) (* (sqrt c) (sqrt (* a -4.0))) (if (<= b 1.0805532016005595e+55) (sqrt (- (* b b) (* c (* a 4.0)))) b)))) (7240 6.487539907066767 (if (<= b -1.8264519010401256e+139) (- (* a (* c (/ 2.0 b))) b) (if (<= b 1.0805532016005595e+55) (sqrt (- (* b b) (* c (* a 4.0)))) b))) (6984 12.323363530625286 (if (<= b -4.2e-71) (- b) (if (<= b 6.6e-68) (sqrt (* c (* a -4.0))) b))) (260 20.447848244911246 (if (<= b 0.0) (- b) b)) (64 41.66975014018193 b)))","end":6.729935846725513,"end-est":13.101947230409477,"identifier":"#f","input":"(sqrt (- (* b b) (* (* 4.0 a) c)))","link":"04d274be7fa33af287d9e2553df3e5e6bb78e5b1.1.6","name":"sqrt(b*b - 4*a*c)","output":"(if (<= b -4.2e-71) (- b) (if (<= b 1e-90) (pow (cbrt (hypot b (* (sqrt c) (sqrt (* a -4.0))))) 3.0) (if (<= b 1.0805532016005595e+55) (sqrt (- (* b b) (* c (* a 4.0)))) b)))","pre":"(and (and (and (<= -1.79e+308 b) (<= b 1.79e+308)) (and (<= -1.79e+308 a) (<= a 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(sqrt (- (* b b) (* (* 4.0 a) c)))","start":26.82908561524495,"start-est":25.589995913342523,"status":"imp-start","target":false,"target-prog":"#f","time":9423.3828125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.04025) (576 0.0475) ((584 12.253224085861202 (if (<= b -6507.434611135926) (* b b) (if (<= b 1.1398000973999453e-88) (* a (* c -4.0)) (* b b)))) (192 35.592164125226354 (* b b))))","end":0.0475,"end-est":0.00390625,"identifier":"#f","input":"(- (pow b 2.0) (* (* 4.0 a) c))","link":"828b6bf0fd3bc710409f134bf91043a41efd1cff.1.6","name":"b^2 - 4*a*c","output":"(+ (* a (* c -4.0)) (* b b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (pow b 2.0) (* (* 4.0 a) c))","start":0.04025,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4034.541259765625,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(floor (+ (* a (- 1.0 t)) (* b t)))","link":"aa9f24e5e5b97706773b5c1304dc4d0979377963.1.6","name":"a * (1 - t) + b * t","output":"(floor a)","pre":"(and (and (and (<= 0.0 a) (<= a 255.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= 0.0 b) (<= b 255.0)))","prec":"binary64","preprocess":"()","spec":"(floor (+ (* a (- 1.0 t)) (* b t)))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2556.039306640625,"vars":["a","t","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.0115) (6720 0.000125) ((584 11.069831364866097 (if (<= b 2.785384157188823e-51) (* a (- 1.0 t)) (if (<= b 1.4031899599416712e-43) (* t b) (* a (- 1.0 t))))) (576 0.0115 (+ (* a (- 1.0 t)) (* t b))) (456 11.69029677880154 (if (<= b 2.785384157188823e-51) a (if (<= b 1.4031899599416712e-43) (* t b) a))) (64 11.219317208011427 a)))","end":0.000125,"end-est":0,"identifier":"#f","input":"(+ (* a (- 1.0 t)) (* b t))","link":"095215abb0b680b3d7e9ae2a1c0ca3e86b01b493.1.6","name":"a * (1 - t) + b * t","output":"(fma t (- b a) a)","pre":"(and (and (and (<= 0.0 a) (<= a 255.0)) (and (<= 0.0 t) (<= t 1.0))) (and (<= 0.0 b) (<= b 255.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* a (- 1.0 t)) (* b t))","start":0.0115,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":3027.5771484375,"vars":["a","t","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 61.0415996325019) (13248 0.26619812031259016) ((64 59.731235835554926 1.0)))","end":0.26619812031259016,"end-est":0.28515625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"d86f3a00eda4b48736a28413e3eb47d042d54f41.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(/ 1.0 (+ (sqrt (+ 1.0 x)) (sqrt x)))","pre":"(and (<= 1000000000.0 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":61.0415996325019,"start-est":61.09638093025496,"status":"imp-start","target":false,"target-prog":"#f","time":5959.157470703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.03119116562662261) (13120 0.03119116562662261) ((6848 0.6900291785421054 (+ 1.0 (- (* x 0.5) (sqrt x)))) (64 2.8510785463234565 1.0)))","end":0.03119116562662261,"end-est":0.04296875,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"eecc362e23e1f39448e3fffae09c902246b1b0aa.1.6","name":"sqrt(x+1)-sqrt(x)","output":"(- (sqrt (+ x 1.0)) (sqrt x))","pre":"(and (<= -1000.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":0.03119116562662261,"start-est":0.04296875,"status":"ex-start","target":false,"target-prog":"#f","time":4133.63427734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13312 34.61693257022239) (576 0.2992005640636719) ((576 8.201831494761219 (/ (* -0.5 (/ x (/ d x))) d)) (576 0.46562537656727804 (* -0.5 (* (/ x d) (/ x d))))))","end":0.2992005640636719,"end-est":0.27734375,"identifier":"#f","input":"(/ (- (pow x 2.0)) (* 2.0 (pow d 2.0)))","link":"a5b1032dc0a63179943fadb9c3edee886d781fc7.1.6","name":"-x^2/(2d^2)","output":"(/ (/ (* x -0.5) d) (/ d x))","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= 0.0 d) (<= d 100.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (pow x 2.0)) (* 2.0 (pow d 2.0)))","start":34.61693257022239,"start-est":35.24947820658221,"status":"imp-start","target":false,"target-prog":"#f","time":5735.375732421875,"vars":["x","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((32960 14.033160061359906) (26240 0.24127366741275577) ((20224 0.35471386369101304 (* (/ 1.0 (* d (sqrt (* 2.0 PI)))) (exp (/ (* x -0.5) (/ d (/ x d)))))) (19584 32.589454943592635 (/ (* (sqrt 0.5) (sqrt (/ 1.0 PI))) d)) (19584 32.580471621542 (* (/ (sqrt 0.5) d) (sqrt (/ 1.0 PI)))) (13184 40.255081569428725 (sqrt (/ 0.5 (* d (* d PI)))))))","end":0.24127366741275577,"end-est":0.18978500976844204,"identifier":"#f","input":"(* (/ 1.0 (* (sqrt (* 2.0 PI)) d)) (exp (/ (- (pow x 2.0)) (* 2.0 (pow d 2.0)))))","link":"b0ecd8e61b17455ce13c5f89c332b7331333f918.1.6","name":"1 / ((sqrt(2 * PI)) * d) * exp(-x^2 / (2 * d^2))","output":"(/ (sqrt (* 0.5 (/ (exp (- (pow (/ x d) 2.0))) PI))) d)","pre":"(and (and (<= 0.0 d) (<= d 100.0)) (and (<= -1000.0 x) (<= x 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 (* (sqrt (* 2.0 PI)) d)) (exp (/ (- (pow x 2.0)) (* 2.0 (pow d 2.0)))))","start":14.033160061359906,"start-est":16.46845629884221,"status":"imp-start","target":false,"target-prog":"#f","time":7931.389892578125,"vars":["d","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 1.0) (6592 1.0) ())","end":1.0,"end-est":1.0,"identifier":"#f","input":"(/ 1.0 (sqrt 2.0))","link":"f29f6acf9929f331f8b5c9bbcd07d306fdc2c651.1.6","name":"1 / (sqrt(2))","output":"(/ 1.0 (sqrt 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt 2.0))","start":1.0,"start-est":1.0,"status":"apx-start","target":false,"target-prog":"#f","time":1213.39306640625,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.0044124010022984095) (576 0.0044124010022984095) ((584 0.32977660664270575 (if (<= G -2.707854500186899e-7) (+ (* 255.0 G) -32768.0) (if (<= G 5.5095736118456466e-24) (+ (* R 65280.0) -32768.0) (+ (* 255.0 G) -32768.0)))) (320 3.5783809852399138 (+ (* 255.0 G) -32768.0))))","end":0.0044124010022984095,"end-est":0,"identifier":"#f","input":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","link":"a78335b737a47948cfc5a3b4a001f25c9df0e900.1.6","name":"255.0 * (256.0 * R + G ) - 32768.0","output":"(+ (* 255.0 (+ (* 256.0 R) G)) -32768.0)","pre":"(and (and (<= -1000000000000.0 R) (<= R 1000000000000.0)) (and (<= -1000000000000.0 G) (<= G 1000000000000.0)))","prec":"binary64","preprocess":"()","spec":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","start":0.0044124010022984095,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2288.966064453125,"vars":["R","G"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.003647876875110345) (13120 0.001) ((584 0.14839335396295053 (if (<= G -6.790044026003818e-14) (+ -32768.0 (* 255.0 G)) (if (<= G 3.0602121237395685e-30) (+ -32768.0 (* R 65280.0)) (+ -32768.0 (* 255.0 G))))) (576 0.003647876875110345 (+ -32768.0 (* 255.0 (+ G (* R 256.0))))) (320 1.7150335894392117 (+ -32768.0 (* R 65280.0))) (64 3.987746994961284 -32768.0)))","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","link":"778eae34f5e70db66c02f1228ead617e2bf9d7f9.1.6","name":"255.0 * (256.0 * R + G ) - 32768.0","output":"(fma 255.0 G (fma R 65280.0 -32768.0))","pre":"(and (and (<= -100000.0 R) (<= R 100000.0)) (and (<= -100000.0 G) (<= G 100000.0)))","prec":"binary64","preprocess":"()","spec":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","start":0.003647876875110345,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2873.024169921875,"vars":["R","G"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.003647876875110345) (13120 0.001) ((584 0.14839335396295053 (if (<= G -6.790044026003818e-14) (+ -32768.0 (* 255.0 G)) (if (<= G 3.0602121237395685e-30) (+ -32768.0 (* R 65280.0)) (+ -32768.0 (* 255.0 G))))) (576 0.003647876875110345 (+ -32768.0 (* 255.0 (+ G (* R 256.0))))) (320 2.333770916739769 (+ -32768.0 (* 255.0 G))) (64 3.987746994961284 -32768.0)))","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","link":"2096a7bb14268f67c6d8206940f57cb11b4ab00c.1.6","name":"255 * (256 * R + G) - 32768","output":"(fma 255.0 G (fma R 65280.0 -32768.0))","pre":"(and (and (<= -100000.0 R) (<= R 100000.0)) (and (<= -100000.0 G) (<= G 100000.0)))","prec":"binary64","preprocess":"()","spec":"(- (* 255.0 (+ (* 256.0 R) G)) 32768.0)","start":0.003647876875110345,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2649.25244140625,"vars":["R","G"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.414) (320 0.28232312031259016) ((192 0.414 (/ 14000.0 x))))","end":0.28232312031259016,"end-est":0.2578125,"identifier":"#f","input":"(/ (* (* 100.0 1.4) 100.0) x)","link":"37089ab1dfef758aab974940e61c5df5b8ce19b4.1.6","name":"100.0 * 1.4 * 100.0 / x","output":"(/ 1.0 (* x 7.142857142857143e-5))","pre":"(and (<= 0.0 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ (* (* 100.0 1.4) 100.0) x)","start":0.414,"start-est":0.3671875,"status":"ex-start","target":false,"target-prog":"#f","time":2809.594482421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01475) (320 0.002238361324451065) ())","end":0.002238361324451065,"end-est":0,"identifier":"#f","input":"(/ (- 1.0 x) (* 2.0 x))","link":"1feddc46e6382536d72de3098d805f17bf9dddb1.1.6","name":"(1 - x)/(2 * x)","output":"(+ (/ 0.5 x) -0.5)","pre":"(and (<= -10.0 x) (<= x 10.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 x) (* 2.0 x))","start":0.01475,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":1684.598876953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.014375) (320 0.0029883613244510647) ((192 2.02687030299934 (/ 0.5 x)) (64 61.73968555896598 -0.5)))","end":0.0029883613244510647,"end-est":0.0078125,"identifier":"#f","input":"(/ (- 1.0 x) (* 2.0 x))","link":"6c73e143f3d490de26762301fd35c4f09b5339b5.1.6","name":"(1 - x)/(2 * x)","output":"(+ (/ 0.5 x) -0.5)","pre":"(and (<= -16000.0 x) (<= x 16000.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 x) (* 2.0 x))","start":0.014375,"start-est":0.0546875,"status":"ex-start","target":false,"target-prog":"#f","time":2140.876953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.013) (320 0.0038114816370412095) ((192 1.92649952536715 (/ 0.5 x)) (64 61.779582185744054 -0.5)))","end":0.0038114816370412095,"end-est":0.00390625,"identifier":"#f","input":"(/ (- 1.0 x) (* 2.0 x))","link":"8c33fc1f6271ac5c0011174c11915ef15b77553a.1.6","name":"(1 - x)/(2 * x)","output":"(+ (/ 0.5 x) -0.5)","pre":"(and (<= -4096.0 x) (<= x 4096.0))","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 x) (* 2.0 x))","start":0.013,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2076.984130859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 30.41200138299236) (12992 0.003875) ((6464 26.266068516226127 (sqrt 2.0))))","end":0.003875,"end-est":0.00390625,"identifier":"#f","input":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","link":"ff381325b31293315ab7520e813963af21499b5c.1.6","name":"sqrt((exp(2x) - 1)/(exp(x) - 1))","output":"(sqrt (+ 1.0 (exp x)))","pre":"(and (<= -1.79e+308 x) (<= x 0.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","start":30.41200138299236,"start-est":29.705970494909515,"status":"imp-start","target":false,"target-prog":"#f","time":5038.3310546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.1175) (6592 0.1175) ((64 31.0858169052591 1.0)))","end":0.1175,"end-est":0.1328125,"identifier":"#f","input":"(/ (sin x) x)","link":"ec2d6ef65fe0353cf571e19b99236adde996a3bd.1.6","name":"sin(x)/x","output":"(/ (sin x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (sin x) x)","start":0.1175,"start-est":0.1328125,"status":"ex-start","target":false,"target-prog":"#f","time":5034.634765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13312 0.028) (13312 0.03875) ((13056 0.711685773209646 (/ (exp -1.0) (pow x x))) (6464 1.555694867128415 (exp -1.0)) (704 62.31058424998681 (+ 1.0 (+ (/ (/ 0.4583333333333333 x) x) (/ -0.5 x))))))","end":0.03875,"end-est":0,"identifier":"#f","input":"(exp (+ (- 1.0) (* x (log1p (/ 1.0 x)))))","link":"b0abb006b4d6e60e218f3cf956fdf69c3d45173e.1.6","name":"exp(-1.0+x*log1p(1/x))","output":"(* (exp -1.0) (pow (+ 1.0 (/ 1.0 x)) x))","pre":"(and (<= 0.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(exp (+ (- 1.0) (* x (log1p (/ 1.0 x)))))","start":0.028,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":4291.552490234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19648 0.3093186093777044) (19648 0.3093186093777044) ((13056 5.810335265347906 (sqrt (/ (pow x -0.5) 2.0)))))","end":0.3093186093777044,"end-est":0.33431625976844204,"identifier":"#f","input":"(/ 1.0 (+ (sqrt (* 2.0 (sqrt x))) (sqrt x)))","link":"dc4ca223c42641b4a5acf38334ea588316d1c34f.1.6","name":"1/(sqrt(2*sqrt(x))+sqrt(x))","output":"(/ 1.0 (+ (sqrt x) (sqrt (* 2.0 (sqrt x)))))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ (sqrt (* 2.0 (sqrt x))) (sqrt x)))","start":0.3093186093777044,"start-est":0.33431625976844204,"status":"ex-start","target":false,"target-prog":"#f","time":5328.33251953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.2615) (6528 0.000375) ())","end":0.000375,"end-est":0,"identifier":"#f","input":"(/ 1.0 (sqrt x))","link":"b549c6a91dffebb29371fa26c6a745d8a742efc2.1.6","name":"1/sqrt(x)","output":"(pow x -0.5)","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt x))","start":0.2615,"start-est":0.2421875,"status":"ex-start","target":false,"target-prog":"#f","time":1688.902099609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"1bf3fba689ea21a38f5ef5fcab963a0fa8a5a05c.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"gt-target","target":52.64337556833877,"target-prog":"(- (sqrt (+ x 3.0)) (sqrt x))","time":4146.083740234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((27424 6.383478330110745) (30184 1.4156529974854557) ((23912 1.185673646967729 (if (<= b -999999984306749400.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 9999999980506448000.0) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* d (fma b -3.0 (* sigma -8.0))) (+ (* sigma (* (* b sigma) -10.0)) (* sigma (* -3.0 (fma b b 1.0)))))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (23656 1.2463378536782117 (if (<= b -999999984306749400.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 9999999980506448000.0) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* d (fma b -3.0 (* sigma -8.0))) (* -3.0 (fma (* b b) sigma sigma)))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (23656 1.2058281418291315 (if (<= b -9999999980506448000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 9999999980506448000.0) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (- (* b (* d -3.0)) (* sigma (fma d 8.0 (fma b (* b 3.0) 3.0))))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (20584 3.0943361491558354 (if (<= b -1000000000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 600000000.0) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (- (* (* b d) (+ (* d -3.0) (* sigma (* sigma -10.0)))) (* (fma d 8.0 3.0) (* sigma d))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (17384 2.558006311185493 (if (<= b -9999999980506448000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b -0.0020000000949949026) (+ (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))) (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0))))) (if (<= b 9999999980506448000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (* d (- (* b (* d -3.0)) (* sigma (fma d 8.0 (fma b (* b 3.0) 3.0))))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))))))) (17064 3.1265132762435863 (if (<= b -20000000545128450.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 9999999980506448000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (* d (- (* b (* d -3.0)) (* sigma (fma d 8.0 (fma b (* b 3.0) 3.0))))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (13992 3.6367498328190457 (if (<= b -0.10000000149011612) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 0.05000000074505806) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (- (* (* b d) (+ (* d -3.0) (* sigma (* sigma -10.0)))) (* (fma d 8.0 3.0) (* sigma d))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (13800 5.257167802867304 (if (<= b -0.10000000149011612) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 500.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (fma sigma (* d (+ -3.0 (* d -8.0))) (* b (* d (* d -3.0)))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (13608 6.929460198033302 (if (<= b -1000.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 9.99999993922529e-9) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (* d (* d (fma b -3.0 (* sigma -8.0)))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (10792 7.289228440578476 (if (<= b -4.999999980020986e-12) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 1.000000031374395e-22) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (* d (* sigma (+ -3.0 (* d -8.0)))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))) (10408 10.935910762471023 (if (<= b -9.999999974752427e-7) (+ (* b (* b (pow sigma 3.0))) (fma 4.0 (pow sigma 5.0) (* (* b d) (* d -3.0)))) (if (<= b 1.000000031374395e-22) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (* d (* sigma (+ -3.0 (* d -8.0)))))) (+ (* b (* b (pow sigma 3.0))) (fma 4.0 (pow sigma 5.0) (* (* b d) (* d -3.0))))))) (10144 15.543966957681132 (+ (* b (* b (pow sigma 3.0))) (fma 4.0 (pow sigma 5.0) (* (* b d) (* d -3.0))))) (6952 15.771318592970026 (if (<= sigma -9.999999717180685e-10) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (* 4.0 (pow sigma 5.0))) (if (<= sigma 4.000000053405728e-10) (* d (+ (* (pow sigma 3.0) -4.0) (* d (* b -3.0)))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (* 4.0 (pow sigma 5.0)))))) (3584 19.306121217688503 (* d (+ (* (pow sigma 3.0) -4.0) (* d (* b -3.0))))) (3328 23.710126393237303 (* 4.0 (pow sigma 5.0)))))","end":1.4156529974854557,"end-est":1.387543154769518,"identifier":"#f","input":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","link":"6b13ca641c6c6ab7ef404bd8184dc428b90e562e.1.6","name":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","output":"(if (<= b -999999984306749400.0) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0))))) (if (<= b 10000000272564224.0) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (fma (* d (fma sigma (* b -10.0) (* -3.0 (fma b b 1.0)))) sigma (* d (* d (fma b -3.0 (* sigma -8.0))))))) (+ (* (pow sigma 3.0) (+ 1.0 (* -4.0 d))) (fma 4.0 (pow sigma 5.0) (+ (* (* d (* b sigma)) (+ (* b -3.0) (* sigma -10.0))) (* (* b d) (* d -3.0)))))))","pre":"TRUE","prec":"binary32","preprocess":"()","spec":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","start":6.383478330110745,"start-est":7.051258091211016,"status":"imp-start","target":false,"target-prog":"#f","time":33231.98828125,"vars":["sigma","b","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((54848 0.14306168514962328) (60480 0.1407363245985335) ((47552 0.14028820428594332 (+ (fma 4.0 (pow sigma 5.0) (fma sigma (* d (+ (- (* (fma b b 1.0) -3.0) (* d 8.0)) (* sigma (* b -10.0)))) (* b (* d (* d -3.0))))) (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))))) (47040 0.14133496250072117 (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* -3.0 (* sigma (fma b b 1.0))) (* d (fma -3.0 b (* sigma -8.0)))))))) (40896 0.2507235883738795 (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (+ (* d (* b (* d -3.0))) (* (* sigma d) (- (* sigma (* b -10.0)) (fma d 8.0 3.0))))))) (40776 4.975596346253529 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 5.0 (* b (pow sigma 4.0))) (+ (* 4.0 (pow sigma 5.0)) (+ (* (pow sigma 3.0) (pow b 2.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (* d (fma -3.0 b (* sigma -8.0)))))) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (/ (* (* sigma d) (+ (* (* d d) -64.0) 9.0)) (fma d 8.0 -3.0))))))) (40392 4.957788962928054 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 5.0 (* b (pow sigma 4.0))) (+ (* 4.0 (pow sigma 5.0)) (+ (* (pow sigma 3.0) (pow b 2.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (* d (fma -3.0 b (* sigma -8.0)))))) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (34436 4.977422205934418 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 5.0 (* b (pow sigma 4.0))) (+ (* 4.0 (pow sigma 5.0)) (+ (* (pow sigma 3.0) (pow b 2.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* (* d -3.0) (* d b)))) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (33992 4.978644611420353 (if (<= sigma -1.2789615439645779e-171) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0)))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* (* d -3.0) (* d b)))) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (33864 5.262175232439092 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* (* d -3.0) (* d b)))) (+ (* (pow sigma 3.0) (+ 1.0 (* d -4.0))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (33480 5.257784343012641 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 1.3335731004782692e-219) (+ (* (pow sigma 3.0) (fma b (fma sigma 5.0 b) 1.0)) (fma 4.0 (pow sigma 5.0) (* d (* b (* d -3.0))))) (+ (* (pow sigma 3.0) (+ 1.0 (* d -4.0))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (20808 5.257784343012641 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 1.3335731004782692e-219) (+ (fma 4.0 (pow sigma 5.0) (* d (* b (* d -3.0)))) (* -4.0 (* (pow sigma 3.0) d))) (+ (* (pow sigma 3.0) (+ 1.0 (* d -4.0))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (20552 5.258329650811028 (if (<= sigma -1.2789615439645779e-171) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 1.3335731004782692e-219) (+ (fma 4.0 (pow sigma 5.0) (* d (* b (* d -3.0)))) (* -4.0 (* (pow sigma 3.0) d))) (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))))) (14272 8.279631186739392 (+ (* d (* sigma (+ -3.0 (* d -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))) (14144 9.276376441600137 (+ (* sigma (* d (+ -3.0 (* d -8.0)))) (* (pow sigma 3.0) (+ 1.0 (+ (pow b 2.0) (* d -4.0)))))) (576 22.43261277883275 (* d (* sigma (+ -3.0 (* d -8.0))))) (576 22.43352376996181 (* sigma (* d (+ -3.0 (* d -8.0))))) (448 37.23040793694623 (* sigma (* d (* d -8.0))))))","end":0.1407363245985335,"end-est":0.13671875,"identifier":"#f","input":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","link":"4b0b643cf4a35ed77e43f08ecca07f00fee12c51.1.6","name":"4 * sigma ^ 5 + 5 * b * sigma ^ 4 + (1 + b^2 - 4 * d)* sigma ^ 3 - 10 * b * d * sigma ^2 - (8 * d^2 + 3 * b^2 * d + 3 * d) * sigma - 3 * b * d ^ 2","output":"(+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (log (+ 1.0 (expm1 (* sigma (* b 5.0))))))) (fma 4.0 (pow sigma 5.0) (fma sigma (* d (+ (- (* (fma b b 1.0) -3.0) (* d 8.0)) (* sigma (* b -10.0)))) (* b (* d (* d -3.0))))))","pre":"(and (and (and (<= -1000.0 sigma) (<= sigma 1000.0)) (and (<= -1000.0 b) (<= b 1000.0))) (and (<= -1000.0 d) (<= d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","start":0.14306168514962328,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":19143.90576171875,"vars":["sigma","b","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 34.48182064850371) (7624 10.234125680179684) ((7368 13.26587652548141 (if (<= b -4.6e-98) (/ (- c) b) (if (<= b 1.1e-106) (* -0.5 (/ (+ b (sqrt (* -4.0 (* c a)))) a)) (* -0.5 (+ (* 2.0 (/ b a)) (* -2.0 (/ c b))))))) (964 22.695752667630654 (if (<= b -4.7e-265) (/ (- c) b) (* -0.5 (+ (* 2.0 (/ b a)) (* -2.0 (/ c b)))))) (580 22.743729270238934 (if (<= b -1.35e-268) (/ (- c) b) (* -0.5 (* b (/ 2.0 a))))) (580 22.677594333569665 (if (<= b -1.35e-268) (/ (- c) b) (* -0.5 (/ (* b 2.0) a)))) (452 36.67933646384514 (if (<= b -1.35e-268) (/ (- c) b) (* -0.5 (/ b a)))) (256 39.88496034908745 (/ (- c) b))))","end":10.234125680179684,"end-est":10.64512355096102,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"8b05e4465b21b571c91cbf0b766c231413dba325.1.6","name":"(-b - sqrt(b^2 - 4*a*c))/(2*a)","output":"(if (<= b -4.6e-98) (/ (- c) b) (if (<= b 4.5e+106) (* -0.5 (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) a)) (* -0.5 (/ (fma b 2.0 (* a (* c (/ -2.0 b)))) a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.48182064850371,"start-est":34.31628170865092,"status":"imp-start","target":false,"target-prog":"#f","time":14193.3125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 33.461082848463384) (7624 10.203332682713135) ((7496 13.273268813639367 (if (<= b -6.5e-87) (* -0.5 (* 2.0 (/ c b))) (if (<= b 7.5e-36) (* -0.5 (/ (+ b (sqrt (* c (* a -4.0)))) a)) (* -0.5 (/ (+ b (fma -2.0 (* (/ c b) a) b)) a))))) (7368 13.295492810926332 (if (<= b -6.5e-87) (* -0.5 (* 2.0 (/ c b))) (if (<= b 7.5e-36) (* -0.5 (/ (+ b (sqrt (* c (* a -4.0)))) a)) (/ (- b) a)))) (580 23.09938280294484 (if (<= b -7.6e-215) (* -0.5 (* c (/ 2.0 b))) (/ (- b) a))) (580 23.026208329029522 (if (<= b -7.6e-215) (* -0.5 (* 2.0 (/ c b))) (/ (- b) a))) (452 39.55411685926769 (if (<= b -3.3e-114) (* -0.5 (/ 0.0 a)) (/ (- b) a))) (256 45.043192683505296 (/ (- b) a))))","end":10.203332682713135,"end-est":9.14853954065914,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"be7fe45182aca598409c2b4742d97849dceb05dd.1.6","name":"(-b - sqrt(b^2 - 4*a*c))/(2*a)","output":"(if (<= b -6.5e-87) (* -0.5 (* 2.0 (/ c b))) (if (<= b 3.1e+63) (* -0.5 (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) a)) (* -0.5 (/ (+ b (fma -2.0 (* (/ c b) a) b)) a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":33.461082848463384,"start-est":34.13010864365324,"status":"imp-start","target":false,"target-prog":"#f","time":14062.281494140625,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 34.46212258103005) (7624 10.09843056105358) ((7624 10.175800435400385 (if (<= b -3.5e+120) (/ (- b) a) (if (<= b 2.5e-112) (* (- b (sqrt (+ (* b b) (* a (* c -4.0))))) (/ -0.5 a)) (/ 1.0 (- (/ a b) (/ b c)))))) (7368 13.388810115114316 (if (<= b -1.3e-77) (- (/ c b) (/ b a)) (if (<= b 2.5e-112) (/ (* -0.5 (- b (sqrt (* c (* a -4.0))))) a) (/ 1.0 (- (/ a b) (/ b c)))))) (708 22.527238913413214 (if (<= b -3.1e-307) (/ (- b) a) (/ 1.0 (- (/ a b) (/ b c))))) (388 22.561029275042294 (if (<= b 1.4e-201) (/ (- b) a) (/ (- c) b))) (256 45.47151607182926 (/ (- b) a))))","end":10.09843056105358,"end-est":10.59570987436407,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"959a052076b46e2d6074017830346c9d1d85ae13.1.6","name":"(-b + sqrt(b^2 - 4*a*c))/(2*a)","output":"(if (<= b -2.55e+151) (/ (- b) a) (if (<= b 2.5e-112) (/ (- (sqrt (+ (* b b) (* c (* a -4.0)))) b) (* a 2.0)) (/ 1.0 (- (/ a b) (/ b c)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.46212258103005,"start-est":33.09473365008185,"status":"imp-start","target":false,"target-prog":"#f","time":13672.81103515625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 33.72276111603961) (7624 9.999503842144986) ((7624 10.050548817477026 (if (<= b -4e+140) (/ (- b) a) (if (<= b 3.2e-39) (* (- b (sqrt (+ (* b b) (* a (* c -4.0))))) (/ -0.5 a)) (/ (- c) b)))) (7368 13.184455094033352 (if (<= b -1.6e-51) (- (/ c b) (/ b a)) (if (<= b 3.2e-39) (* (/ -0.5 a) (- b (sqrt (* c (* a -4.0))))) (/ (- c) b)))) (7368 13.161473890852147 (if (<= b -1.6e-51) (- (/ c b) (/ b a)) (if (<= b 3.2e-39) (/ (- (sqrt (* c (* a -4.0))) b) (* a 2.0)) (/ (- c) b)))) (388 23.12878230264431 (if (<= b 1.2e-262) (/ (- b) a) (/ (- c) b))) (256 40.117544069319834 (/ (- c) b))))","end":9.999503842144986,"end-est":9.349794899173377,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","link":"e519eccc38bf8c1817b61cdce7cff476e3a9ee8f.1.6","name":"(-b + sqrt(b^2 - 4*a*c))/(2*a)","output":"(if (<= b -4e+140) (/ (- b) a) (if (<= b 3.2e-39) (/ (- (sqrt (+ (* b b) (* c (* a -4.0)))) b) (* a 2.0)) (/ (- c) b)))","pre":"(and (and (and (<= -1.79e+308 b) (<= b 1.79e+308)) (and (<= -1.79e+308 a) (<= a 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (pow b 2.0) (* (* 4.0 a) c)))) (* 2.0 a))","start":33.72276111603961,"start-est":36.09791780121829,"status":"imp-start","target":false,"target-prog":"#f","time":16702.421142578125,"vars":["b","a","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"f312a127acb9b253572c657a6c14126fe7c67bed.1.6","name":"sqrt(x + 1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"imp-start","target":false,"target-prog":"#f","time":4323.209228515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 38.64080324193219) (448 0.3603565844696243) ((448 18.08223601507353 (/ (/ a d) (* b c))) (448 0.35524845068222616 (/ (/ (/ a b) d) c))))","end":0.3603565844696243,"end-est":0.33203125,"identifier":"#f","input":"(/ a (* (* b c) d))","link":"6463ed62d0607110858ae032da7b7b030f5e79cb.1.6","name":"a / (b * c * d)","output":"(/ (/ (/ a d) b) c)","pre":"(and (and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0))) (and (<= -1000000000.0 d) (<= d 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ a (* (* b c) d))","start":38.64080324193219,"start-est":36.04477744386853,"status":"imp-start","target":false,"target-prog":"#f","time":7740.63330078125,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 12.066959126158661) (2000 2.76934032392276) ((2000 2.761961160829196 (if (<= (* (* b c) d) -4e+277) (/ (/ a b) (* c d)) (if (<= (* (* b c) d) -2e-302) (/ a (* (* b c) d)) (if (<= (* (* b c) d) 2e-264) (/ (/ (/ a c) d) b) (if (<= (* (* b c) d) 1e+241) (/ a (* (* b c) d)) (/ (/ (/ a b) c) d)))))) (844 8.604482408725273 (if (<= d 1e-96) (/ a (* c (* b d))) (if (<= d 1.179853658697771e+206) (/ (/ a b) (* c d)) (if (<= d 1.0805114960615963e+290) (/ a (* c (* b d))) (/ (/ a b) (* c d)))))) (844 6.762007302894762 (if (<= d 1e-35) (/ (/ a c) (* b d)) (if (<= d 1.179853658697771e+206) (/ (/ a b) (* c d)) (if (<= d 1.0805114960615963e+290) (/ a (* c (* b d))) (/ (/ a b) (* c d)))))) (712 8.870790392025919 (if (<= a -8.633658366742324e-128) (/ a (* b (* c d))) (if (<= a 1.6837627770991541e+38) (/ (/ (/ a c) d) b) (/ (/ a b) (* c d))))) (580 11.841951254173338 (if (<= a 4.3330649649582706e-33) (/ a (* b (* c d))) (/ (/ a b) (* c d)))) (448 12.228910543579087 (/ a (* b (* c d))))))","end":2.76934032392276,"end-est":1.4284099463030915,"identifier":"#f","input":"(/ a (* (* b c) d))","link":"eb6b1401a15e361b3447d208b2a7ec5196fa9ad0.1.6","name":"a / (b * c * d)","output":"(if (<= (* (* b c) d) -4e+277) (/ (/ a b) (* c d)) (if (<= (* (* b c) d) -2e-293) (/ a (* (* b c) d)) (if (<= (* (* b c) d) 2e-264) (/ 1.0 (* b (/ d (/ a c)))) (if (<= (* (* b c) d) 1e+241) (/ a (* (* b c) d)) (/ (/ (/ a b) c) d)))))","pre":"(and (and (and (and (<= -1.79e+308 a) (<= a 1.79e+308)) (and (<= -1.79e+308 b) (<= b 1.79e+308))) (and (<= -1.79e+308 c) (<= c 1.79e+308))) (and (<= -1.79e+308 d) (<= d 1.79e+308)))","prec":"binary64","preprocess":"()","spec":"(/ a (* (* b c) d))","start":12.066959126158661,"start-est":8.166757823577472,"status":"imp-start","target":false,"target-prog":"#f","time":7580.536865234375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.38424794531318857) (448 0.3603565844696243) ((448 18.08223601507353 (/ (/ a d) (* b c)))))","end":0.3603565844696243,"end-est":0.33203125,"identifier":"#f","input":"(/ (/ (/ a b) c) d)","link":"e2bba48515e474bee6c48f715ceebf3df783fac8.1.6","name":"a / (b * c * d)","output":"(/ (/ (/ a d) b) c)","pre":"(and (and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0))) (and (<= -1000000000.0 d) (<= d 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (/ (/ a b) c) d)","start":0.38424794531318857,"start-est":0.5358200195368841,"status":"ex-start","target":false,"target-prog":"#f","time":8252.6015625,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.38424794531318857) (448 0.35524845068222616) ())","end":0.35524845068222616,"end-est":0.33984375,"identifier":"#f","input":"(/ (/ (/ a b) c) d)","link":"a4e5836a8894e9789eee58cbef9e2855a30b03b1.1.6","name":"a / b / c / d","output":"(/ (/ (/ a b) d) c)","pre":"(and (and (and (and (<= -1000000000.0 a) (<= a 1000000000.0)) (and (<= -1000000000.0 b) (<= b 1000000000.0))) (and (<= -1000000000.0 c) (<= c 1000000000.0))) (and (<= -1000000000.0 d) (<= d 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (/ (/ a b) c) d)","start":0.38424794531318857,"start-est":0.5358200195368841,"status":"ex-start","target":false,"target-prog":"#f","time":8271.95654296875,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.3005) (320 0.02425) ((784 18.285889907967096 (if (<= min -2.0031003901072066e-149) (/ min d) (if (<= min 8.222756268667226e-195) (/ (- pos) d) (if (<= min 3.654875722422513e-146) (/ min d) (if (<= min 1.0928004428307476e-103) (/ (- pos) d) (/ min d)))))) (192 31.188534654349063 (/ min d))))","end":0.02425,"end-est":0.0234375,"identifier":"#f","input":"(* (- min pos) (/ 1.0 d))","link":"a78bfd079a6f74bcf14abfc6f06228216e82cfbf.1.6","name":"(min - pos) * (1.0 / d)","output":"(/ (- min pos) d)","pre":"(and (and (and (<= -1.0 min) (<= min 1.0)) (and (<= -1.0 pos) (<= pos 1.0))) (and (<= -1.0 d) (<= d 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (- min pos) (/ 1.0 d))","start":0.3005,"start-est":0.32421875,"status":"ex-start","target":false,"target-prog":"#f","time":4043.0791015625,"vars":["min","pos","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.013875) (320 0.013875) ((520 10.261885260560717 (if (<= min -1.209272323305583e-151) (* min inv_d) (if (<= min 6.26011982858203e-104) (* pos (- inv_d)) (* min inv_d)))) (192 21.320501315041408 (* min inv_d))))","end":0.013875,"end-est":0.01171875,"identifier":"#f","input":"(* (- min pos) inv_d)","link":"c3846b41f639089f190a95b126d547161107f300.1.6","name":"(min - pos) * inv_d","output":"(* (- min pos) inv_d)","pre":"(and (and (and (<= -1000.0 min) (<= min 1000.0)) (and (<= -1000.0 pos) (<= pos 1000.0))) (and (<= -1000.0 inv_d) (<= inv_d 1000.0)))","prec":"binary64","preprocess":"()","spec":"(* (- min pos) inv_d)","start":0.013875,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2772.095947265625,"vars":["min","pos","inv_d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009948120312590146) (6784 0.004625) ((784 15.935510730666177 (if (<= sx -2.035974753331107e-103) (* sx ly) (if (<= sx -9.124641082144748e-135) (* sy (- lx)) (if (<= sx -3.484461172028533e-139) (* sx ly) (if (<= sx 3.5428728009352776e-223) (* sy (- lx)) (* sx ly)))))) (448 0.009948120312590146 (- (* sx ly) (* sy lx))) (192 22.839806655526456 (* sx ly))))","end":0.004625,"end-est":0.01171875,"identifier":"#f","input":"(- (* sx ly) (* sy lx))","link":"f3a200b4dbc6485ef847d99a94ed3d26c6f3c7c8.1.6","name":"sx * ly - sy * lx","output":"(fma sx ly (* sy (- lx)))","pre":"(and (and (and (and (<= -1.0 sx) (<= sx 1.0)) (and (<= -1.0 ly) (<= ly 1.0))) (and (<= -1.0 sy) (<= sy 1.0))) (and (<= -1.0 lx) (<= lx 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (* sx ly) (* sy lx))","start":0.009948120312590146,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":3845.43115234375,"vars":["sx","ly","sy","lx"]},{"bits":128,"conversions":[],"cost-accuracy":"((27424 0.22914783386347196) (20480 0.2311455368089451) ((20416 0.2406834222499987 (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* -3.0 (* sigma (+ 1.0 (pow b 2.0)))) (* d (+ (* b -3.0) (* sigma -8.0)))))))) (17056 0.4635281991470055 (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* d (* b -3.0)) (* sigma (+ -3.0 (* d -8.0)))))))) (17000 3.4672755767400685 (if (<= sigma -2.0000000063421537e-29) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0)))))) (if (<= sigma 2.0000000544904023e-27) (* (* d -3.0) (* d b)) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* sigma (* d (+ -3.0 (* d -8.0))))))))) (16872 4.738578714398378 (if (<= sigma -2.0000000063421537e-29) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* -3.0 (* sigma d)))) (if (<= sigma 2.0000000544904023e-27) (* (* d -3.0) (* d b)) (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* -3.0 (* sigma d))))))) (13672 9.546235489134448 (if (<= sigma -4.99999991225835e-15) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ (+ 1.0 (pow b 2.0)) (* 5.0 (* sigma b))))) (if (<= sigma 9.999999960041972e-13) (* d (* d (fma -3.0 b (* sigma -8.0)))) (+ (* 5.0 (* b (pow sigma 4.0))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (+ (pow b 2.0) (* d -4.0))))))))) (13600 9.664613314455762 (+ (* 4.0 (pow sigma 5.0)) (+ (* b (+ (* -3.0 (pow d 2.0)) (* 5.0 (pow sigma 4.0)))) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))) (10312 9.562531903455982 (if (<= sigma -4.99999991225835e-15) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ (+ 1.0 (pow b 2.0)) (* 5.0 (* sigma b))))) (if (<= sigma 9.999999960041972e-13) (* d (* d (fma -3.0 b (* sigma -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ (+ 1.0 (pow b 2.0)) (* 5.0 (* sigma b)))))))) (6952 9.914605071599713 (if (<= sigma -4.99999991225835e-15) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))) (if (<= sigma 9.999999960041972e-13) (* d (* d (fma -3.0 b (* sigma -8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))))) (3584 15.454976969997706 (* d (+ (* -3.0 (* d b)) (* (pow sigma 3.0) -4.0)))) (224 15.550092029537534 (* b (* d (* d -3.0)))) (224 15.551508386505185 (* (* d -3.0) (* d b)))))","end":0.2311455368089451,"end-est":0.1796875,"identifier":"#f","input":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","link":"cc021eb634efac1a87585762d482d28744b83730.1.6","name":"4 * sigma ^ 5         + 5 * b * sigma ^ 4         + (1 + b^2 - 4 * d)* sigma ^ 3         - 10 * b * d * sigma ^2         - (8 * d^2 + 3 * b^2 * d + 3 * d) * sigma         - 3 * b * d ^ 2","output":"(+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (+ (* d (* b -3.0)) (+ (* -3.0 (* sigma (pow b 2.0))) (* sigma (+ -3.0 (* d -8.0))))))))","pre":"(and (and (and (<= -10.0 sigma) (<= sigma 10.0)) (and (<= -10.0 b) (<= b 10.0))) (and (<= -10.0 d) (<= d 10.0)))","prec":"binary32","preprocess":"()","spec":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","start":0.22914783386347196,"start-est":0.2265625,"status":"ex-start","target":false,"target-prog":"#f","time":19453.342041015625,"vars":["sigma","b","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((54848 0.13115584257481164) (47040 0.13201184218813103) ((40896 0.22151118099330408 (+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (+ (* -3.0 (* d (* d b))) (* (* sigma d) (- (* b (* sigma -10.0)) (fma d 8.0 3.0))))))) (27712 1.0587003465161697 (+ (* sigma (* d (+ (* d -8.0) (* 3.0 (- -1.0 (pow b 2.0)))))) (+ (* -3.0 (* b (pow d 2.0))) (* (pow sigma 3.0) (+ 1.0 (+ (pow b 2.0) (* d -4.0))))))) (27144 0.7741376650082988 (if (<= sigma -6.791158555127719e-107) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 2.122455678294194e-105) (* d (+ (fma -3.0 (* sigma (fma b b 1.0)) (* (pow sigma 3.0) -4.0)) (* d (fma -3.0 b (* sigma -8.0))))) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))))) (21128 0.7748525454690698 (if (<= sigma -6.791158555127719e-107) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 2.122455678294194e-105) (+ (* (pow d 2.0) (+ (* b -3.0) (* sigma -8.0))) (* d (+ (* (pow sigma 3.0) -4.0) (* -3.0 (* sigma (+ 1.0 (pow b 2.0))))))) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))))) (14536 5.049478362516572 (if (<= sigma -1.6580196507783147e-172) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))) (if (<= sigma 3.475453701680798e-220) (* d (+ (* d (* b -3.0)) (* (pow sigma 3.0) -4.0))) (+ (* d (* sigma (- -3.0 (* d 8.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))))))) (14408 5.761743908700549 (if (<= sigma -1.6580196507783147e-172) (+ (* (pow sigma 3.0) (+ 1.0 (+ (pow b 2.0) (* d -4.0)))) (* sigma (* d (- -3.0 (* d 8.0))))) (if (<= sigma 3.475453701680798e-220) (* d (+ (* d (* b -3.0)) (* (pow sigma 3.0) -4.0))) (+ (* (pow sigma 3.0) (+ 1.0 (+ (pow b 2.0) (* d -4.0)))) (* sigma (* d (- -3.0 (* d 8.0)))))))) (14160 11.770612424787023 (if (<= sigma -5.6621865495038963e-64) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0)))) (if (<= sigma -1.6580196507783147e-172) (* sigma (* d (- -3.0 (* d 8.0)))) (if (<= sigma 3.475453701680798e-220) (* d (+ (* d (* b -3.0)) (* (pow sigma 3.0) -4.0))) (if (<= sigma 1.2164078095829194e-57) (* d (- (* (pow sigma 3.0) -4.0) (* sigma (fma d 8.0 3.0)))) (+ (* 4.0 (pow sigma 5.0)) (* (pow sigma 3.0) (+ 1.0 (* d -4.0))))))))) (13832 19.051835734323998 (if (<= sigma -1.6580196507783147e-172) (* sigma (* d (- -3.0 (* d 8.0)))) (if (<= sigma 3.475453701680798e-220) (* d (+ (* d (* b -3.0)) (* (pow sigma 3.0) -4.0))) (* d (- (* (pow sigma 3.0) -4.0) (* sigma (fma d 8.0 3.0))))))) (7432 19.050260214245416 (if (<= sigma -1.6580196507783147e-172) (* sigma (* d (- -3.0 (* d 8.0)))) (if (<= sigma 3.475453701680798e-220) (* d (+ (* d (* b -3.0)) (* (pow sigma 3.0) -4.0))) (* sigma (* d (- -3.0 (* d 8.0))))))) (576 22.001152705839928 (* sigma (* d (- -3.0 (* d 8.0))))) (448 36.92040377944698 (* d (* sigma (* d -8.0))))))","end":0.13201184218813103,"end-est":0.142910009768442,"identifier":"#f","input":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","link":"6da1555515d9a51748f2f2ca08d341ca7743deae.1.6","name":"4 * sigma ^ 5         + 5 * b * sigma ^ 4         + (1 + b^2 - 4 * d)* sigma ^ 3         - 10 * b * d * sigma ^2         - (8 * d^2 + 3 * b^2 * d + 3 * d) * sigma         - 3 * b * d ^ 2","output":"(+ (* (pow sigma 3.0) (+ (fma d -4.0 (fma b b 1.0)) (* sigma (* b 5.0)))) (fma 4.0 (pow sigma 5.0) (* d (- (* d (* b -3.0)) (* sigma (fma d 8.0 (* 3.0 (fma b b 1.0))))))))","pre":"(and (and (and (<= -10.0 sigma) (<= sigma 10.0)) (and (<= -10.0 b) (<= b 10.0))) (and (<= -10.0 d) (<= d 10.0)))","prec":"binary64","preprocess":"()","spec":"(- (- (- (+ (+ (* 4.0 (pow sigma 5.0)) (* (* 5.0 b) (pow sigma 4.0))) (* (- (+ 1.0 (pow b 2.0)) (* 4.0 d)) (pow sigma 3.0))) (* (* (* 10.0 b) d) (pow sigma 2.0))) (* (+ (+ (* 8.0 (pow d 2.0)) (* (* 3.0 (pow b 2.0)) d)) (* 3.0 d)) sigma)) (* (* 3.0 b) (pow d 2.0)))","start":0.13115584257481164,"start-est":0.14453125,"status":"ex-start","target":false,"target-prog":"#f","time":18602.447021484375,"vars":["sigma","b","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 7.348713671070304) (6528 1.0320194480878067) ((708 13.409547814322647 (if (<= x -2.022426879871891e-140) (- (/ (* z z) (/ x -0.5)) x) z)) (260 13.57381028453998 (if (<= x -2.022426879871891e-140) (- x) z)) (64 30.990662739834747 z)))","end":1.0320194480878067,"end-est":21.661230713585677,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"690acfa539f2250f6a60d611c4022ff18440abc5.1.6","name":"sqrt(x*x+y*y+z*z)","output":"(hypot z x)","pre":"(and (and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0))) (and (<= -1.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":7.348713671070304,"start-est":6.98106831811878,"status":"imp-start","target":false,"target-prog":"#f","time":5357.829345703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.014) (13248 0.005875) ((704 0.014 (+ (* z z) (+ (* x x) (* y y)))) (448 18.3372132347807 (+ (* z z) (* x x))) (324 30.40336295167982 (if (<= x -1.3927471328382667e-139) (* x x) (* z z))) (192 35.87128835863319 (* x x))))","end":0.005875,"end-est":0.0078125,"identifier":"#f","input":"(+ (+ (* x x) (* y y)) (* z z))","link":"bcc0f6639b0da0d52ab7a847f7f6cb693d1716ce.1.6","name":"x*x+y*y+z*z","output":"(fma x x (fma y y (* z z)))","pre":"(and (and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0))) (and (<= -1.0 z) (<= z 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x x) (* y y)) (* z z))","start":0.014,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":4112.5986328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009948120312590146) (6784 0.004625) ((784 15.935510730666177 (if (<= sx -2.035974753331107e-103) (* sx ry) (if (<= sx -9.124641082144748e-135) (* sy (- rx)) (if (<= sx -3.484461172028533e-139) (* sx ry) (if (<= sx 3.5428728009352776e-223) (* sy (- rx)) (* sx ry)))))) (448 0.009948120312590146 (- (* sx ry) (* sy rx))) (192 22.839806655526456 (* sx ry))))","end":0.004625,"end-est":0.01171875,"identifier":"#f","input":"(- (* sx ry) (* sy rx))","link":"d3be8e66828938909fcc80d9ac99a6a8dd59451d.1.6","name":"sx * ry - sy * rx","output":"(fma sx ry (* sy (- rx)))","pre":"(and (and (and (and (<= -1.0 sx) (<= sx 1.0)) (and (<= -1.0 ry) (<= ry 1.0))) (and (<= -1.0 sy) (<= sy 1.0))) (and (<= -1.0 rx) (<= rx 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (* sx ry) (* sy rx))","start":0.009948120312590146,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":3415.90869140625,"vars":["sx","ry","sy","rx"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.2628680453140324) (7360 0.2633161656266225) ((1088 0.2628680453140324 (/ (* v (+ 0.03 (* v 2.51))) (+ (* v (+ (* v 2.43) 0.59)) 0.14))) (832 1.0843406408046115 (/ (* v (+ 0.03 (* v 2.51))) (+ 0.14 (* v 0.59)))) (448 1.277516933773314 (* v (+ 0.21428571428571425 (* v 17.02551020408163)))) (192 2.0541524451186843 (* v 0.21428571428571425)) (64 60.57016425538694 1.0329218106995883)))","end":0.2633161656266225,"end-est":0.224941259768442,"identifier":"#f","input":"(/ (* v (+ (* v 2.51) 0.03)) (+ (* v (+ (* v 2.43) 0.59)) 0.14))","link":"5bb7cf9a77e9e52c5f9458722d3fd9bc868628d9.1.6","name":"(v * (v * 2.51 + 0.03)) / (v * (v * 2.43 + 0.59) + 0.14)","output":"(/ (* v (fma v 2.51 0.03)) (+ (* v (+ (* v 2.43) 0.59)) 0.14))","pre":"(and (<= 0.0 v) (<= v 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* v (+ (* v 2.51) 0.03)) (+ (* v (+ (* v 2.43) 0.59)) 0.14))","start":0.2628680453140324,"start-est":0.228847509768442,"status":"ex-start","target":false,"target-prog":"#f","time":5298.880615234375,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 16.94407367021765) (19904 0.2534199250014422) ((13376 3.657207229434441 (/ v (/ (fma v d e) (fma v a b)))) (832 3.6678113965282595 (* v (/ (+ b (* v a)) (+ e (* v d))))) (708 13.426012406590488 (if (<= v 2.3019280558336506e-40) (* v (/ (+ b (* v a)) e)) (/ (+ b (* v a)) d))) (708 8.854255992944939 (if (<= d 6.010450512571168e-121) (* v (/ (+ b (* v a)) e)) (* v (/ b (+ e (* v d)))))) (580 17.681936635216786 (if (<= v 2.3019280558336506e-40) (/ b (/ e v)) (/ (+ b (* v a)) d))) (320 18.338584744553273 (* v (/ b e))) (320 18.34351007983588 (/ b (/ e v))) (192 59.59632991212073 (/ a c))))","end":0.2534199250014422,"end-est":0.296875,"identifier":"#f","input":"(/ (* v (+ (* v a) b)) (+ (* v (+ (* v c) d)) e))","link":"db563d34c12c1252df27d87dd05b73cfd8f8e0dc.1.6","name":"(v * (v * a + b)) / (v * (v * c + d) + e)","output":"(* v (/ (fma v a b) (fma v (fma v c d) e)))","pre":"(and (and (and (and (and (and (<= 0.0 v) (<= v 1.0)) (and (<= 0.0 a) (<= a 1.0))) (and (<= 0.0 b) (<= b 1.0))) (and (<= 0.0 c) (<= c 1.0))) (and (<= 0.0 d) (<= d 1.0))) (and (<= 0.0 e) (<= e 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (* v (+ (* v a) b)) (+ (* v (+ (* v c) d)) e))","start":16.94407367021765,"start-est":18.45229278779862,"status":"imp-start","target":false,"target-prog":"#f","time":9614.765380859375,"vars":["v","a","b","c","d","e"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.026274959043104545) (6976 0.02114624062518029) ((1644 30.580742763123354 (if (<= rx -3.9051289414490135e-128) (* lx rx) (if (<= rx -2.6516075145045055e-234) (* lz rz) (if (<= rx -3.565504585512968e-285) (* ly ry) (if (<= rx 1.0439488802069849e-285) (* lz rz) (if (<= rx 4.377838190219483e-215) (* ly ry) (if (<= rx 3.7579911273868207e-196) (* lz rz) (if (<= rx 1.187129585538344e-163) (* ly ry) (if (<= rx 1.6074020999116723e-82) (* lz rz) (if (<= rx 1.6050320026483795e-66) (* lx rx) (if (<= rx 4.5176145059163775e-60) (* lz rz) (if (<= rx 9.955760451146154e-43) (* ly ry) (* lx rx))))))))))))) (968 7.204411901212945 (if (<= (* lx rx) -9e-278) (+ (* lx rx) (* lz rz)) (if (<= (* lx rx) 2e-246) (+ (* lz rz) (* ly ry)) (+ (* lx rx) (* lz rz))))) (968 6.686203475734334 (if (<= (* lz rz) -3.560962785669186e-291) (+ (* lx rx) (* lz rz)) (if (<= (* lz rz) 1.7302150274082178e-282) (+ (* lx rx) (* ly ry)) (+ (* lx rx) (* lz rz))))) (712 25.209915290065386 (if (<= (* lz rz) -3.560962785669186e-291) (* lz rz) (if (<= (* lz rz) 7.844061952674895e-283) (* ly ry) (* lz rz)))) (712 15.755765393177272 (if (<= ly -9.656557314608696e-75) (* ly ry) (if (<= ly 4.382862900169179e-131) (+ (* lx rx) (* lz rz)) (* ly ry)))) (704 0.026024959043104545 (+ (* lx rx) (+ (* lz rz) (* ly ry)))) (192 36.932621768608165 (* lz rz))))","end":0.02114624062518029,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* lx rx) (* ly ry)) (* lz rz))","link":"b894c3fd644e42268a713e60f151ba61c57dfbb7.1.6","name":"lx * rx + ly * ry + lz * rz","output":"(+ (* lx rx) (fma lz rz (* ly ry)))","pre":"(and (and (and (and (and (and (<= -1.0 lx) (<= lx 1.0)) (and (<= -1.0 rx) (<= rx 1.0))) (and (<= -1.0 ly) (<= ly 1.0))) (and (<= -1.0 ry) (<= ry 1.0))) (and (<= -1.0 lz) (<= lz 1.0))) (and (<= -1.0 rz) (<= rz 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* lx rx) (* ly ry)) (* lz rz))","start":0.026274959043104545,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":7248.033447265625,"vars":["lx","rx","ly","ry","lz","rz"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"06206279d7e0442e538e8f7d92915193a421512b.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"gt-target","target":54.38069851310196,"target-prog":"(- (sqrt (+ x 42.0)) (sqrt x))","time":4286.982421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"963c69dda0ff0b7a5c92fcc19f6d26745c682adb.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"gt-target","target":52.97818568054656,"target-prog":"(- (sqrt (+ x 4.0)) (sqrt x))","time":4559.785400390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"260c83ab65e212fefc49fb13e48c29b7e60c1d47.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"eq-target","target":0.3369603390679987,"target-prog":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","time":3991.7099609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"ae488189aed4fd04b9afc7c72b818d89eda836f3.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"imp-start","target":false,"target-prog":"#f","time":4027.68603515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 3.5433692639213694) (13504 0.3308447375050482) ((13120 3.5433692639213694 (- (sqrt (+ x 2.0)) (sqrt x))) (6592 46.30694192549891 (sqrt (/ 1.0 x))) (6592 46.30694192549892 (/ 1.0 (sqrt x))) (6464 53.45358221299779 (sqrt 2.0))))","end":0.3308447375050482,"end-est":0.3053512695368841,"identifier":"#f","input":"(- (sqrt (+ x 2.0)) (sqrt x))","link":"e824e3e44a0e3dc2848d95c069928bc4d40cc9cf.1.6","name":"sqrt(x + 2) - sqrt(x)","output":"(/ (+ x (- 2.0 x)) (+ (sqrt (+ x 2.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 2.0)) (sqrt x))","start":3.5433692639213694,"start-est":3.414670081299767,"status":"imp-start","target":false,"target-prog":"#f","time":4805.542236328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.243) (13120 0.243) ((6592 46.83607108393404 (* (sqrt x) 2.0)) (6464 64.0 (sqrt -5.0))))","end":0.243,"end-est":0.28515625,"identifier":"#f","input":"(+ (sqrt (- x 5.0)) (sqrt x))","link":"f1f3d2792a23029b5c643f460ad6e76af54178c4.1.6","name":"sqrt(x - 5) + sqrt(x)","output":"(+ (sqrt (+ x -5.0)) (sqrt x))","pre":"(and (<= 1.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(+ (sqrt (- x 5.0)) (sqrt x))","start":0.243,"start-est":0.28515625,"status":"ex-start","target":false,"target-prog":"#f","time":3881.879638671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 13.8820717883797) (13504 0.3369603390679987) ((13120 13.8820717883797 (- (sqrt (+ x 1.0)) (sqrt x))) (7232 53.787935653107716 (/ (+ x (- 1.0 x)) (+ (sqrt x) (+ 1.0 (* x 0.5))))) (64 54.85190280474889 1.0)))","end":0.3369603390679987,"end-est":0.24609375,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"4804b01a4bf1f35a3194d034544e8d0f1d639d55.1.6","name":"sqrt(x+1) - sqrt(x)","output":"(/ (+ x (- 1.0 x)) (+ (sqrt (+ x 1.0)) (sqrt x)))","pre":"(and (<= 1.0 x) (<= x 1000000000.0))","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":13.8820717883797,"start-est":13.875544780309257,"status":"gt-target","target":13.8820717883797,"target-prog":"(- (sqrt (+ x 1.0)) (sqrt x))","time":4244.341796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26496 30.54784461294117) (72904 0.5325584971500258) ((13764 9.663178602632197 (if (<= r 1e-155) (pow d -2.0) (/ (/ (* 2.0 (fma (- d) (/ 1.0 (hypot d r)) 1.0)) r) r))) (7428 9.703407789552672 (if (<= r 1e-155) (pow d -2.0) (/ (/ (* 2.0 (+ 1.0 (* d (/ -1.0 (hypot d r))))) r) r))) (7300 9.749034489180396 (if (<= r 1e-155) (pow d -2.0) (/ (/ (* 2.0 (- 1.0 (/ d (hypot r d)))) r) r))) (6660 11.047582375477635 (if (<= r 1e-155) (pow d -2.0) (/ (/ (* 2.0 (- 1.0 (/ d r))) r) r))) (836 11.131332375477637 (if (<= r 1e-155) (/ 1.0 (* d d)) (/ (/ (* 2.0 (- 1.0 (/ d r))) r) r))) (452 11.136026488766069 (if (<= r 1e-155) (/ (/ 1.0 d) d) (/ (/ 2.0 r) r))) (452 11.132453368453477 (if (<= r 1e-155) (/ 1.0 (* d d)) (/ (/ 2.0 r) r))) (320 31.82121345742401 (/ (/ 2.0 r) r))))","end":0.5325584971500258,"end-est":0.50133344543558,"identifier":"#f","input":"(* (/ 2.0 (pow r 2.0)) (- 1.0 (/ d (sqrt (+ (pow d 2.0) (pow r 2.0))))))","link":"0bebafc8b1c6f870508a07f8a27a217dbc441dcc.1.6","name":"(2/r^2)*(1-d/sqrt(d^2+r^2))","output":"(if (<= (* (/ 2.0 (pow r 2.0)) (- 1.0 (/ d (sqrt (+ (pow r 2.0) (pow d 2.0)))))) 0.0) (pow d -2.0) (if (<= (* (/ 2.0 (pow r 2.0)) (- 1.0 (/ d (sqrt (+ (pow r 2.0) (pow d 2.0)))))) INFINITY) (* (pow r -2.0) (fma (/ d (hypot d r)) -2.0 2.0)) (pow d -2.0)))","pre":"(and (and (<= 0.0 r) (<= r 1.0)) (and (<= 0.0 d) (<= d 10.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ 2.0 (pow r 2.0)) (- 1.0 (/ d (sqrt (+ (pow d 2.0) (pow r 2.0))))))","start":30.54784461294117,"start-est":30.186825720361224,"status":"imp-start","target":false,"target-prog":"#f","time":12392.64794921875,"vars":["r","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0.014344360937770435) (6912 0.00775) ((6656 0.014344360937770435 (/ x (hypot 1.0 x))) (64 1.110589440842095 x)))","end":0.00775,"end-est":0.0078125,"identifier":"#f","input":"(/ x (sqrt (+ 1.0 (pow x 2.0))))","link":"a45db89b78a07067d6d14c730249fd7f28ac86ae.1.6","name":"x/(sqrt(1+x^2))","output":"(* x (pow (+ 1.0 (* x x)) -0.5))","pre":"(and (<= -1000.0 x) (<= x 1000.0))","prec":"binary64","preprocess":"()","spec":"(/ x (sqrt (+ 1.0 (pow x 2.0))))","start":0.014344360937770435,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3911.5205078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 15.169603480385707) (6656 0.010823120312590145) ((712 0.43147971237457955 (if (<= x -11.888375043601366) (/ x (- (/ -0.5 x) x)) (if (<= x 0.2111981702214649) x (/ x (+ x (/ 0.5 x)))))) (580 0.5249481148657349 (if (<= x -11.888375043601366) (/ x (- (/ -0.5 x) x)) (if (<= x 0.2111981702214649) x 1.0))) (328 0.6011582985239649 (if (<= x -11.888375043601366) -1.0 (if (<= x 0.2111981702214649) x 1.0))) (196 15.261416231605883 (if (<= x 0.2111981702214649) x 1.0)) (64 46.89234800868782 1.0)))","end":0.010823120312590145,"end-est":0.015625,"identifier":"#f","input":"(/ x (sqrt (+ 1.0 (pow x 2.0))))","link":"f27af4bfdca8e8a844e662308fe4ddedae2de3cf.1.6","name":"x/(sqrt(1+x^2))","output":"(/ x (hypot 1.0 x))","pre":"(and (<= -1.79e+308 x) (<= x 1.79e+308))","prec":"binary64","preprocess":"()","spec":"(/ x (sqrt (+ 1.0 (pow x 2.0))))","start":15.169603480385707,"start-est":15.515272607436348,"status":"imp-start","target":false,"target-prog":"#f","time":4711.553466796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.26175) (6528 0.00175) ())","end":0.00175,"end-est":0,"identifier":"#f","input":"(/ 1.0 (sqrt x))","link":"5e83e2048c63bc45bc74935da25354d0c2e33e7e.1.6","name":"1/sqrt(x)","output":"(pow x -0.5)","pre":"(and (<= 0.0 x) (<= x 1000000.0))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt x))","start":0.26175,"start-est":0.25,"status":"ex-start","target":false,"target-prog":"#f","time":1626.69970703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01125) (448 0.02125) ((456 2.05666757551774 (if (<= x -1794.7736915636747) (/ x y) (if (<= x 4.826524630701883e-6) (/ 1.0 y) (/ x y)))) (320 0.01125 (/ (+ 1.0 x) y)) (192 21.61330227332716 (/ 1.0 y))))","end":0.02125,"end-est":0.0078125,"identifier":"#f","input":"(/ (+ x 1.0) y)","link":"33113ef88eb54e2595d5d8756c4011b0a8a0cbc2.1.6","name":"(x + 1)/y","output":"(+ (/ 1.0 y) (/ x y))","pre":"(and (and (<= -1.79e+308 x) (<= x 1.79e+308)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) y)","start":0.01125,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3465.031494140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0145) (448 0.019992447401789338) ((320 0.0145 (/ (+ 1.0 x) y)) (192 2.7883882398069284 (/ 1.0 y))))","end":0.019992447401789338,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x 1.0) y)","link":"38c06affc88bd35416b427321ad4b67118abadcf.1.6","name":"(x + 1)/y","output":"(+ (/ 1.0 y) (/ x y))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1000000000.0 y) (<= y 1000000000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) y)","start":0.0145,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":3231.627197265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.016) (320 0.016) ((192 61.781178016121586 (/ x y)) (192 1.7077736139458564 (/ 1.0 y))))","end":0.016,"end-est":0.0078125,"identifier":"#f","input":"(/ (+ x 1.0) y)","link":"9a60ac58207798885aad6af7102dfb4e1d8d8204.1.6","name":"(x + 1)/y","output":"(/ (+ x 1.0) y)","pre":"(and (and (<= -1000.0 x) (<= x 1000.0)) (and (<= -1000.0 y) (<= y 1000.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) y)","start":0.016,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2507.505859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01425) (320 0.01425) ((192 1.2944212970095161 (/ 1.0 y))))","end":0.01425,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x 1.0) y)","link":"a501257e5480ec08da423fe16dd8fc524b95b120.1.6","name":"(x + 1)/y","output":"(/ (+ x 1.0) y)","pre":"(and (and (<= -1.0 x) (<= x 1.0)) (and (<= -1.0 y) (<= y 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) y)","start":0.01425,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3462.72607421875,"vars":["x","y"]}]}